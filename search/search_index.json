{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Eugene' learning Record in the Life","text":""},{"location":"#getting-started","title":"Getting Started","text":"<p>\u505a\u8fd9\u4e2a\u7f51\u7ad9\u7684\u521d\u8877\u662f\u4e3a\u4e86\u8f93\u51fa\u81ea\u5df1\u5bf9\u4e8e\u6240\u5b66\u77e5\u8bc6\u7684\u7406\u89e3\uff0c\u5e76\u4e14\u80fd\u591f\u5728\u8fd9\u91cc\u5c06\u81ea\u5df1\u7684\u60f3\u6cd5\u516c\u5e03\u5728\u7f51\u4e0a\uff0c\u589e\u52a0\u81ea\u5df1\u4e0e\u5916\u754c\u7684\u4ea4\u6d41\u3002</p>"},{"location":"#recently","title":"Recently","text":"<p>\u6700\u8fd1\u770b\u5230ARC\u5b98\u7f51\u660e\u5e74\u5728Kaggle\u4e0a\u516c\u5e03\u7684\u6bd4\u8d5b-\u662f\u6709\u5173\u4eba\u5de5\u667a\u80fd\u5982\u4f55\u5728\u52a8\u6001\u7684\u8fc7\u7a0b\u4e2d\u53bb\u89c4\u5212\u7684\uff0c\u6211\u4e5f\u60f3\u6253\u9020\u4e00\u4e2a\u5c5e\u4e8e\u6211\u81ea\u5df1\u7684agent</p> <p>\u4e0b\u9762\u8fd9\u53e5\u8bdd\u662f\u6211\u770b\u5f3a\u5316\u5b66\u4e60\u4e4b\u7236Sutton\u7684\u7f51\u9875\uff1a</p> <p>For the purposes of artificial intelligence, psychology, control theory and related fields, the universe is well thought of as consisting of exactly two subsystems that exchange signals over time, where the signals in one direction are thought of as choices and the signals in the other direction are thought of as informing the choices.</p> <p>Sutton\u7684\u5927\u6982\u7684\u76ee\u6807\u662f\u60f3\u8981\u505a\u6210\u50cf\u6d41\u6d6a\u5730\u7403\u4e8c\u90a3\u6837\uff0c\u6709\u4e00\u4e2a\u4eba\u5de5\u667a\u80fd\u96c6\u7fa4\u80fd\u591f\u5b9e\u65f6\u5904\u7406\u5916\u90e8\u4fe1\u606f\uff0c\u5e76\u4e14\u96c6\u4f53\u534f\u4f5c\uff0c\u5b8c\u6210\u4e00\u5b9a\u7684\u4efb\u52a1\u3002</p> <ol> <li>Electrodynamics</li> <li>Algorithm</li> <li>Reinforcement Learning </li> </ol> <p>\u8fdb\u5ea6\uff1a</p> <ol> <li>ED Chap1 </li> <li>Algorithm:Chap4(\u4f46\u662f\u524d\u51e0\u7ae0\u7684\u7b14\u8bb0\u6ca1\u6709\u66f4\u65b0)</li> </ol>"},{"location":"#notes","title":"Notes","text":"<ol> <li>Electrodynamics</li> <li>The introduction to Algorithm(Notes and Some Solutions of Probs)</li> <li>Reinforcement learning 2nd version.</li> </ol>"},{"location":"#license","title":"License","text":"<p>Licensed under the MIT License.</p>"},{"location":"Algorithms/","title":"Index","text":""},{"location":"Algorithms/Preface/","title":"Algorithm","text":"<p>\u8fd9\u4e9b\u7b14\u8bb0\u4ee3\u8868\u4e86\u4e00\u6bb5\u6709\u610f\u8bc6\u7684\u65c5\u7a0b\u7684\u5f00\u59cb\uff1a\u8fd9\u6bb5\u65c5\u7a0b\u6211\u60f3\u901a\u8fc7\u7b97\u6cd5\u6765\u7406\u89e3\u89e3\u51b3\u95ee\u9898\u7684\u5b9e\u9645\u505a\u6cd5\uff0c\u800c\u975e\u62bd\u8c61\u3002\u6211\u5e76\u975e\u4e00\u4e2a\u771f\u6b63\u7684Coder\uff0c\u6240\u4ee5\u4e0e\u65f6\u4ff1\u8fdb\uff0c\u5b66\u4f1a\u5229\u7528AI\u6765\u5199\u4ee3\u7801\uff08\u6210\u4e3a\u4e00\u4e2aOrganiser/Designer\uff09\u6216\u8005\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u5728\u8fd9\u8d9f\u65c5\u9014\u4e2d\u5c24\u4e3a\u91cd\u8981\u3002</p>"},{"location":"Algorithms/Preface/#_1","title":"\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u7b14\u8bb0\u5b58\u5728\uff1f","text":"<p>\u4e4b\u524d\u6211\u662f\u4e00\u4e2a\u4e0d\u64c5\u957f\u8f93\u51fa\u7684\u4eba\uff0c\u5230\u6700\u8fd1\u6211\u624d\u660e\u767d\"\u53cd\u9988\u7684\u91cd\u8981\u6027\"\uff0c\u5373\u8f93\u51fa\u81ea\u5df1\u6240\u5b66\u7684\u77e5\u8bc6\u6bd4\u5355\u7eaf\u7684\u8bb0\u5f55\u7b14\u8bb0\u66f4\u91cd\u8981\uff0c\u6240\u4ee5\u6709\u4e86\u8fd9\u4e2a\u7b14\u8bb0\uff0c\u5e76\u4e14\u6b22\u8fce\u5916\u90e8\u53cd\u9988\uff08Reader\u7684feedback\uff09\u3002</p> <p>\u4e24\u4e2a\u76ee\u6807\uff1a</p> <ol> <li>\u6210\u4e3a\u4e00\u4e2a\u4f1a\u89e3\u51b3\u95ee\u9898\u7684\u4eba</li> </ol>"},{"location":"Algorithms/Preface/#_2","title":"\u8fd9\u4e9b\u7b14\u8bb0\u4e3a\u4e86\u8c01\uff1f","text":"<p>\u9996\u5148\uff0c\u8fd9\u4e9b\u7b14\u8bb0\u662f\u4e3a\u6211\u672a\u6765\u7684\u81ea\u5df1\u51c6\u5907\u7684\u3002\u6211\u5728\u8fd9\u91cc\u5199\u4e0b\u6211\u5e0c\u671b\u5728\u7b2c\u4e00\u6b21\u9047\u5230\u8fd9\u4e9b\u4e3b\u9898\u65f6\u5c31\u80fd\u62e5\u6709\u7684\u89e3\u91ca\u2014\u2014\u6e05\u6670\u3001\u7b80\u6d01\uff0c\u5e76\u4e14\u4fa7\u91cd\u4e8e\u5b9e\u9645\u5e94\u7528\u800c\u4e0d\u662f\u5bc6\u96c6\u7684\u5b66\u672f\u7406\u8bba\u3002\u5982\u679c\u5b83\u4eec\u5728\u65c5\u9014\u4e2d\u5076\u7136\u5e2e\u52a9\u5230\u4e86\u4e00\u4e2a\u670b\u53cb\u6216\u540c\u4e8b\uff0c\u6211\u4f1a\u8ba4\u4e3a\u90a3\u662f\u4e00\u4e2a\u7f8e\u597d\u7684\u989d\u5916\u6536\u83b7\u3002</p> <p>\u5176\u6b21\uff0c\u662f\u4e3a\u4e86\u90a3\u4e9b\u540c\u65f6\u5728\u5b66\u4e60\u7b97\u6cd5\u7684\u4eba\uff0c\u5e0c\u671b\u8fd9\u4e9b\u7b14\u8bb0\u5bf9\u4e8e\u4f60\u7684\u5b66\u4e60\u6709\u6240\u5e2e\u52a9\u3002</p>"},{"location":"Algorithms/Preface/#_3","title":"\u8fd9\u4e9b\u7b14\u8bb0\u90fd\u5305\u542b\u4e9b\u4ec0\u4e48\uff1f\uff08\u52a8\u6001\u66f4\u65b0\uff09","text":""},{"location":"Algorithms/Preface/#chap4","title":"Chap4\uff1a\u5206\u51b6\u6cd5\uff1a","text":"<ol> <li>\u5206\u51b6\u6cd5\u7684\u6b65\u9aa4</li> <li>\u9012\u5f52\u5f0f\uff08recurrence\uff09</li> <li>\u6700\u5927\u5b50\u6570\u7ec4\u95ee\u9898</li> <li>Strassen Algorithm for Matrix Multiplication </li> </ol>"},{"location":"Algorithms/Preface/#reference","title":"Reference(\u53c2\u8003)","text":"<p>\u8fd9\u4e9b\u7b14\u8bb0\u4e3b\u8981\u53c2\u8003\u7684\u662fIntroduction to Algorithm 3rd(\u4e2d\u6587\u7248\uff1a\u7b97\u6cd5\u5bfc\u8bba)</p>"},{"location":"Algorithms/Preface/#_4","title":"Preface","text":""},{"location":"Algorithms/Chap04/Note/Note/","title":"Chap 4 Divide and Conquer(\u5206\u51b6\u6cd5)","text":"<p>\u672c\u7ae0\u901a\u8fc7\u4e24\u4e2a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u5206\u51b6\u6cd5\uff08\u81ea\u5df1\u8c03\u7528\u81ea\u5df1\u7684\u65b9\u6cd5\uff0c\u5f88\u6709\u610f\u601d\uff09\uff0c\u4e00\u4e2a\u662f\u6700\u5927\u5b50\u6570\u7ec4\u95ee\u9898\uff0c\u53e6\u4e00\u4e2a\u662f\u77e9\u9635\u4e58\u6cd5\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#1","title":"1. \u5206\u51b6\u6cd5\u7684\u6b65\u9aa4\uff1a","text":"<p>\u6839\u636e\u5206\u51b6\u6cd5\u7684\u540d\u5b57\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e2d\u56fd\u53e4\u5178\u6210\u8bed\u6765\u7406\u89e3-\u5206\u800c\u6cbb\u4e4b\uff0c\u4e5f\u5c31\u662f\uff1a\u5f53\u4f60\u8981\u89e3\u51b3\u4e00\u4e2a\u8d39\u65f6\uff0c\u4f46\u662f\u53c8\u6ca1\u6709\u4ec0\u4e48\u65b0\u65b9\u6cd5\u52a0\u5feb\u7684\u95ee\u9898\u65f6\uff0c\u4f60\u53ef\u4ee5\u5148\u5c06\u8fd9\u4e2a\u95ee\u9898\u5206\u6210\u5f88\u591a\u4e2a\u66f4\u5c0f\u89c4\u6a21\u7684\u5b50\u95ee\u9898\uff0c\u7136\u540e\u518d\u9010\u4e2a\u89e3\u51b3\uff0c\u8fd9\u65f6\u5019\u4f60\u6240\u6d88\u8017\u7684\u8d44\u6e90\u591a\u4e86\uff08\u4eba\u529b\u7b49\uff09\uff0c\u4f46\u662f\u89e3\u51b3\u95ee\u9898\u7684\u65f6\u95f4\u51cf\u5c11\u4e86\u3002</p> <p>\u5206\u51b6\u6cd5\u7684\u6b65\u9aa4\u662f\uff1a</p> <ol> <li>Divide(\u5206\u89e3)\uff1a\u5c06\u5927\u95ee\u9898\u5206\u89e3\u6210\u82e5\u5e72\u4e2a\u5b50\u95ee\u9898</li> <li>Conquer(\u89e3\u51b3)\uff1a\u5c06\u5b50\u95ee\u9898\u9010\u4e2a\u89e3\u51b3</li> <li>Combine(\u5408\u5e76)\uff1a\u5c06\u6bcf\u4e2a\u5b50\u95ee\u9898\u6240\u5f97\u5230\u7684\u7ed3\u679c\u5408\u5e76\u4e3a\u5927\u95ee\u9898\u7684\u7b54\u6848\u3002</li> </ol> <p>\u6bd4\u5982\uff0c\u670910\u5757\u786c\u5e01\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u5176\u4e2d\u4e00\u679a\u52a3\u8d28\u786c\u5e01(\u66f4\u8f7b)\uff0c\u5982\u679c\u53ea\u901a\u8fc7\u4e00\u6746\u79e4\uff0c\u6211\u4eec\u6700\u591a\u9700\u89819\u6b21\u624d\u80fd\u627e\u51fa\u3002\u5982\u679c\u6211\u4eec\u5148\u628a10\u4e2a\u786c\u5e01\uff0c\u4e24\u4e24\u8fdb\u884c\u5206\u7ec4\uff0c\u7136\u540e\u6bcf\u4e00\u7ec4\u90fd\u53bb\u6bd4\u8f83\uff0c\u90a3\u4e48\u6700\u591a\u9700\u89815\u6b21\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff1b</p> <p>\u518d\u6bd4\u5982\uff0c\u4f60\u6709\u4e00\u4e2a\u73ed\u7684\u4eba\uff0830\u4eba\uff09\uff0c\u4f60\u9700\u8981\u5bf9\u8eab\u9ad8\u8fdb\u884c\u6392\u5e8f\uff0c\u5bf9\u4e8e\u5206\u51b6\u6cd5\u6765\u8bf4\uff0c\u5c31\u9700\u8981\u5c0630\u4e2a\u4eba\u5206\u62102\u7ec4\uff0c\u8fd9\u4e24\u7ec4\u4eba\u8eab\u9ad8\u6392\u5e8f\u5b8c\u4e4b\u540e\u518d\u5408\u5e76\u8d77\u6765\uff08\u4f46\u662f\u5176\u5b9e\u53ef\u4ee5\u5206\u621015\u7ec4\uff0c\u6bcf\u4e00\u7ec4\u7684\u4e24\u4e2a\u4eba\u8fdb\u884c\u8eab\u9ad8\u6bd4\u8f83\uff0c\u6240\u6709\u7ec4\u6392\u5e8f\u597d\u4e4b\u540e\uff0c\u4e24\u7ec4\u4e24\u7ec4\u4e4b\u95f4\u8fdb\u884c\u5408\u5e76\uff09</p>"},{"location":"Algorithms/Chap04/Note/Note/#2recurrence","title":"2.\u9012\u5f52\u5f0f\uff08recurrence\uff09","text":"<p>\u5bf9\u4e8e\u5206\u51b6\u6cd5\u6765\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u5c31\u662f\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u95ee\u9898\uff0c\u67d0\u4e00\u4e2a\u65b9\u6cd5\u7684\u9012\u5f52\u5f0f\uff0c\u4e00\u822c\u7684\u5f62\u5f0f\u662f\u8fd9\u6837\u7684\uff1a $$ T(n) = aT(n/b)+T(n) $$ \u5176\u4e2dT(n)\u8868\u793a\u5f53\u8f93\u5165\u7684\u89c4\u6a21\u4e3an\u65f6\u8be5\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\uff0ca\u8868\u793a\u6bcf\u4e00\u6b21\u9700\u8981\u5206\u89e3\u6210\u591a\u5c11\u4e2a\u76f8\u540c\u89c4\u6a21\u7684\u5b50\u95ee\u9898\uff0cn/b\u8868\u793a\u6bcf\u6b21\u5b50\u95ee\u9898\u7684\u89c4\u6a21\u5927\u5c0f\u3002</p> <p>\u5bf9\u4e8e\u4e0a\u9762\u8fd9\u79cd\u5f62\u5f0f\u7684\u9012\u5f52\u5f0f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u4f7f\u7528The master Method \uff08\u4e3b\u65b9\u6cd5\uff09\u89e3\u51b3\uff0c\u5bf9\u4e8e\u5176\u4ed6\u5f62\u5f0f\u7684\u9012\u5f52\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u6811\u6216\u8005\u66ff\u4ee3\u6cd5\uff08intuition\uff0cguess\uff09\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#3","title":"3. \u6700\u5927\u5b50\u6570\u7ec4\u95ee\u9898","text":""},{"location":"Algorithms/Chap04/Note/Note/#1_1","title":"1. \u95ee\u9898\uff1a","text":"<p>\u9996\u5148\uff0c\u5728\u65e5\u5e38\u751f\u6d3b\u4e2d\u4f1a\u6709\u5f88\u591a\u4eba\u559c\u6b22\u6295\u8d44\u4e70\u80a1\u7968\uff0c\u6bcf\u4e00\u5929\u7684\u80a1\u4ef7\u90fd\u4f1a\u53d8\u5316\uff0c\u95ee\u9898\u662f\uff1a\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u5f88\u806a\u660e\u7684\u6295\u8d44\u8005\uff0c\u5047\u8bbe\u4f60\u77e5\u9053\u672a\u676520\u5929\u7684\u80a1\u4ef7\uff08\u5f53\u7136\u8fd9\u4e0d\u73b0\u5b9e\uff09\uff0c\u4f60\u4f1a\u9009\u62e9\u5728\u4f55\u65f6\u4e70\u5165\u4f55\u65f6\u5356\u51fa\uff0c\u6765\u83b7\u5f97\u6700\u5927\u7684\u6536\u76ca\u3002</p> <p>\u4e0a\u9762\u5c31\u662f\u6211\u4eec\u7684\u80a1\u4ef7\u53d8\u5316\u7684\u66f2\u7ebf\u56fe\uff0c\u4e0b\u9762\u7684\u8868\u683c\u662f\u6bcf\u4e00\u5929\u7684\u80a1\u4ef7\uff0c\u4ee5\u53ca\u7b2ci\u5929\u80a1\u4ef7\u7684\u53d8\u5316C(i) = P(i)-P(i-1)(\u5373\u7b2ci\u5929\u80a1\u4ef7\u7684\u53d8\u5316\u7b49\u4e8e\u5f53\u5929\u80a1\u4ef7\u51cf\u53bb\u524d\u4e00\u5929\u7684\u80a1\u4ef7)\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#2","title":"2.\u66b4\u529b\u89e3\u6cd5\uff1a","text":"<p>\u4e00\u79cd\u66b4\u529b\u7684\u89e3\u6cd5\u5c31\u662f\uff0c\u5982\u679c\u6211\u6709n\u5929\u7684\u80a1\u4ef7\uff0c\u6211\u53ef\u4ee5\u628a\u6240\u6709\u7684\u53ef\u80fd\u6027\u90fd\u5217\u51fa\u6765\uff0c\u8ba1\u7b97\u6bcf\u4e00\u79cd\u60c5\u51b5\u7684\u6536\u76ca\uff0c\u6700\u540e\u901a\u8fc7\u641c\u7d22\u5f97\u5230\u6700\u5927\u6536\u76ca\u7684\u90a3\u79cd\u53ef\u80fd\u6027\u3002</p> <p>\u5206\u6790\uff1a\u9996\u5148\u4e00\u5171\u6709n\u5929\u4e70\u5bb6\u53ef\u4ee5\u4e70\u5165\uff0c\u7b2ci\u5929\u4e70\u5165\u7684\u8bdd\uff0c\u5356\u51fa\u7684\u53ef\u80fd\u6027\u5c31\u6709n-i\u79cd\uff0c\u6240\u4ee5\u4e00\u5171\u6709\uff1a $$ \\sum_{i = 0}^{n-1}(n-i) = n(n-1)-\\frac{n(n-1)}{2} = \\frac{n(n-1)}{2} $$ \u56e0\u6b64\u53ea\u8981\u8ba1\u7b97\u51fa\u6240\u6709\u53ef\u80fd\u6027\u7684\u6536\u76ca\uff0c\u6700\u540e\u627e\u51fa\u6700\u5927\u503c(\u4f7f\u7528\u6700\u666e\u901a\u7684\u641c\u7d22\u7b97\u6cd5):</p> <pre><code>def Find_Max_Number_Of_List(A):\n    n = len(A)\n    temporary_index = 0\n    for i in range(n):\n        if A[i]&gt;=A[temporary_index]:\n            max = A[i]\n            temporary_index = i\n    return A[temporary_index],temporary_index+1\nFind_Max_Number_Of_List([1,2,34,4,56,6])\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u641c\u7d22\u7b97\u6cd5\u8fd0\u884c\u6b21\u6570\u7684\u6570\u91cf\u7ea7\u662f \\(\\Theta(n)\\)\uff1a\u56e0\u6b64\u66b4\u529b\u89e3\u6cd5\u7684\u6700\u574f\u8fd0\u884c\u65f6\u95f4\u662f\uff1a $$ T(n) = \\Theta(n^2)+\\Theta(n) = \\Theta(n^2) $$ \u90a3\u4e48\u73b0\u5728\u7684\u60f3\u6cd5\u5c31\u662f\uff1a\u80fd\u4e0d\u80fd\u901a\u8fc7\u5176\u4ed6\u7684\u65b9\u6cd5\u6216\u8005\u53d8\u5316\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u6700\u574f\u8fd0\u884c\u65f6\u95f4\u7f29\u77ed\uff0c\u8ba9\u5176\u5728\u8f93\u5165\u89c4\u6a21\u8f83\u5927\u7684\u65f6\u5019\u4e5f\u80fd\u4fdd\u6301\u5408\u9002\u7684\u8fd0\u884c\u65f6\u95f4\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#3_1","title":"3. \u8f6c\u6362\u95ee\u9898\uff1a","text":"<p>\u5bf9\u4e8e\uff0c\u8fd9\u4e2a\u95ee\u9898\u7684\u8f93\u5165-\u6bcf\u4e00\u5929\u7684\u4ef7\u683c\uff0c\u8fd9\u4e2a\u8f93\u5165\u7684\u53e6\u4e00\u79cd\u7b49\u4ef7\u5f62\u5f0f\u662f\u4e00\u4e2a\u7b2c\u4e00\u5929\u7684\u4ef7\u683c\u548c\u4e4b\u540e\u6bcf\u4e00\u5929\u7684\u4ef7\u683c\u53d8\u5316\u3002</p> <p>\u90a3\u4e48\u7ecf\u8fc7\u8f93\u5165\u7684\u8f6c\u6362\u4e4b\u540e\uff0c\u95ee\u9898\u5c31\u53d8\u4e3a\uff1a\u54ea\u4e24\u5929\u4e4b\u95f4\u7684\u4ef7\u683c\u53d8\u5316\u6700\u5927\uff1f\uff08\u4e2d\u95f4\u53ef\u4ee5\u7ecf\u8fc7\u8d1f\u6570\uff0c\u4f46\u662f\u603b\u4f53\u8981\u6700\u5927\uff09\uff0c\u6216\u8005\u8bf4\u627e\u4e00\u4e2a\u6700\u5927\u548c\u7684\u5b50\u6570\u7ec4\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#4","title":"4. \u5206\u51b6\u6cd5","text":"<p>\u5728\u8f6c\u6362\u4e4b\u540e\uff0c\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u6700\u5927\u548c\u7684\u5b50\u6570\u7ec4\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u6709\u4e09\u79cd\u53ef\u80fd\u6027\uff1a</p> <ol> <li>\u5168\u90e8\u5728\u6570\u7ec4\u7684\u5de6\u8fb9</li> <li>\u8de8\u8fc7\u4e2d\u95f4</li> <li>\u5168\u90e8\u5728\u6570\u7ec4\u7684\u53f3\u8fb9</li> </ol> <p>\u5bf9\u4e8e\u4e00\u4e2a\u8f93\u5165\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u5206\u522b\u6bd4\u8f83\u4e00\u4e0b\u8fd9\u4e09\u79cd\u60c5\u51b5\u7684\u6700\u5927\u5b50\u6570\u7ec4\u7684\u548c\u4e4b\u95f4\u7684\u5927\u5c0f\uff0c\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u6700\u5927\u5b50\u6570\u7ec4\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u8f93\u5165\u4ece\u4e2d\u95f4\u62c6\u5206\u6210\u4e24\u534a\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u548c\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u5176\u5b9e\u548c\u5904\u7406\u6574\u4f53\u7684\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u5728\u5904\u7406\u8fd9\u4e24\u79cd\u60c5\u51b5\u7684\u65f6\u5019\u518d\u6b21\u8c03\u7528\u5904\u7406\u6574\u4f53\u7684\u65b9\u6cd5\uff0c\u4e0d\u8fc7\u6b64\u65f6\u7684\u89c4\u6a21\u66f4\u5c0f\u3002</p> <p>\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5355\u72ec\u5904\u7406\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53ebFind-Max-Crossing-Subarray:</p> <pre><code>def Finding_Max_of_cross(A,i,mid_index,j): ## python_index = algorithm_index-1  0,2,5. input:real_index\n    leftsum = A[mid_index] #1\n    current_sum = leftsum\n    right_index = mid_index+1   # 3\n    left_index = mid_index      # 0\n    for t in range(mid_index-1,i-1,-1): #0,1,2\n        current_sum += A[t]\n        if leftsum &lt;current_sum:\n            leftsum = current_sum\n            left_index = t\n    rightsum = A[mid_index+1]  #-5\n    right_index = mid_index+1   # \n    current_sum = rightsum\n    for g in range(mid_index+2,j+1): #4,5\n        current_sum +=A[g]\n        if rightsum &lt; current_sum:\n            rightsum = current_sum\n            right_index = g\n    return (left_index,right_index,leftsum+rightsum)\n</code></pre> <p>\u8fd9\u4e2a\u4ee3\u7801\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a\u4ee5\u4e2d\u95f4\u7684\u5143\u7d20\u4e3a\u8d77\u70b9\uff0c\u4ece\u4e24\u8fb9\u5206\u522b\u51fa\u53d1\uff1a\u5de6\u8fb9\u7684\u4ee3\u7801\u627e\u5de6\u8fb9\u548cLeft_Sum\u6700\u5927\u7684\u5730\u65b9\uff0c\u53f3\u8fb9\u540c\u7406\uff0c\u5b83\u4eec\u901a\u8fc7\u4ece\u4e2d\u95f4\u5f00\u59cb\u5411\u53f3\u8fb9\u5f00\u59cb\u52a0\uff0c\u4e0d\u65ad\u7684\u66f4\u65b0\u548c\u6bd4\u8f83\u4e0d\u540c\u4f4d\u7f6e\u5904\u7684\u548c\uff0c\u5f53\u5f53\u524d\u4f4d\u7f6e\u7684\u548c\u5927\u4e8e\u4e4b\u524d\u7684\u548c\u65f6\uff0c\u5c31\u66f4\u65b0\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u7ec8\u70b9\u7684index\u4ee5\u53ca\u6700\u5927\u7684\u548c\uff0c\u6700\u7ec8\u8fd4\u56de\u4e24\u4fa7\u7684\u7d22\u5f15\u548c\u4e24\u4fa7\u6700\u5927\u548c\u7684\u548c\u3002\u8fd9\u4e2a\u4ee3\u7801\u7684\u8fd0\u884c\u6b21\u6570\u7684order\u662f \\(\\Theta(n)\\).</p> <p>\u6211\u4eec\u6709\u4e86\u4e00\u4e2a \\(\\Theta(n)\\)\u7684Finding_Max_Of_Cross,\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u9012\u5f52\u7684\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>def Finding_Max_Subarray(A,i,j): # i is the starting point0 ,j is the end pointn-1   #[1,-2,4,3,5] i=1,j=5 mid = 3 0-based\n    if i == j:\n        return (i,j,A[i])\n    else:        \n        mid_index = (i+j) //2\n        ## left part \n        (left_start,left_end,left_sum) = Finding_Max_Subarray(A,i,mid_index)\n        ## right part \n        (right_start,right_end,right_sum) = Finding_Max_Subarray(A,mid_index+1,j) \n        ## cross part\n        (cross_start,cross_end,cross_sum) = Finding_Max_of_cross(A,i,mid_index,j)\n### Combination\n        if(left_sum &gt;= right_sum) and (left_sum &gt;= cross_sum):\n            return (left_start,left_end,left_sum)\n        elif(right_sum &gt;= left_sum) and (right_sum &gt;= cross_sum):\n            return (right_start,right_end,right_sum)\n        else:\n            return (cross_start,cross_end,cross_sum)\n</code></pre> <p>\u8fd9\u4e2a\u4e3b\u7a0b\u5e8f\u7684\u60f3\u6cd5\u662f\uff1a</p> <p>\u9996\u5148Basic Case,\u5f53\u8f93\u5165\u7684list\u7684\u89c4\u6a21\u662f1\u7684\u65f6\u5019\uff0c\u5219\u76f4\u63a5\u8fd4\u56deindex\u548c\u8fd9\u4e2a\u5143\u7d20\u7684\u503c\uff08\u4e00\u4e2a\u5dee\u503c\u5bf9\u5e94\u4e24\u5929\uff0c\u5373\u53ea\u7ed9\u4f60\u4e24\u5929\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f60\u6ca1\u6709\u9009\u62e9\u7684\u4f59\u5730\uff0c\u53ea\u80fd\u9009\u62e9\u8fd9\u4e24\u5929\u4e70\u5165\u5356\u51fa\uff09\u3002</p> <p>\u7136\u540e\u5c31\u662f\u5c06\u6574\u4e2alist\u5206\u4e3a\u4e24\u90e8\u5206\uff08mid_index\uff09\uff0c\u5de6\u53f3\u4e24\u8fb9\u72ec\u7acb\u6267\u884c\u65b0\u7684Finding_Max_Subarray(\u5de6/\u53f3)\uff0c\u4ee5\u53ca\u627e\u5230\u6574\u4e2alist\u7684Crossing_Max,\u7136\u540e\u7b49\u5f85\u5de6\u53f3\u4e24\u8fb9\u9012\u5f52\u5b8c\u6210\u3002(\u4e0b\u9762\u5c31\u662f\u8fd9\u4e2a\u7b97\u6cd5\u7684\u9012\u5f52\u6811) <pre><code>graph TD\n    A[\"f(n)\"] --&gt; B[\"f(n/2)\"]\n    A --&gt; C[\"f(n/2)\"]\n    B --&gt; D[\"f(n/4)\"]\n    B --&gt; E[\"f(n/4)\"]\n    C --&gt; F[\"f(n/4)\"]\n    C --&gt; G[\"f(n/4)\"]\n</code></pre></p>"},{"location":"Algorithms/Chap04/Note/Note/#5","title":"5. \u5206\u51b6\u6cd5\u7684\u5206\u6790\uff1a","text":"<p>\u901a\u8fc7\u9012\u5f52\u5f0f\uff1a $$ T(n) = \\begin{cases} \\Theta(1)  \\quad if \\quad n = 1 \\ 2T(n/2)+\\Theta(n) \\quad if \\quad n &gt;1 \\end{cases} $$ \u5176\u4e2df(n)\u662f\u9664\u4e86\u5b50\u95ee\u9898\u4ee5\u5916\u7684\u64cd\u4f5c\u5e26\u6765\u7684\u8fd0\u884c\u65f6\u95f4,\u8fd9\u4e2a\u7b97\u6cd5\u7684\u989d\u5916\u64cd\u4f5c\u662f\uff1aFinding-Max-Of-Crossing\u662f \\(\\Theta(n)\\)</p> <p>Tips:\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ed6\u7684\u9012\u5f52\u6811\u4e0a\u9762\uff0c\u662f\u5206\u6790f(n),\u800c\u4e0d\u5206\u6790T(n)\uff0c\u662f\u56e0\u4e3aT(n)\u5e76\u6ca1\u6709\u8fd0\u884c\uff0c\u5b83\u53ea\u662f\u628a\u89c4\u6a21\u4e3an\u7684\u95ee\u9898\u5212\u5206\u4e3a \\(\\log_2^n\\)\u4e2a\u89c4\u6a21\u4e3a1\u7684\u5b50\u95ee\u9898\uff0c\u800cf(n)\u5728\u6bcf\u4e00\u5c42\u6811\u4e2d\u90fd\u6709\u8fd0\u884c\uff09</p> <p>\u540e\u9762\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e3b\u65b9\u6cd5\u548c\u9012\u5f52\u6811\u6cd5\u5f97\u5230\u8fd9\u4e2a\u9012\u5f52\u5f0f\u89e3 \\(T(n) = \\Theta(n\\lg{n})\\)</p>"},{"location":"Algorithms/Chap04/Note/Note/#4strassen-algorithm-for-matrix-multiplication","title":"4.Strassen Algorithm for Matrix Multiplication","text":""},{"location":"Algorithms/Chap04/Note/Note/#1_2","title":"1.\u77e9\u9635\u4e58\u6cd5\u53ca\u66b4\u529b\u89e3\u6cd5","text":"<p>\u5bf9\u4e8e\u6211\u4eec\u719f\u77e5\u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u5373\u7ed9\u51fa\u4e24\u4e2a\u77e9\u9635A(aij)\uff0cB(bij)\uff08\u9996\u5148\u7b80\u5316\u95ee\u9898\uff0c\u4f7f\u5f97\u4e24\u4e2a\u77e9\u9635\u7684\u89c4\u6a21\u5747\u4e3anxn,\u540e\u9762\u4f1a\u7ed9\u51fa\u4e0d\u89c4\u5219\u77e9\u9635\u7684\u89e3\u6cd5\uff09\uff0c\u8ba1\u7b97\u51fa\u8fd9\u4e24\u4e2a\u77e9\u9635\u7684\u79efC \u3002\u4e00\u4e2a\u77e9\u9635\u7531\u5176\u5143\u7d20\u6240\u5b9a\u4e49\uff0c\u56e0\u6b64\u4e58\u6cd5\u8ba1\u7b97\u5b9a\u4e49\u4e3a\uff1a $$ c_{ij} = \\sum_{k=1}^{n} a_{ik}b_{kj} $$ \u901a\u8fc7\u4e0a\u9762\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u770b\u5230\uff0c\u8981\u5b8c\u6210\u77e9\u9635\u4e58\u6cd5\uff0c\u6bcf\u4e2aCij\u90fd\u9700\u8981\u8ba1\u7b97n\u4e2a\u4e58\u6cd5\u7136\u540e\u518d\u76f8\u52a0\uff0c\u4e00\u5171\u6709n^2\u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u5982\u679c\u66b4\u529b\u8ba1\u7b97\u77e9\u9635\u7684\u8bdd\uff0c\u8fd0\u884c\u65f6\u95f4\u7684\u6570\u91cf\u7ea7\u5927\u6982\u662f \\(\\Theta(n^3)\\),\u5177\u4f53\u8ba1\u7b97\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>def Square_Matrix_Multiply(A,B):\n    n = np.shape(A)[0]\n    C = np.zeros((n,n))\n    for i in range(0,n):\n        for j in range(0,n):\n            for k in range(0,n):\n                C[i,j] = C[i,j]+A[i,k]*B[k,j]\n    return C\n</code></pre> <p>\u5373\u7136\u66b4\u529b\u6cd5\u8fd0\u884c\u65f6\u95f4\u6570\u91cf\u7ea7\u662f \\(\\Theta(n^3)\\)\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6709\u6ca1\u6709\u66f4\u4f18\u7684\u7b97\u6cd5\u6765\u8fdb\u884c\u77e9\u9635\u8ba1\u7b97\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#2_1","title":"2. \u5206\u51b6\u6cd5","text":"<p>\u5bf9\u4e8e\u5206\u51b6\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f==\u5206\u800c\u6cbb\u4e4b==\uff0c\u90a3\u4e48\u5bf9\u4e8e\u77e9\u9635\u4e58\u6cd5\u800c\u8a00\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5206\u5757\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\uff1a $$ A =  \\begin{pmatrix} A_{11} &amp; A_{12} \\ A_{21} &amp; A_{22} \\end{pmatrix}, \\quad B =  \\begin{pmatrix} B_{11} &amp; B_{12} \\ B_{21} &amp; B_{22} \\end{pmatrix}, \\quad  C =  \\begin{pmatrix} C_{11} &amp; C_{12} \\ C_{21} &amp; C_{22} \\end{pmatrix}. $$ \u90a3\u4e48\u77e9\u9635\u4e58\u6cd5\u5c31\u53d8\u6210\uff1a $$ \\ \\begin{pmatrix} C_{11} &amp; C_{12} \\ C_{21} &amp; C_{22} \\end{pmatrix} = \\begin{pmatrix} A_{11} &amp; A_{12} \\ A_{21} &amp; A_{22} \\end{pmatrix} \\cdot \\begin{pmatrix} B_{11} &amp; B_{12} \\ B_{21} &amp; B_{22} \\end{pmatrix}. $$ \u4e0a\u9762\u7684\u4e58\u6cd5\u5c31\u53d8\u62104\u4e2a\u7b49\u5f0f\uff1a $$ \\begin{aligned} C_{11} &amp;= A_{11} \\cdot B_{11} + A_{12} \\cdot B_{21}, \\ C_{12} &amp;= A_{11} \\cdot B_{12} + A_{12} \\cdot B_{22}, \\ C_{21} &amp;= A_{21} \\cdot B_{11} + A_{22} \\cdot B_{21}, \\ C_{22} &amp;= A_{21} \\cdot B_{12} + A_{22} \\cdot B_{22}. \\end{aligned} $$ \u8fd9\u6837\u4e24\u4e2anxn\u4e4b\u95f4\u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u4e5f\u5c31\u53d8\u62108\u4e2an/2\u89c4\u6a21\u7684\u77e9\u9635\u4e58\u6cd5(T(n/2))\u52a0\u4e0a4\u4e2a\u77e9\u9635\u7684\u52a0\u6cd5(\\(\\Theta(n^2)\\))---\u9700\u8981\\(\\frac{n^2}{4}\\)\u6b21\u52a0\u6cd5\uff0c\u6240\u4ee5\u52a0\u6cd5\u53c8\u53eb\u5408\u5e76\uff0c\u5206\u51b6\u6cd5\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>def multiplication(A, R1S, R1E, C1S, C1E,\n                      B, R2S, R2E, C2S, C2E):\n    n = R1E - R1S + 1\n    m = C2E - C2S + 1\n    C = np.zeros((n, m))\n\n    # base case: 1x1 \u77e9\u9635\n    if n == 1 and m == 1:\n        C[0,0] = A[R1S, C1S] * B[R2S, C2S]\n        return C\n\n    midA_r = (R1S + R1E) // 2\n    midA_c = (C1S + C1E) // 2\n    midB_r = (R2S + R2E) // 2\n    midB_c = (C2S + C2E) // 2\n    t = n // 2  # \u5b50\u5757\u5927\u5c0f\n\n    # C11 = A11*B11 + A12*B21\n    C[:t,:t] = (multiplication(A, R1S, midA_r, C1S, midA_c,B, R2S, midB_r, C2S, midB_c)+multiplication(A, R1S, midA_r, midA_c+1, C1E,B, midB_r+1, R2E, C2S, midB_c))\n\n    # C12 = A11*B12 + A12*B22\n    C[:t,t:] = (multiplication(A, R1S, midA_r, C1S, midA_c,B, R2S, midB_r, midB_c+1, C2E)+multiplication(A, R1S, midA_r, midA_c+1, C1E,B, midB_r+1, R2E, midB_c+1, C2E))\n    # C21 = A21*B11 + A22*B21\n    C[t:,:t] = (multiplication(A, midA_r+1, R1E, C1S, midA_c,B, R2S, midB_r, C2S, midB_c)+multiplication(A, midA_r+1, R1E, midA_c+1, C1E,B, midB_r+1, R2E, C2S, midB_c))\n\n    # C22 = A21*B12 + A22*B22\n    C[t:,t:] = (multiplication(A, midA_r+1, R1E, C1S, midA_c,B, R2S, midB_r, midB_c+1, C2E)+multiplication(A, midA_r+1, R1E, midA_c+1, C1E,B, midB_r+1, R2E, midB_c+1, C2E))\n    return C\n\n# \u6d4b\u8bd5\nA = np.array([[1,2],\n              [2,3]])\nB = np.array([[2,3],\n              [3,4]])\nprint(multiplication(A,0,1,0,1,B,0,1,0,1))\n</code></pre> <p>\u5176\u5b9e\u8fd9\u4e2a\u5206\u51b6\u6cd5\u7684\u91cd\u70b9\u5728\u4e8e\u5982\u4f55\u5c06\u77e9\u9635\u5206\u5f00\uff0c\u5982\u679c\u662f\u91cd\u65b0\u751f\u6210n/2*n/2\u89c4\u6a21\u7684\u77e9\u9635\uff0c\u9700\u8981\u590d\u5236 \\(\\Theta(n^2)\\)\u6b21\uff0c\u4f46\u662f\u4e0a\u9762\u4ee3\u7801\u7684\u5904\u7406\u65b9\u5f0f\u662f\uff0c\u76f4\u63a5\u4f7f\u7528\u77e9\u9635\u7684\u6307\u6807\u6765\u6307\u5b9a\u4e0d\u540c\u7684\u533a\u5757\uff0c\u5982C[:t,:t]\u5c31\u4ee3\u8868C11\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u989d\u5916\u7684\u8fd0\u884c\u65f6\u95f4\u7ed9\u77e9\u9635\u7684\u5212\u5206\u4e86\u3002</p> <p>\u5206\u51b6\u6cd5\u7684\u9012\u5f52\u5f0f\u662f\uff1a $$ T(n) = 8T(n/2) + \\Theta(n^2) $$ \u540e\u9762\u901a\u8fc7\u9012\u5f52\u6811\u6216\u8005\u4e3b\u65b9\u6cd5\u7684\u5206\u6790\u53ef\u4ee5\u5f97\u5230T(n) = \\(\\Theta(n^3)\\)\uff0c\u76f8\u6bd4\u66b4\u529b\u6cd5\u5e76\u6ca1\u6709\u51cf\u5c11\u8fd0\u884c\u6b21\u6570\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#3_2","title":"3.\u8fc7\u6e21","text":"<p>\u5373\u7136\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u5e76\u6ca1\u6709\u51cf\u5c11\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6709\u6ca1\u6709\u4f18\u5316\u7684\u7a7a\u95f4\u3002</p> <p>\u9996\u5148\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u590d\u6570(a+bi),(c+di)\u7684\u4e58\u6cd5\uff0c\u7ed3\u679c\u662f(ac-bd)+(ad+bc)i\uff0c\u5373\u5f53\u7ed9\u4f60\u56db\u4e2a\u5b9e\u6570a,b,c,d,\u4f60\u9700\u8981\u8f93\u51fa(ac-bd)\u548c(ad+bc)\u8fd9\u4e24\u4e2a\u503c\uff0c\u53ef\u4ee5\u76f4\u63a5\u770b\u5230\u9700\u89814\u6b21\u7684\u4e58\u6cd5\u548c\u4e24\u6b21\u7684\u52a0\u6cd5\uff0c\u80fd\u4e0d\u80fd\u7528\u66f4\u5c11\u7684\u4e58\u6cd5\uff0c\u4f46\u662f\u66f4\u591a\u7684\u52a0\u6cd5\u6765\u5b8c\u6210\u5462\uff1f</p> <p>\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\uff1f--\u300b\u56e0\u4e3a\u4e00\u822c\u6765\u8bf4\u4e58\u6cd5\u6bd4\u52a0\u6cd5\u6162\u4e00\u4e9b\uff0c\u4e5f\u66f4\u6d88\u8017\u8d44\u6e90\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u4e09\u6b21\u4e58\u6cd5\uff1a $$ \\begin{aligned} CM1 &amp;=(a+b)(c+d) = ac+ad+bc+bd \\ CM2 &amp;= ac \\ CM3 &amp;= bd  \\end {aligned} $$ \u6700\u540e\u8f93\u51faCM2-CM3\u548cCM1-CM2-CM3,\u5373\u7528\u4e863\u6b21\u4e58\u6cd5\u548c5\u6b21\u52a0\u6cd5\u5b8c\u6210\u4e86\u590d\u6570\u4e58\u6cd5\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u77e9\u9635\u4e58\u6cd5\u4e5f\u662f\u7c7b\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u51cf\u5c11\u9012\u5f52\u4e2d\u7684\u4e58\u6cd5\uff0c\u589e\u52a0\u989d\u5916\u7684\u52a0\u6cd5\uff0c\u52a0\u6cd5\u7684\u6700\u5927\u7684\u8fd0\u884c\u65f6\u95f4\u4e3a \\(\\Theta(n^2)\\)\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#4strassen-algorithm","title":"4.Strassen Algorithm","text":"<p>Strassen\u7b97\u6cd5\u7684\u6b65\u9aa4\u662f\uff1a</p> <ol> <li> <p>\u5c06\u8f93\u5165\u7684A\uff0cB\u4ee5\u53ca\u8981\u8f93\u51fa\u7684C\u77e9\u9635\u90fd\u5206\u62104\u4e2a\u76f8\u540c\u89c4\u6a21\u7684\u77e9\u9635\uff08\u7528index Calculation \u5c31\u4e0d\u7528\u5176\u4ed6\u591a\u4f59\u7684\u590d\u5236\u64cd\u4f5c\uff09\u3002</p> </li> <li> <p>\u521b\u5efa10\u4e2a\u89c4\u6a21(n/2)x(n/2)\u7684\u77e9\u9635 \\(S_1,\\dots,S_{10}\\),\u9700\u8981\u8fd0\u884c \\(\\Theta(n^2)\\)\u6b21\uff1a    $$    \\begin{aligned}    S_1 &amp;= B_{12} - B_{22} \\    S_2 &amp;= A_{11} + A_{12} \\    S_3 &amp;= A_{21} + A_{22} \\    S_4 &amp;= B_{21} - B_{11} \\    S_5 &amp;= A_{11} + A_{22} \\    S_6 &amp;= B_{11} + B_{22} \\    S_7 &amp;= A_{12} - A_{22} \\    S_8 &amp;= B_{21} + B_{22} \\    S_9 &amp;= A_{11} - A_{21} \\    S_{10} &amp;= B_{11} + B_{12}    \\end{aligned}    $$</p> </li> <li> <p>\u5229\u7528\u4e0a\u4e00\u6b65\u521b\u5efa\u768410\u4e2a\u77e9\u9635\uff0c\u8ba1\u7b977\u4e2a\u76f8\u540c\u89c4\u6a21\u7684 \\(P_1,\\cdots,P_7\\):    $$    \\small    \\begin{aligned}    P_1 &amp;= A_{11} \\cdot S_1 = A_{11} \\cdot B_{12} - A_{11} \\cdot B_{22} \\    P_2 &amp;= S_2 \\cdot B_{22} = A_{11} \\cdot B_{22} + A_{12} \\cdot B_{22} \\    P_3 &amp;= S_3 \\cdot B_{11} = A_{21} \\cdot B_{11} + A_{22} \\cdot B_{11} \\    P_4 &amp;= A_{22} \\cdot S_4 = A_{22} \\cdot B_{21} - A_{22} \\cdot B_{11} \\    P_5 &amp;= S_5 \\cdot S_6 = A_{11} \\cdot B_{11} + A_{11} \\cdot B_{22} + A_{22} \\cdot B_{11} + A_{22} \\cdot B_{22} \\    P_6 &amp;= S_7 \\cdot S_8 = A_{12} \\cdot B_{21} + A_{12} \\cdot B_{22} - A_{22} \\cdot B_{21} - A_{22} \\cdot B_{22} \\    P_7 &amp;= S_9 \\cdot S_{10} = A_{11} \\cdot B_{11} + A_{11} \\cdot B_{12} - A_{21} \\cdot B_{11} - A_{21} \\cdot B_{12}    \\end{aligned}    $$</p> </li> <li> <p>\u6700\u540e\u7528\u8fd9\u4e03\u4e2a\u77e9\u9635\u8ba1\u7b97\u76ee\u6807\u77e9\u9635C\u7684\u56db\u4e2a\u5143\u7d20\uff1a    $$    \\begin{aligned}    C_{11} &amp; = P_5+P_4-P_2+P_6 \\    C_{12} &amp; = P_1+P_2 \\    C_{21} &amp; = P_3+P_4 \\    C_{22} &amp; = P_5+P_1-P_3-P_7    \\end{aligned}    $$    \u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\uff08AI\u751f\u6210\uff09\uff1a</p> </li> </ol> <pre><code>import numpy as np\n\ndef strassen_matrix_multiply(A, B):\n    \"\"\"\n    Strassen \u7b97\u6cd5\u5b9e\u73b0\u77e9\u9635\u4e58\u6cd5\uff08\u4ec5\u9002\u7528\u4e8e n \u4e3a 2 \u7684\u5e42\u7684\u60c5\u51b5\uff09\n\n    \u53c2\u6570:\n    A, B: \u4e8c\u7ef4\u6570\u7ec4\uff0c\u5f62\u72b6\u4e3a n\u00d7n\uff0c\u5176\u4e2d n \u662f 2 \u7684\u5e42\n\n    \u8fd4\u56de:\n    C: \u4e8c\u7ef4\u6570\u7ec4\uff0c\u77e9\u9635\u4e58\u79ef A \u00d7 B\n    \"\"\"\n    n = len(A)\n\n    # \u57fa\u672c\u60c5\u51b5\uff1a\u5f53\u77e9\u9635\u4e3a 1\u00d71 \u65f6\uff0c\u76f4\u63a5\u8fd4\u56de\u6807\u91cf\u4e58\u79ef\n    if n == 1:\n        return np.array([[A[0] * B[0]]])\n\n    # \u68c0\u67e5\u77e9\u9635\u5927\u5c0f\u662f\u5426\u4e3a 2 \u7684\u5e42\n    if n &amp; (n - 1) != 0:\n        raise ValueError(\"\u77e9\u9635\u5927\u5c0f\u5fc5\u987b\u662f 2 \u7684\u5e42\")\n\n    # \u5c06\u77e9\u9635\u5206\u6210\u56db\u4e2a\u5b50\u77e9\u9635\n    mid = n // 2 \n\n    # \u5206\u5272\u77e9\u9635 A\n    A11 = A[:mid, :mid]\n    A12 = A[:mid, mid:]\n    A21 = A[mid:, :mid]\n    A22 = A[mid:, mid:]\n\n    # \u5206\u5272\u77e9\u9635 B\n    B11 = B[:mid, :mid]\n    B12 = B[:mid, mid:]\n    B21 = B[mid:, :mid]\n    B22 = B[mid:, mid:]\n\n    # \u6b65\u9aa4 2: \u521b\u5efa 10 \u4e2a\u4e2d\u95f4\u77e9\u9635 S1 \u5230 S10\n    S1 = B12 - B22\n    S2 = A11 + A12\n    S3 = A21 + A22\n    S4 = B21 - B11\n    S5 = A11 + A22\n    S6 = B11 + B22\n    S7 = A12 - A22\n    S8 = B21 + B22\n    S9 = A11 - A21\n    S10 = B11 + B12\n\n    # \u6b65\u9aa4 3: \u9012\u5f52\u8ba1\u7b97 7 \u4e2a\u77e9\u9635\u4e58\u79ef P1 \u5230 P7\n    P1 = strassen_matrix_multiply(A11, S1)\n    P2 = strassen_matrix_multiply(S2, B22)\n    P3 = strassen_matrix_multiply(S3, B11)\n    P4 = strassen_matrix_multiply(A22, S4)\n    P5 = strassen_matrix_multiply(S5, S6)\n    P6 = strassen_matrix_multiply(S7, S8)\n    P7 = strassen_matrix_multiply(S9, S10)\n\n    # \u6b65\u9aa4 4: \u8ba1\u7b97 C \u7684\u56db\u4e2a\u5b50\u77e9\u9635\n    C11 = P5 + P4 - P2 + P6\n    C12 = P1 + P2\n    C21 = P3 + P4\n    C22 = P5 + P1 - P3 - P7\n\n    # \u5408\u5e76\u56db\u4e2a\u5b50\u77e9\u9635\u5f62\u6210\u7ed3\u679c\u77e9\u9635 C\n    C = np.zeros((n, n))\n    C[:mid, :mid] = C11\n    C[:mid, mid:] = C12\n    C[mid:, :mid] = C21\n    C[mid:, mid:] = C22\n\n    return C\n\n# \u6d4b\u8bd5\u4ee3\u7801\nif __name__ == \"__main__\":\n    # \u521b\u5efa\u4e24\u4e2a 4\u00d74 \u6d4b\u8bd5\u77e9\u9635\uff084 \u662f 2 \u7684\u5e42\uff09\n    n = 4\n    A = np.random.randint(1, 10, (n, n))\n    B = np.random.randint(1, 10, (n, n))\n\n    print(\"\u77e9\u9635 A:\")\n    print(A)\n    print(\"\\n\u77e9\u9635 B:\")\n    print(B)\n\n    # \u4f7f\u7528 Strassen \u7b97\u6cd5\u8ba1\u7b97\u4e58\u79ef\n    C_strassen = strassen_matrix_multiply(A, B)\n    print(\"\\nStrassen \u7b97\u6cd5\u7ed3\u679c:\")\n    print(C_strassen)\n\n    # \u4f7f\u7528\u5e38\u89c4\u77e9\u9635\u4e58\u6cd5\u9a8c\u8bc1\u7ed3\u679c\n    C_standard = np.dot(A, B)\n    print(\"\\n\u5e38\u89c4\u77e9\u9635\u4e58\u6cd5\u7ed3\u679c:\")\n    print(C_standard)\n\n    # \u68c0\u67e5\u4e24\u79cd\u65b9\u6cd5\u7ed3\u679c\u662f\u5426\u4e00\u81f4\n    print(\"\\n\u7ed3\u679c\u662f\u5426\u4e00\u81f4:\", np.allclose(C_strassen, C_standard))\n</code></pre> <p>Strassen \u7b97\u6cd5\u7684\u9012\u5f52\u5f0f\uff1a    $$    S(n) = 7S(n/2)+ \\Theta(n^2)    $$    \u5206\u51b6\u6cd5\u7684\u9012\u5f52\u5f0f\uff1a    $$    T(n) = 8T(n/2) + \\Theta(n^2)    $$    \u53ef\u4ee5\u770b\u5230\uff0c\u5176\u5b9eStrassen\u7b97\u6cd5\u548c\u5e38\u89c4\u7684\u5206\u51b6\u6cd5\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\uff1aS\u7528\u4e86\u66f4\u591a\u7684\u52a0\u6cd5\uff0c\u51cf\u5c11\u4e86\u4e58\u6cd5\u7684\u8c03\u7528\u6b21\u6570\uff0c\u672c\u8d28\u4e0a\u5176\u5b9e\u662f\u901a\u8fc7\u5de7\u5999\u7684\u4ee3\u6570\u8fd0\u7b97\u6765\u7b80\u5316\u77e9\u9635\u4e58\u6cd5\u3002\u6700\u7ec8\u901a\u8fc7\u4e3b\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\uff1a    $$    S(n)=\\Theta(n^{\\lg{7}})\\approx \\Theta(n^{2.81})    $$</p>"},{"location":"Algorithms/Chap04/Note/Note/#5_1","title":"5. \u5982\u4f55\u6c42\u89e3\u9012\u5f52\u5f0f\uff1a","text":"<p>\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u5206\u51b6\u601d\u60f3\u7684\u7b97\u6cd5\uff0c\u57fa\u672c\u4e0a\u90fd\u4f1a\u6709\u81ea\u5df1\u8c03\u7528\u81ea\u5df1\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u8fd9\u7c7b\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u5c31\u662f\u4e00\u4e2a\u9012\u5f52\u5f0f\uff08recurrence\uff09\u3002\u524d\u9762\u6709\u8bb8\u591a\u5bf9\u4e8e\u4e0d\u540c\u95ee\u9898\u7b97\u6cd5\u7684\u9012\u5f52\u5f0f\uff0c\u5982\u4f55\u6c42\u89e3\u9012\u5f52\u5f0f\u5728\u7b97\u6cd5\u5206\u6790\u4e0a\u5c31\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u4e86\u3002\uff08\u66ff\u4ee3\u6cd5\u592a\u5f3a\u8c03intuition\uff0c\u8fd9\u91cc\u6ca1\u6709\u5199\uff09</p>"},{"location":"Algorithms/Chap04/Note/Note/#1_3","title":"1. \u9012\u5f52\u6811\u6cd5","text":"<p>\u9012\u5f52\u6811\u6cd5\uff08Recursion Tree Method\uff09\u662f\u4e00\u79cd\u76f4\u89c2\u7684\u65b9\u6cd5\uff0c\u7528\u6765\u5206\u6790\u9012\u5f52\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a\u628a\u9012\u5f52\u5f0f\u5c55\u5f00\u6210\u4e00\u68f5\u6811\uff0c\u7136\u540e\u628a\u6811\u4e0a\u6bcf\u4e00\u5c42\u7684\u4ee3\u4ef7\u76f8\u52a0\uff0c\u5f97\u5230\u603b\u4ee3\u4ef7\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#1_4","title":"1. \u4e00\u4e2a\u5178\u578b\u4f8b\u5b50","text":"<p>\u8003\u8651\u5f52\u5e76\u6392\u5e8f\u7684\u9012\u5f52\u5f0f\uff1a</p> \\[ T(n) = 2T\\!\\left(\\frac{n}{2}\\right) + n \\] <p>\u542b\u4e49\uff1a - \u628a\u89c4\u6a21\u4e3a \\(n\\) \u7684\u95ee\u9898\uff0c\u5206\u6210\u4e24\u4e2a\u89c4\u6a21\u4e3a \\(n/2\\) \u7684\u5b50\u95ee\u9898\uff08\u5373 \\(2T(n/2)\\)\uff09\uff0c - \u518d\u52a0\u4e0a\u5408\u5e76\u64cd\u4f5c\u7684\u7ebf\u6027\u65f6\u95f4 \\(O(n)\\)\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#2_2","title":"2. \u6784\u5efa\u9012\u5f52\u6811","text":"<p>\u6211\u4eec\u53ef\u4ee5\u7528\u9012\u5f52\u6811\u6cd5\u5c55\u5f00 \\(T(n)\\)\uff1a</p> <pre><code>graph TD\n    A[\"T(n) = n\"] --&gt; B[\"T(n/2) = n/2\"]\n    A --&gt; C[\"T(n/2) = n/2\"]\n    B --&gt; D[\"T(n/4) = n/4\"]\n    B --&gt; E[\"T(n/4) = n/4\"]\n    C --&gt; F[\"T(n/4) = n/4\"]\n    C --&gt; G[\"T(n/4) = n/4\"]\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <pre><code>1. \u6839\u8282\u70b9\u4ee3\u4ef7\u662fn\n1. \u4e0b\u4e00\u5c42\u6709\u4e24\u4e2a\u5b50\u95ee\u9898\uff0c\u6bcf\u4e2a\u4ee3\u4ef7\u662fn/2\uff0c\u603b\u4ee3\u4ef7\u8fd8\u662fn\n1. \u518d\u4e0b\u4e00\u5c42\u67094\u4e2a\u5b50\u95ee\u9898\uff0c\u603b\u4ee3\u4ef7\u4ecd\u7136\u662fn\n</code></pre>"},{"location":"Algorithms/Chap04/Note/Note/#3_3","title":"3. \u5c42\u7ea7\u6c42\u548c","text":"<p>\u6bcf\u4e00\u5c42\u7684\u603b\u4ee3\u4ef7\u90fd\u662f\uff1an</p> <p>\u90a3\u4e48\u5982\u679c\u6811\u7684\u9ad8\u5ea6\u662f \\(\\log_2 n\\)\uff0c\u603b\u4ee3\u4ef7\u5c31\u662f\uff1a $$ T(n) = n + n + n + \\cdots + n \\quad (\\log_2 n \\text{ \u5c42}) $$</p>"},{"location":"Algorithms/Chap04/Note/Note/#4_1","title":"4.\u603b\u590d\u6742\u5ea6\uff1a","text":"<p>\u56e0\u6b64\uff1a $$ T(n) = n \\cdot \\log_2 n = O(n \\log n) $$ \u8fd9\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#5tips","title":"5.Tips","text":"<ol> <li>\u6ce8\u610f\u4e3a\u4ec0\u4e48\u9012\u5f52\u6811\u4e0a\u9762\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684cost\u90fd\u662ff(n/b),\u6bd4\u5982\u8bf4\u5bf9\u4e8e\u4e0a\u9762\u90a3\u4e2a\u9012\u5f52\u5f0fT(n) = 2T(n/2)+n,\u6240\u4ee5\u5728\u7b2c\u4e00\u5c42\u6811\u4e0a\u7684\u8282\u70b9\u662fn\u63a5\u4e0a\u4e24\u4e2a\u679d\uff08\u5206\u522b\u662fT(n/2)\uff09\uff0c\u6240\u4ee5\u9664\u4e86\u6700\u540e\u4e00\u5c42\u4e0d\u9700\u8981\u989d\u5916\u7684f(n)\u4ee5\u5916\uff0c\u5176\u4f59\u7684\u8282\u70b9\u90fd\u662ff(n/b)\u3002</li> <li>\u7b97\u603b\u7684\u4ee3\u4ef7\u7684\u65f6\u5019\uff0c\u901a\u5e38\u5148\u5199\u51fa\u7b2ci\u5c42\u7684cost\uff0c\u7136\u540e\u518d\u7d2f\u52a0\u3002</li> </ol>"},{"location":"Algorithms/Chap04/Note/Note/#2-the-master-method","title":"2. \u4e3b\u65b9\u6cd5\uff08The Master Method\uff09","text":"<p>\u4e3b\u65b9\u6cd5\u662f\u57fa\u4e8e\u4e3b\u5b9a\u7406\u6765\u89e3\u51b3\u5f62\u5982 \\(T(n) = aT(n/b)+f(n)\\)\u7684\u9012\u5f52\u5f0f\u7684\u65b9\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u79cd\u9012\u5f52\u5f0f\u7684\u9012\u5f52\u6811\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u9012\u5f52\u5f0f\u4e2d\u7684a\u4ee3\u8868\u5728\u6bcf\u4e00\u5c42\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u4f4d\u7f6e\u8981\u5206\u591a\u5c11\u679d\uff0cb\u5c31\u4ee3\u8868\u6bcf\u4e00\u5c42\u6bcf\u4e00\u4e2a\u8282\u70b9\u6240\u5206\u5f97\u7684\u53f6\u5b50\u6570\u76ee\u3002</p> <p>\u5c31\u53ef\u4ee5\u5f97\u5230\uff1a</p> <ol> <li> <p>\u9012\u5f52\u6811\u7684\u5c42\u6570 \\(\\log_b^n\\)\uff08\u4ec0\u4e48\u65f6\u5019\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u53f6\u5b50\u6570-\\(\\frac{n}{b^i}=1\\) )</p> </li> <li> <p>\u9012\u5f52\u6811\u7b2ci\u5c42\u7684\u8282\u70b9\u6570\uff1a\\(a^i\\)</p> </li> <li> <p>\u5e95\u5c42\uff08\u7b2c \\(\\log_b^n\\)\u5c42\uff09\u7684cost\uff1a\u4e00\u5171 \\(a^{log_b^n}\\)\u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684cost\u662f \\(\\Theta(1)\\),\u6240\u4ee5\u603b\u7684cost\u662f:    $$    a^{\\log_b^n} = a^{\\frac{\\log_a^n}{\\log_a^b}} = n^{\\log_b^a}    $$</p> </li> </ol> <p>\u90a3\u4e48\u4e3b\u65b9\u6cd5\u662f\u5982\u4f55\u51b3\u5b9a\u6574\u4e2a\u6811\u7684cost\u5462\uff1f\uff08\u6700\u5e95\u5c42\u7684cost\u7528B\uff0c\u5e95\u5c42\u4ee5\u4e0a\u7684cost\u7528U\uff09</p> <p>\u5176\u5b9e\u662f\u4e00\u79cd\u6bd4\u8f83\uff0c\u56e0\u4e3a\u9012\u5f52\u6811\u6cd5\u662f\u628a\u6240\u6709\u7684cost\u5168\u90e8\u52a0\u8d77\u6765\uff0c\u4f46\u662f\u5f53B\u8fdc\u5927\u4e8eU\uff0c\u6216\u8005B\u8fdc\u5c0f\u4e8eU\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u5ffd\u7565\u90a3\u4e2a\u66f4\u5c0f\u7684\uff0c\u800c\u4e3b\u65b9\u6cd5\u5c31\u662f\u5b9a\u4e49\u4e86\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u5ffd\u7565\u3002</p> <p>\u4e3b\u65b9\u6cd5\u6e90\u4e8e\u4e3b\u5b9a\u7406\uff1a</p> <p>\u4e3e\u51e0\u4e2a\u4f8b\u5b50\uff1a</p> <ol> <li>\u524d\u9762\u5206\u51b6\u6cd5\u89e3\u51b3\u6700\u5927\u5b50\u6570\u7ec4\u95ee\u9898\u7684\u9012\u5f52\u5f0f\u4e3a\uff1a    $$    T(n) = 2T(n/2)+ \\Theta(n)    $$    \u90a3\u4e48\u6b64\u65f6f(n) = \\(\\Theta(n)\\), a= 2, b = 2</li> </ol> <p>\u90a3\u4e48\u5e95\u5c42\u7684cost\u662fn\uff0c\u53ef\u4ee5\u770b\u5230\u6b64\u65f6\u5e95\u5c42\u7684cost\u7b49\u4e8e \\(\\Theta(n)\\),\u5219\u6ee1\u8db3\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5T(n) = \\(\\Theta(n\\lg{n})\\)</p> <ol> <li> <p>\u5bf9\u4e8e\u5206\u51b6\u6cd5\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u9012\u5f52\u5f0f\u4e3a\uff1a    $$    T(n) = 8T(n/2) + \\Theta(n^2)    $$    \u6b64\u65f6f(n) = n^2 (\u56e0\u4e3a \\(\\Theta(n^2)\\)\u5176\u5b9e\u4ee3\u8868\u4e00\u7c7b\u7684\u51fd\u6570\uff09\uff0ca = 8,b =2 \uff0c\u5e95\u5c42\u7684cost\u4e3a\uff1a\\(n^3\\) ,\u90a3\u4e48\u6b64\u65f6\u5b58\u5728\u4e00\u4e2a\u6570 \\(\\epsilon&gt;0\\)\u4f7f\u5f97\uff1a    $$    f(n) = O(n^{3-\\epsilon})    $$    \u6bd4\u5982 \\(\\epsilon= 1\\),\u56e0\u6b64\u6ee1\u8db3\u7b2c1\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5 \\(T(n) =\\Theta(n^3)\\)</p> </li> <li> <p>\u5bf9\u4e8eStrassen Algorithm \uff0c\u9012\u5f52\u5f0f\u4e3a\uff1a    $$    T(n) =7T(n/2)+ \\Theta(n^2)    $$    \u56e0\u6b64f(n) = n^2 ,a = 7, b= 2,\u5e95\u5c42\u7684cost\u4e3a \\(n^{\\lg{7}}\\)\uff08\\(\\lg{7}\\approx 2.81\\)\uff09\uff0c\u6b64\u65f6\u5b58\u5728\u4e00\u4e2a\u6570 \\(\\epsilon &gt;0\\)\u4f7f\u5f97\uff1a    $$    f(n) = O(n^{\\lg^7 - \\epsilon})    $$    \u6bd4\u5982  \\(\\epsilon = 2.8\\) \u56e0\u6b64\u6ee1\u8db3\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5T(n) = \\(\\Theta(n^{\\lg^7})\\).</p> </li> </ol> <p>\u603b\u7684\u6765\u8bf4\uff0c\u4e3b\u65b9\u6cd5\u597d\u7528\uff0c\u4f46\u662f\u5b58\u5728\u4e0d\u9002\u7528\u7684\u60c5\u51b5\uff0c\u5728case2\u548ccase3\u4e4b\u95f4\u4ee5\u53cacase1\u548ccase2\u4e4b\u95f4\u5b58\u5728\u7f3a\u53e3\uff0c\u5f53\u4e24\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\u4e0d\u662f\u591a\u9879\u5f0f\u7684\u5927\u6216\u5c0f\uff0c\u90a3\u4e48\u6b64\u65f6\u4e3b\u65b9\u6cd5\u4e0d\u9002\u7528\uff0c\u53ea\u80fd\u4f7f\u7528\u9012\u5f52\u6811\u8ba1\u7b97\u3002</p>"},{"location":"Algorithms/Chap04/Note/Note/#master-theorem","title":"\u4e3b\u5b9a\u7406\uff08Master Theorem\uff09","text":"<p>\u4e3b\u5b9a\u7406\uff08Master Theorem\uff09\u662f\u5206\u6790\u5206\u6cbb\u9012\u5f52\u5f0f\u7684\u4e00\u6761\u5e38\u7528\u5b9a\u7406\u3002 \u5b83\u9002\u7528\u4e8e\u5982\u4e0b\u5f62\u5f0f\u7684\u9012\u5f52\u5f0f\uff1a</p> \\[ T(n) = a \\, T\\!\\left(\\frac{n}{b}\\right) + f(n), \\quad a \\geq 1, \\, b &gt; 1 \\] <p>\u5176\u4e2d\uff1a - \\(a\\) = \u5b50\u95ee\u9898\u7684\u4e2a\u6570 - \\(b\\) = \u5b50\u95ee\u9898\u89c4\u6a21\u7f29\u5c0f\u7684\u500d\u6570 - \\(f(n)\\) = \u9664\u9012\u5f52\u8c03\u7528\u5916\u7684\u989d\u5916\u4ee3\u4ef7\uff08\u5982\u5206\u89e3\u548c\u5408\u5e76\uff09</p>"},{"location":"Algorithms/Chap04/Note/Note/#_1","title":"\u5b9a\u7406\u7ed3\u8bba","text":"<p>\u8bbe (\\(n^{\\log_b^n}\\)) --\u5e95\u5c42Cost\u4e3a \u4e34\u754c\u51fd\u6570\uff0c\u6bd4\u8f83 \\(f(n)\\) \u4e0e \\($n^{\\log_b^n}$\\)\uff1a</p> <ol> <li> <p>Case 1 \uff08\u591a\u9879\u5f0f\u5c0f\uff09    \u5982\u679c    $$    f(n) = O!\\left(n^{\\log_b a - \\epsilon}\\right), \\quad \\text{\u67d0\u4e2a } \\epsilon &gt; 0    $$    \u90a3\u4e48    $$    T(n) = \\Theta!\\left(n^{\\log_b a}\\right)    $$</p> </li> <li> <p>Case 2 \uff08\u76f8\u7b49\uff09    \u5982\u679c    $$    f(n) = \\Theta!\\left(n^{\\log_b a}\\right)    $$    \u90a3\u4e48    $$    T(n) = \\Theta!\\left(n^{\\log_b a} \\cdot \\log n\\right)    $$</p> </li> <li> <p>Case 3 \uff08\u591a\u9879\u5f0f\u5927\uff09    \u5982\u679c    $$    f(n) = \\Omega!\\left(n^{\\log_b a + \\epsilon}\\right), \\quad \\text{\u67d0\u4e2a } \\epsilon &gt; 0    $$    \u5e76\u4e14\u6ee1\u8db3\u6b63\u5219\u6761\u4ef6\uff08\u4e0b\u6587\u79f0RC\uff09    $$    a \\, f!\\left(\\frac{n}{b}\\right) \\leq c \\, f(n), \\quad \\text{\u67d0\u4e2a\u5e38\u6570 } c &lt; 1    $$    \u90a3\u4e48    $$    T(n) = \\Theta!\\left(f(n)\\right)    $$</p> </li> </ol>"},{"location":"Chap01/1.1/","title":"1.1","text":""},{"location":"Chap01/1.1/#11-1","title":"1.1-1","text":"<p>Give a real-world example that requires sorting or a real-world example that requires computing a convex hull.</p> <ul> <li>Sorting: browse the price of the restaurants with ascending prices on NTU street.</li> <li>Convex hull: computing the diameter of set of points.</li> </ul>"},{"location":"Chap01/1.1/#11-2","title":"1.1-2","text":"<p>Other than speed, what other measures of efficiency might one use in a real-world setting?</p> <p>Memory efficiency and coding efficiency.</p>"},{"location":"Chap01/1.1/#11-3","title":"1.1-3","text":"<p>Select a data structure that you have seen previously, and discuss its strengths and limitations.</p> <p>Linked-list:</p> <ul> <li>Strengths: insertion and deletion.</li> <li>Limitations: random access.</li> </ul>"},{"location":"Chap01/1.1/#11-4","title":"1.1-4","text":"<p>How are the shortest-path and traveling-salesman problems given above similar? How are they different?</p> <ul> <li>Similar: finding path with shortest distance.</li> <li>Different: traveling-salesman has more constraints.</li> </ul>"},{"location":"Chap01/1.1/#11-5","title":"1.1-5","text":"<p>Come up with a real-world problem in which only the best solution will do. Then come up with one in which a solution that is \"approximately\" the best is good enough.</p> <ul> <li>Best: find the GCD of two positive integer numbers.</li> <li>Approximately: find the solution of differential equations.</li> </ul>"},{"location":"Chap01/1.2/","title":"1.2","text":""},{"location":"Chap01/1.2/#12-1","title":"1.2-1","text":"<p>Give an example of an application that requires algorithmic content at the application level, and discuss the function of the algorithms involved.</p> <p>Drive navigation.</p>"},{"location":"Chap01/1.2/#12-2","title":"1.2-2","text":"<p>Suppose we are comparing implementations of insertion sort and merge sort on the same machine. For inputs of size \\(n\\) , insertion sort runs in \\(8n^2\\) steps, while merge sort runs in \\(64n\\lg n\\) steps. For which values of \\(n\\) does insertion sort beat merge sort?</p> \\[ \\begin{aligned}     8n^2 &amp; &lt;   64n\\lg n \\\\\\\\      2^n &amp; &lt;   n^8 \\\\\\\\  2 \\le n &amp; \\le 43. \\end{aligned} \\]"},{"location":"Chap01/1.2/#12-3","title":"1.2-3","text":"<p>What is the smallest value of \\(n\\) such that an algorithm whose running time is \\(100n^2\\) runs faster than an algorithm whose running time is \\(2^n\\) on the same machine?</p> \\[ \\begin{aligned} 100n^2 &amp; &lt;   2^n \\\\\\\\      n &amp; \\ge 15. \\end{aligned} \\]"},{"location":"Chap01/Problems/1-1/","title":"1 1","text":"<p>For each function \\(f(n)\\) and time \\(t\\) in the following table, determine the largest size \\(n\\) of a problem that can be solved in time \\(t\\), assuming that the algorithm to solve the problem takes \\(f(n)\\) microseconds.</p> \\[ \\begin{array}{cccccccc}          &amp; \\text{1 second}  &amp; \\text{1 minute}    &amp; \\text{1 hour}       &amp; \\text{1 day}            &amp; \\text{1 month}          &amp; \\text{1 year}           &amp; \\text{1 century} \\\\\\\\ \\hline \\lg n    &amp; 2^{10^6}         &amp; 2^{6 \\times 10^7}  &amp; 2^{3.6 \\times 10^9} &amp; 2^{8.64 \\times 10^{10}} &amp; 2^{2.59 \\times 10^{12}} &amp; 2^{3.15 \\times 10^{13}} &amp; 2^{3.15 \\times 10^{15}} \\\\\\\\ \\sqrt n  &amp; 10^{12}          &amp; 3.6 \\times 10^{15} &amp; 1.3 \\times 10^{19}  &amp; 7.46 \\times 10^{21}     &amp; 6.72 \\times 10^{24}     &amp; 9.95 \\times 10^{26}     &amp; 9.95 \\times 10^{30} \\\\\\\\ n        &amp; 10^6             &amp; 6 \\times 10^7      &amp; 3.6 \\times 10^9     &amp; 8.64 \\times 10^{10}     &amp; 2.59 \\times 10^{12}     &amp; 3.15 \\times 10^{13}     &amp; 3.15 \\times 10^{15} \\\\\\\\ n\\lg n   &amp; 6.24 \\times 10^4 &amp; 2.8 \\times 10^6    &amp; 1.33 \\times 10^8    &amp; 2.76 \\times 10^9        &amp; 7.19 \\times 10^{10}     &amp; 7.98 \\times 10^{11}     &amp; 6.86 \\times 10^{13} \\\\\\\\ n^2      &amp; 1000             &amp; 7745               &amp; 60000               &amp; 293938                  &amp; 1609968                 &amp; 5615692                 &amp; 56156922 \\\\\\\\ n^3      &amp; 100              &amp; 391                &amp; 1532                &amp; 4420                    &amp; 13736                   &amp; 31593                   &amp; 146645 \\\\\\\\ 2^n      &amp; 19               &amp; 25                 &amp; 31                  &amp; 36                      &amp; 41                      &amp; 44                      &amp; 51 \\\\\\\\ n!       &amp; 9                &amp; 11                 &amp; 12                  &amp; 13                      &amp; 15                      &amp; 16                      &amp; 17 \\end{array} \\]"},{"location":"Chap02/2.1/","title":"2.1","text":""},{"location":"Chap02/2.1/#21-1","title":"2.1-1","text":"<p>Using Figure 2.2 as a model, illustrate the operation of \\(\\text{INSERTION-SORT}\\) on the array \\(A = \\langle 31, 41, 59, 26, 41, 58 \\rangle\\).</p> <p></p> <p>The operation of \\(\\text{INSERTION-SORT}\\) on the array \\(A = \\langle 31, 41, 59, 26, 41, 58 \\rangle\\). Array indices appear above the rectangles, and values stored in the array positions appear within the rectangles.</p> <p>(a)-(e) are iterations of the for loop of lines 1-8.</p> <p>In each iteration, the black rectangle holds the key taken from \\(A[i]\\), which is compared with the values in shaded rectangles to its left in the test of line 5. Dotted arrows show array values moved one position to the right in line 6. and solid arrows indicate where the key moves to in line 8.</p> <p>(f) is the final sorted array.</p> <p>The changes of array A during traversal: $$ \\begin{aligned} A &amp; = \\langle 31, 41, 59, 26, 41, 58 \\rangle \\\\ A &amp; = \\langle 31, 41, 59, 26, 41, 58 \\rangle \\\\ A &amp; = \\langle 31, 41, 59, 26, 41, 58 \\rangle \\\\ A &amp; = \\langle 26, 31, 41, 59, 41, 58 \\rangle \\\\ A &amp; = \\langle 26, 31, 41, 41, 59, 58 \\rangle \\\\ A &amp; = \\langle 26, 31, 41, 41, 58, 59 \\rangle \\end{aligned} $$</p>"},{"location":"Chap02/2.1/#21-2","title":"2.1-2","text":"<p>Rewrite the \\(\\text{INSERTION-SORT}\\) procedure to sort into nonincreasing instead of nondecreasing order.</p> <pre><code>INSERTION-SORT(A)\n    for j = 2 to A.length\n        key = A[j]\n        i = j - 1\n        while i &gt; 0 and A[i] &lt; key\n            A[i + 1] = A[i]\n            i = i - 1\n        A[i + 1] = key\n</code></pre>"},{"location":"Chap02/2.1/#21-3","title":"2.1-3","text":"<p>Consider the searching problem:</p> <p>Input: A sequence of \\(n\\) numbers \\(A = \\langle a_1, a_2, \\ldots, a_n \\rangle\\) and a value \\(v\\).</p> <p>Output: An index \\(i\\) such that \\(v = A[i]\\) or the special value \\(\\text{NIL}\\) if \\(v\\) does not appear in \\(A\\).</p> <p>Write pseudocode for linear search, which scans through the sequence, looking for \\(v\\). Using a loop invariant, prove that your algorithm is correct. Make sure that your loop invariant fulfills the three necessary properties.</p> <pre><code>LINEAR-SEARCH(A, v)\n    for i = 1 to A.length\n       if A[i] == v\n            return i\n    return NIL\n</code></pre> <p>Loop invariant: At the start of each iteration of the for loop, the subarray \\(A[1..i - 1]\\) consists of elements that are different than \\(v\\).</p> <p>Initialization: Before the first loop iteration (\\(i = 1\\)), the subarray is the empty array, so the proof is trivial.</p> <p>Maintenance: During each loop iteration, we compare \\(v\\) with \\(A[i]\\). If they are the same, we return \\(i\\), which is the correct result. Otherwise, we continue to the next iteration of the loop. At the end of each loop iteration, we know the subarray \\(A[1..i]\\) does not contain \\(v\\), so the loop invariant holds true. Incrementing \\(i\\) for the next iteration of the for loop then preserves the loop invariant.</p> <p>Termination: The loop terminates when \\(i &gt; A.length = n\\). Since \\(i\\) increases by \\(1\\), we must have \\(i = n + 1\\) at that time. Substituting \\(n + 1\\), for \\(i\\) in the wording of the loop invariant, we have that the subarray \\(A[1..n]\\) consists of elements that are different than \\(v\\). Thus, we return \\(\\text{NIL}\\). Observing that \\(A[1..n]\\), we conclude that the entire array does not have any element equal to \\(v\\). Hence the algorithm is correct.</p>"},{"location":"Chap02/2.1/#21-4","title":"2.1-4","text":"<p>Consider the problem of adding two \\(n\\)-bit binary integers, stored in two \\(n\\)-element arrays \\(A\\) and \\(B\\). The sum of the two integers should be stored in binary form in an \\((n + 1)\\)-element array \\(C\\). State the problem formally and write pseudocode for adding the two integers.</p> <p>Input: An array of booleans \\(A = \\langle a_1, a_2, \\ldots, a_n \\rangle\\) and an array of booleans \\(B = \\langle b_1, b_2, \\ldots, b_n \\rangle\\), each representing an integer stored in binary format (each digit is a number, either \\(0\\) or \\(1\\), least-significant digit first) and each of length \\(n\\).</p> <p>Output: An array \\(C = \\langle c_1, c_2, \\ldots, c_{n + 1} \\rangle\\) such that \\(C' = A' + B'\\) where \\(A'\\), \\(B'\\) and \\(C'\\) are the integers, represented by \\(A\\), \\(B\\) and \\(C\\).</p> <pre><code>ADD-BINARY(A, B)\n    carry = 0\n    for i = 1 to A.length\n        sum = A[i] + B[i] + carry\n        C[i] = sum % 2  // remainder\n        carry = sum / 2 // quotient\n    C[A.length + 1] = carry\n    return C\n</code></pre>"},{"location":"Chap02/2.2/","title":"2.2","text":""},{"location":"Chap02/2.2/#22-1","title":"2.2-1","text":"<p>Express the function \\(n^3 / 1000 - 100n^2 - 100n + 3\\) in terms of \\(\\Theta\\)-notation.</p> <p>\\(\\Theta(n^3)\\).</p>"},{"location":"Chap02/2.2/#22-2","title":"2.2-2","text":"<p>Consider sorting \\(n\\) numbers stored in array \\(A\\) by first finding the smallest element of \\(A\\) and exchanging it with the element in \\(A[1]\\). Then find the second smallest element of \\(A\\), and exchange it with \\(A[2]\\). Continue in this manner for the first \\(n - 1\\) elements of \\(A\\). Write pseudocode for this algorithm, which is known as selection sort. What loop invariant does this algorithm maintain? Why does it need to run for only the first \\(n - 1\\) elements, rather than for all \\(n\\) elements? Give the best-case and worst-case running times of selection sort in \\(\\Theta\\)-notation.</p> <ul> <li> <p>Pseudocode:</p> <pre><code>n = A.length\nfor i = 1 to n - 1\n    minIndex = i\n    for j = i + 1 to n\n        if A[j] &lt; A[minIndex]\n            minIndex = j\n    swap(A[i], A[minIndex])\n</code></pre> </li> <li> <p>Loop invariant:</p> <p>At the start of the loop in line 1, the subarray \\(A[1..i - 1]\\) consists of the smallest \\(i - 1\\) elements in array \\(A\\) with sorted order.</p> </li> <li> <p>Why does it need to run for only the first \\(n - 1\\) elements, rather than for all \\(n\\) elements?</p> <p>After \\(n - 1\\) iterations, the subarray \\(A[1..n - 1]\\) consists of the smallest \\(i - 1\\) elements in array \\(A\\) with sorted order. Therefore, \\(A[n]\\) is already the largest element.</p> </li> <li> <p>Running time: \\(\\Theta(n^2)\\).</p> </li> </ul>"},{"location":"Chap02/2.2/#22-3","title":"2.2-3","text":"<p>Consider linear search again (see Exercise 2.1-3). How many elements of the input sequence need to be checked on the average, assuming that the element being searched for is equally likely to be any element in the array? How about in the worst case? What are the average-case and worst-case running times of linear search in \\(\\Theta\\)-notation? Justify your answers.</p> <p>If the element is present in the sequence, half of the elements are likely to be checked before it is found in the average case. In the worst case, all of them will be checked. That is, \\(n / 2\\) checks for the average case and \\(n\\) for the worst case. Both of them are \\(\\Theta(n)\\).</p>"},{"location":"Chap02/2.2/#22-4","title":"2.2-4","text":"<p>How can we modify almost any algorithm to have a good best-case running time?</p> <p>You can modify any algorithm to have a best case time complexity by adding a special case. If the input matches this special case, return the pre-computed answer.</p>"},{"location":"Chap02/2.3/","title":"2.3","text":""},{"location":"Chap02/2.3/#23-1","title":"2.3-1","text":"<p>Using Figure 2.4 as a model, illustrate the operation of merge sort on the array \\(A = \\langle 3, 41, 52, 26, 38, 57, 9, 49 \\rangle\\).</p> \\[[3] \\quad [41] \\quad [52] \\quad [26] \\quad [38] \\quad [57] \\quad [9] \\quad [49]\\] \\[\\downarrow\\] \\[[3|41] \\quad [26|52] \\quad [38|57] \\quad [9|49]\\] \\[\\downarrow\\] \\[[3|26|41|52] \\quad [9|38|49|57]\\] \\[\\downarrow\\] \\[[3|9|26|38|41|49|52|57]\\]"},{"location":"Chap02/2.3/#23-2","title":"2.3-2","text":"<p>Rewrite the \\(\\text{MERGE}\\) procedure so that it does not use sentinels, instead stopping once either array \\(L\\) or \\(R\\) has had all its elements copied back to \\(A\\) and then copying the remainder of the other array back into \\(A\\).</p> <pre><code>MERGE(A, p, q, r)\n    n1 = q - p + 1\n    n2 = r - q\n    let L[1..n1] and R[1..n2] be new arrays\n    for i = 1 to n1\n        L[i] = A[p + i - 1]\n    for j = 1 to n2\n        R[j] = A[q + j]\n    i = 1\n    j = 1\n    for k = p to r\n        if i &gt; n1\n            A[k] = R[j]\n            j = j + 1\n        else if j &gt; n2\n            A[k] = L[i]\n            i = i + 1\n        else if L[i] \u2264 R[j]\n            A[k] = L[i]\n            i = i + 1\n        else\n            A[k] = R[j]\n            j = j + 1\n</code></pre>"},{"location":"Chap02/2.3/#23-3","title":"2.3-3","text":"<p>Use mathematical induction to show that when \\(n\\) is an exact power of \\(2\\), the solution of the recurrence</p> \\[ T(n) = \\begin{cases}     2             &amp; \\text{if } n = 2, \\\\\\\\     2T(n / 2) + n &amp; \\text{if } n = 2^k, \\text{for } k &gt; 1 \\end{cases} \\] <p>is \\(T(n) = n\\lg n\\).</p> <ul> <li>Base case</li> </ul> <p>For \\(n = 2^1\\), \\(T(n) = 2\\lg 2 = 2\\).</p> <ul> <li>Suppose \\(n = 2^k\\), \\(T(n) = n\\lg n = 2^k \\lg 2^k = 2^kk\\).</li> </ul> <p>For \\(n = 2^{k + 1}\\),</p> <p>$$   \\begin{aligned}   T(n) &amp; = 2T(2^{k + 1} / 2) + 2^{k + 1} \\\\        &amp; = 2T(2^k) + 2^{k + 1} \\\\        &amp; = 2 \\cdot 2^kk + 2^{k + 1} \\\\        &amp; = 2^{k + 1}(k + 1) \\\\        &amp; = 2^{k + 1} \\lg 2^{k + 1} \\\\        &amp; = n\\lg n.   \\end{aligned}   $$</p> <p>By P.M.I., \\(T(n) = n\\lg n\\), when \\(n\\) is an exact power of \\(2\\).</p>"},{"location":"Chap02/2.3/#23-4","title":"2.3-4","text":"<p>We can express insertion sort as a recursive procedure as follows. In order to sort \\(A[1..n]\\), we recursively sort \\(A[1..n - 1]\\) and then insert \\(A[n]\\) into the sorted array \\(A[1..n - 1]\\). Write a recurrence for the running time of this recursive version of insertion sort.</p> <p>It takes \\(\\Theta(n)\\) time in the worst case to insert \\(A[n]\\) into the sorted array \\(A[1..n - 1]\\). Therefore, the recurrence</p> \\[ T(n) = \\begin{cases}     \\Theta(1)            &amp; \\text{if } n = 1, \\\\\\\\     T(n - 1) + \\Theta(n) &amp; \\text{if } n &gt; 1. \\end{cases} \\] <p>The solution of the recurrence is \\(\\Theta(n^2)\\).</p>"},{"location":"Chap02/2.3/#23-5","title":"2.3-5","text":"<p>Referring back to the searching problem (see Exercise 2.1-3), observe that if the sequence \\(A\\) is sorted, we can check the midpoint of the sequence against \\(v\\) and eliminate half of the sequence from further consideration. The binary search algorithm repeats this procedure, halving the size of the remaining portion of the sequence each time. Write pseudocode, either iterative or recursive, for binary search. Argue that the worst-case running time of binary search is \\(\\Theta(\\lg n)\\).</p> <ul> <li>Iterative:</li> </ul> <pre><code>ITERATIVE-BINARY-SEARCH(A, v, low, high)\n    while low \u2264 high\n        mid = floor((low + high) / 2)\n        if v == A[mid]\n            return mid\n        else if v &gt; A[mid]\n            low = mid + 1\n        else high = mid - 1\n    return NIL\n</code></pre> <ul> <li>Recursive:</li> </ul> <pre><code>RECURSIVE-BINARY-SEARCH(A, v, low, high)\n    if low &gt; high\n        return NIL\n    mid = floor((low + high) / 2)\n    if v == A[mid]\n        return mid\n    else if v &gt; A[mid]\n        return RECURSIVE-BINARY-SEARCH(A, v, mid + 1, high)\n    else return RECURSIVE-BINARY-SEARCH(A, v, low, mid - 1)\n</code></pre> <p>Each time we do the comparison of \\(v\\) with the middle element, the search range continues with range halved.</p> <p>The recurrence</p> \\[ T(n) = \\begin{cases}     \\Theta(1)            &amp; \\text{if } n = 1, \\\\\\\\     T(n / 2) + \\Theta(1) &amp; \\text{if } n &gt; 1. \\end{cases} \\] <p>The solution of the recurrence is \\(T(n) = \\Theta(\\lg n)\\).</p>"},{"location":"Chap02/2.3/#23-6","title":"2.3-6","text":"<p>Observe that the while loop of lines 5\u20137 of the \\(\\text{INSERTION-SORT}\\) procedure in Section 2.1 uses a linear search to scan (backward) through the sorted subarray \\(A[i..j - 1]\\). Can we use a binary search (see Exercise 2.3-5) instead to improve the overall worst-case running time of insertion sort to \\(\\Theta(n\\lg n)\\)?</p> <p>Each time the while loop of lines 5-7 of \\(\\text{INSERTION-SORT}\\) scans backward through the sorted array \\(A[1..j - 1]\\). The loop not only searches for the proper place for \\(A[j]\\), but it also moves each of the array elements that are bigger than \\(A[j]\\) one position to the right (line 6). These movements takes \\(\\Theta(j)\\) time, which occurs when all the \\(j - 1\\) elements preceding \\(A[j]\\) are larger than \\(A[j]\\). The running time of using binary search to search is \\(\\Theta(\\lg j)\\), which is still dominated by the running time of moving element \\(\\Theta(j)\\).</p> <p>Therefore, we can't improve the overrall worst-case running time of insertion sort to \\(\\Theta(n\\lg n)\\).</p>"},{"location":"Chap02/2.3/#23-7-star","title":"2.3-7 \\(\\star\\)","text":"<p>Describe a \\(\\Theta(n\\lg n)\\)-time algorithm that, given a set \\(S\\) of \\(n\\) integers and another integer \\(x\\), determines whether or not there exist two elements in \\(S\\) whose sum is exactly \\(x\\).</p> <p>First, sort \\(S\\), which takes \\(\\Theta(n\\lg n)\\). Then, for each element \\(s_i\\) in \\(S\\), \\(i = 1, \\dots, n\\), search \\(A[i + 1..n]\\) for \\(s_i' = x - s_i\\) by binary search, which takes \\(\\Theta(\\lg n)\\).</p> <ul> <li>If \\(s_i'\\) is found, return its position;</li> <li>otherwise, continue for next iteration.</li> </ul> <p>The time complexity of the algorithm is \\(\\Theta(n\\lg n) + n \\cdot \\Theta(\\lg n) = \\Theta(n\\lg n)\\).</p>"},{"location":"Chap02/Problems/2-1/","title":"2 1","text":"<p>Although merge sort runs in \\(\\Theta(n\\lg n)\\) worst-case time and insertion sort runs in \\(\\Theta(n^2)\\) worst-case time, the constant factors in insertion sort can make it faster in practice for small problem sizes on many machines. Thus, it makes sense to coarsen the leaves of the recursion by using insertion sort within merge sort when subproblems become sufficiently small. Consider a modification to merge sort in which \\(n / k\\) sublists of length \\(k\\) are sorted using insertion sort and then merged using the standard merging mechanism, where \\(k\\) is a value to be determined.</p> <p>a. Show that insertion sort can sort the \\(n / k\\) sublists, each of length \\(k\\), in \\(\\Theta(nk)\\) worst-case time.</p> <p>b. Show how to merge the sublists in \\(\\Theta(n\\lg(n / k))\\) worst-case time.</p> <p>c. Given that the modified algorithm runs in \\(\\Theta(nk + n\\lg(n / k))\\) worst-case time, what is the largest value of \\(k\\) as a function of \\(n\\) for which the modified algorithm has the same running time as standard merge sort, in terms of \\(\\Theta\\)-notation?</p> <p>d. How should we choose \\(k\\) in practice?</p> <p>a. The worst-case time to sort a list of length \\(k\\) by insertion sort is \\(\\Theta(k^2)\\). Therefore, sorting \\(n / k\\) sublists, each of length \\(k\\) takes \\(\\Theta(k^2 \\cdot n / k) = \\Theta(nk)\\) worst-case time.</p> <p>b. We have \\(n / k\\) sorted sublists each of length \\(k\\). To merge these \\(n / k\\) sorted sublists to a single sorted list of length \\(n\\), we have to take \\(2\\) sublists at a time and continue to merge them. The process can be visualized as a tree with \\(\\lg(n / k)\\) levels and we compare \\(n\\) elements in each level. Therefore, the worst-case time to merge the sublists is \\(\\Theta(n\\lg(n / k))\\).</p> <p>c. The modified algorithm has time complexity as standard merge sort when \\(\\Theta(nk + n\\lg(n / k)) = \\Theta(n\\lg n)\\). Assume \\(k = \\Theta(\\lg n)\\),</p> \\[ \\begin{aligned} \\Theta(nk + n\\lg(n / k))     &amp; = \\Theta(nk + n\\lg n - n\\lg k) \\\\\\\\     &amp; = \\Theta(n\\lg n + n\\lg n - n\\lg(\\lg n)) \\\\\\\\     &amp; = \\Theta(2n\\lg n - n\\lg(\\lg n)) \\\\\\\\     &amp; = \\Theta(n\\lg n). \\end{aligned} \\] <p>d. Choose \\(k\\) be the largest length of sublist on which insertion sort is faster than merge sort.</p>"},{"location":"Chap02/Problems/2-2/","title":"2 2","text":"<p>Bubblesort is a popular, but inefficient, sorting algorithm. It works by repeatedly swapping adjacent elements that are out of order.</p> <pre><code>BUBBLESORT(A)\n    for i = 1 to A.length - 1\n        for j = A.length downto i + 1\n            if A[j] &lt; A[j - 1]\n                exchange A[j] with A[j - 1]\n</code></pre> <p>a. Let \\(A'\\) denote the output of \\(\\text{BUBBLESORT}(A)\\) To prove that \\(\\text{BUBBLESORT}\\) is correct, we need to prove that it terminates and that</p> \\[A'[1] \\le A'[2] \\le \\cdots \\le A'[n], \\tag{2.3}\\] <p>where \\(n = A.length\\). In order to show that \\(\\text{BUBBLESORT}\\) actually sorts, what else do we need to prove?</p> <p>The next two parts will prove inequality \\(\\text{(2.3)}\\).</p> <p>b. State precisely a loop invariant for the for loop in lines 2\u20134, and prove that this loop invariant holds. Your proof should use the structure of the loop invariant proof presented in this chapter.</p> <p>c. Using the termination condition of the loop invariant proved in part (b), state a loop invariant for the for loop in lines 1\u20134 that will allow you to prove inequality \\(\\text{(2.3)}\\). Your proof should use the structure of the loop invariant proof presented in this chapter.</p> <p>d. What is the worst-case running time of bubblesort? How does it compare to the running time of insertion sort?</p> <p>a. \\(A'\\) consists of the elements in \\(A\\) but in sorted order.</p> <p>b. Loop invariant: At the start of each iteration of the for loop of lines 2-4, the subarray \\(A[j..n]\\) consists of the elements originally in \\(A[j..n]\\) before entering the loop but possibly in a different order and the first element \\(A[j]\\) is the smallest among them.</p> <p>Initialization: Initially the subarray contains only the last element \\(A[n]\\), which is trivially the smallest element of the subarray.</p> <p>Maintenance: In every step we compare \\(A[j]\\) with \\(A[j - 1]\\) and make \\(A[j - 1]\\) the smallest among them. After the iteration, the length of the subarray increases by one and the first element is the smallest of the subarray.</p> <p>Termination: The loop terminates when \\(j = i\\). According to the statement of loop invariant, \\(A[i]\\) is the smallest among \\(A[i..n]\\) and \\(A[i..n]\\) consists of the elements originally in \\(A[i..n]\\) before entering the loop.</p> <p>c. Loop invariant: At the start of each iteration of the for loop of lines 1-4, the subarray \\(A[1..i \u2212 1]\\) consists of the \\(i - 1\\) smallest elements in \\(A[1..n]\\) in sorted order. \\(A[i..n]\\) consists of the \\(n - i + 1\\) remaining elements in \\(A[1..n]\\).</p> <p>Initialization: Initially the subarray \\(A[1..i \u2212 1]\\) is empty and trivially this is the smallest element of the subarray.</p> <p>Maintenance: From part (b), after the execution of the inner loop, \\(A[i]\\) will be the smallest element of the subarray \\(A[i..n]\\). And in the beginning of the outer loop, \\(A[1..i \u2212 1]\\) consists of elements that are smaller than the elements of \\(A[i..n]\\), in sorted order. So, after the execution of the outer loop, subarray \\(A[1..i]\\) will consists of elements that are smaller than the elements of \\(A[i + 1..n]\\), in sorted order.</p> <p>Termination: The loop terminates when \\(i = A.length\\). At that point the array \\(A[1..n]\\) will consists of all elements in sorted order.</p> <p>d. The \\(i\\)th iteration of the for loop of lines 1-4 will cause \\(n \u2212 i\\) iterations of the for loop of lines 2-4, each with constant time execution, so the worst-case running time of bubble sort is \\(\\Theta(n^2)\\) which is same as the worst-case running time of insertion sort.</p>"},{"location":"Chap02/Problems/2-3/","title":"2 3","text":"<p>The following code fragment implements Horner's rule for evaluating a polynomial</p> \\[ \\begin{aligned} P(x) &amp; = \\sum_{k = 0}^n a_k x^k \\\\\\\\      &amp; = a_0 + x(a_1 + x (a_2 + \\cdots + x(a_{n - 1} + x a_n) \\cdots)), \\end{aligned} \\] <p>given the coefficients \\(a_0, a_1, \\ldots, a_n\\) and a value of \\(x\\):</p> <pre><code>y = 0\nfor i = n downto 0\n    y = a[i] + x * y\n</code></pre> <p>a. In terms of \\(\\Theta\\)-notation, what is the running time of this code fragment for Horner's rule?</p> <p>b. Write pseudocode to implement the naive polynomial-evaluation algorithm that computes each term of the polynomial from scratch. What is the running time of this algorithm? How does it compare to Horner's rule</p> <p>c. Consider the following loop invariant: At the start of each iteration of the for loop of lines 2-3,</p> \\[y = \\sum_{k = 0}^{n - (i + 1)} a_{k + i + 1} x^k.\\] <p>Interpret a summation with no terms as equaling \\(0\\). Following the structure of the loop invariant proof presented in this chapter, use this loop invariant to show that, at termination, \\(y = \\sum_{k = 0}^n a_k x^k\\).</p> <p>d. Conclude by arguing that the given code fragment correctly evaluates a polynomial characterized by the coefficients \\(a_0, a_1, \\ldots, a_n\\).</p> <p>a. \\(\\Theta(n)\\).</p> <p>b.</p> <pre><code>NAIVE-HORNER()\n    y = 0\n    for k = 0 to n\n        temp = 1\n        for i = 1 to k\n            temp = temp * x\n        y = y + a[k] * temp\n</code></pre> <p>The running time is \\(\\Theta(n^2)\\), because of the nested loop. It is obviously slower.</p> <p>c. Initialization: It is pretty trivial, since the summation has no terms which implies \\(y = 0\\).</p> <p>Maintenance: By using the loop invariant, in the end of the \\(i\\)-th iteration, we have</p> \\[ \\begin{aligned} y &amp; = a_i + x \\sum_{k = 0}^{n - (i + 1)} a_{k + i + 1} x^k \\\\\\\\   &amp; = a_i x^0 + \\sum_{k = 0}^{n - i - 1} a_{k + i + 1} x^{k + 1} \\\\\\\\   &amp; = a_i x^0 + \\sum_{k = 1}^{n - i} a_{k + i} x^k \\\\\\\\   &amp; = \\sum_{k = 0}^{n - i} a_{k + i} x^k. \\end{aligned} \\] <p>Termination: The loop terminates at \\(i = -1\\). If we substitute,</p> \\[y = \\sum_{k = 0}^{n - i - 1} a_{k + i + 1} x^k = \\sum_{k = 0}^n a_k x^k.\\] <p>d. The invariant of the loop is a sum that equals a polynomial with the given coefficients.</p>"},{"location":"Chap02/Problems/2-4/","title":"2 4","text":"<p>Let \\(A[1..n]\\) be an array of \\(n\\) distinct numbers. If \\(i &lt; j\\) and \\(A[i] &gt; A[j]\\), then the pair \\((i, j)\\) is called an inversion of \\(A\\).</p> <p>a. List the five inversions in the array \\(\\langle 2, 3, 8, 6, 1 \\rangle\\).</p> <p>b. What array with elements from the set \\(\\\\{1, 2, \\ldots, n\\\\}\\) has the most inversions? How many does it have?</p> <p>c. What is the relationship between the running time of insertion sort and the number of inversions in the input array? Justify your answer.</p> <p>d. Give an algorithm that determines the number of inversions in any permutation of \\(n\\) elements in \\(\\Theta(n\\lg n)\\) worst-case time. (\\(\\textit{Hint:}\\) Modify merge sort).</p> <p>a. \\((1, 5)\\), \\((2, 5)\\), \\((3, 4)\\), \\((3, 5)\\), \\((4, 5)\\).</p> <p>b. The array \\(\\langle n, n - 1, \\dots, 1 \\rangle\\) has the most inversions \\((n - 1) + (n - 2) + \\cdots + 1 = n(n - 1) / 2\\).</p> <p>c. The running time of insertion sort is a constant times the number of inversions. Let \\(I(i)\\) denote the number of \\(j &lt; i\\) such that \\(A[j] &gt; A[i]\\). Then \\(\\sum_{i = 1}^n I(i)\\) equals the number of inversions in \\(A\\).</p> <p>Now consider the while loop on lines 5-7 of the insertion sort algorithm. The loop will execute once for each element of \\(A\\) which has index less than \\(j\\) is larger than \\(A[j]\\). Thus, it will execute \\(I(j)\\) times. We reach this while loop once for each iteration of the for loop, so the number of constant time steps of insertion sort is \\(\\sum_{j = 1}^n I(j)\\) which is exactly the inversion number of \\(A\\).</p> <p>d. We'll call our algorithm \\(\\text{COUNT-INVERSIONS}\\) for modified merge sort. In addition to sorting \\(A\\), it will also keep track of the number of inversions.</p> <p>\\(\\text{COUNT-INVERSIONS}(A, p, r)\\) sorts \\(A[p..r]\\) and returns the number of inversions in the elements of \\(A[p..r]\\), so \\(left\\) and \\(right\\) track the number of inversions of the form \\((i, j)\\) where \\(i\\) and \\(j\\) are both in the same half of \\(A\\).</p> <p>\\(\\text{MERGE-INVERSIONS}(A, p, q, r)\\) returns the number of inversions of the form \\((i, j)\\) where \\(i\\) is in the first half of the array and \\(j\\) is in the second half. Summing these up gives the total number of inversions in \\(A\\). The runtime of the modified algorithm is \\(\\Theta(n\\lg n)\\), which is same as merge sort since we only add an additional constant-time operation to some of the iterations in some of the loops.</p> <pre><code>COUNT-INVERSIONS(A, p, r)\n    if p &lt; r\n        q = floor((p + r) / 2)\n        left = COUNT-INVERSIONS(A, p, q)\n        right = COUNT-INVERSIONS(A, q + 1, r)\n        inversions = MERGE-INVERSIONS(A, p, q, r) + left + right\n        return inversions\n</code></pre> <pre><code>MERGE-INVERSIONS(A, p, q, r)\n    n1 = q - p + 1\n    n2 = r - q\n    let L[1..n1 + 1] and R[1..n2 + 1] be new arrays\n    for i = 1 to n1\n        L[i] = A[p + i - 1]\n    for j = 1 to n2\n        R[j] = A[q + j]\n    L[n1 + 1] = \u221e\n    R[n2 + 1] = \u221e\n    i = 1\n    j = 1\n    inversions = 0\n    for k = p to r\n        if L[i] &lt;= R[j]\n            A[k] = L[i]\n            i = i + 1\n        else\n            inversions = inversions + n1 - i + 1\n            A[k] = R[j]\n            j = j + 1\n    return inversions\n</code></pre>"},{"location":"ED/Chap01/Note/Note/","title":"Chap1\uff1aIntroduction to ElectroStatics","text":""},{"location":"ED/Chap01/Note/Note/#coulombs-law","title":"Coulomb's law(\u5e93\u4f26\u5b9a\u5f8b)","text":"<p>\u5e93\u4f26\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u5728\u7a7a\u6c14\u4e2d\u4e24\u4e2a\u76f8\u8ddd\u8f83\u8fdc\u7684\uff08\u76f8\u6bd4\u4e8e\u5e26\u7535\u4f53\u672c\u8eab\u7684\u5c3a\u5bf8\u800c\u8a00\uff09\u9759\u6b62\u7684\u5e26\u7535\u4f53\uff08\u5c0f\u7684\uff09\u4e4b\u95f4\u7684\u4f5c\u7528\u529b\uff1a</p> <ol> <li>\u4f5c\u7528\u529b\u4e0e\u4e24\u4e2a\u5e26\u7535\u4f53\u6240\u5e26\u7684\u7535\u8377\u91cf\uff08\\(q_1,q_2\\)\uff09\u6210\u6b63\u6bd4.</li> <li>\u4e0e\u4e24\u4e2a\u5e26\u7535\u4f53\u4e4b\u95f4\u7684\u8ddd\u79bbr\u7684\u5e73\u65b9\u6210\u53cd\u6bd4</li> <li>\u4f5c\u7528\u529b\u7684\u65b9\u5411\u6cbf\u7740\u4e24\u4e2a\u5e26\u7535\u4f53\u7684\u8fde\u7ebf\u65b9\u5411</li> <li>\u5bf9\u4e8e\u540c\u53f7\u7535\u8377\uff0c\u4f5c\u7528\u529b\u4f7f\u5f97\u4e24\u8005\u76f8\u4e92\u8fdc\u79bb\uff0c\u5bf9\u4e8e\u5f02\u53f7\u7535\u8377\uff0c\u4f5c\u7528\u529b\u4f7f\u5f97\u4e24\u8005\u76f8\u4e92\u9760\u8fd1</li> <li>\u4f5c\u7528\u529b\u7684\u884c\u4e3a\u662f\u5411\u91cf\uff0c\u56e0\u6b64\uff0c\u5bf9\u4e8e\u5206\u6790\u591a\u4e2a\u5e26\u7535\u4f53\u5bf9\u4e8e\u67d0\u4e00\u70b9\u7684\u4f5c\u7528\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5411\u91cf\u7684\u7ebf\u6027\u53e0\u52a0\u7684\u89c4\u5219\u3002</li> </ol>"},{"location":"ED/Chap01/Note/Note/#electric-field","title":"Electric field(\u7535\u573a)","text":"<p>\u867d\u7136\u6709\u8bb8\u591a\u5b9e\u9a8c\u6d4b\u91cf\u7535\u8377\u4e4b\u95f4\u7684\u5e93\u4f26\u4f5c\u7528\u529b\uff0c\u4f46\u662f\u7535\u573a\u5728\u79d1\u5b66\u5bb6\u7684\u7fa4\u4f53\u4e2d\u66f4\u52a0\u53d7\u5230\u5173\u6ce8\uff0c\u7535\u573a\u7684\u5b9a\u4e49\u662f\uff1a\\(\\mathbf{E}= \\frac{\\mathbf{F}}{q}\\) ,\u5373\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u7535\u8377 \\(q_1\\)\u5728\u67d0\u4e00\u5904 \\(\\mathbf{x}\\) \u7684\u7535\u573a\u53ef\u4ee5\u7528\u8be5\u5904\u8bd5\u63a2\u7535\u8377q\u6240\u53d7\u5230q1\u7684\u5e93\u4f26\u4f5c\u7528\u529b\u9664\u4ee5\u8bd5\u63a2\u7535\u8377\u7684\u7535\u8377\u91cf\u5f97\u5230\u3002</p> <p></p> <p>\u901a\u8fc7Coulomb's law\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4f4d\u4e8e\\(\\mathbf{x_1}\\)\u7684\u70b9\u7535\u8377 \\(q_1\\)\u5bf9\u4e8e\u4f4d\u4e8e \\(\\mathbf{x}\\)\u7684\u6d4b\u8bd5\u7535\u8377q\u7684\u4f5c\u7528\u529b\u7684\u8868\u8fbe\u5f0f\u4e3a\uff1a $$ \\mathbf{F} = kq_1q \\frac{(\\mathbf{x-x_1})}{\\abs{\\mathbf{x-x_1}}^3} $$ \u5176\u4e2d k\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5728SI\u5355\u4f4d\u5236\u4e0b \\(k = \\frac{1}{4\\pi \\epsilon_0},\\epsilon_0\u4e3a\u771f\u7a7a\u4ecb\u7535\u5e38\u6570\\)\u3002</p> <p>\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u524d\u9762\u5bf9\u4e8e\u7535\u573a\u7684\u5b9a\u4e49\u5f97\u5230\u70b9\u7535\u8377 \\(q_1\\)\u5728\u4efb\u610f\u4f4d\u7f6e \\(\\mathbf{x}\\)\u7684\u7535\u573a \\(\\mathbf{E(x)}\\) \u4e3a\uff1a $$ \\mathbf{E}(\\mathbf{x}) = kq_1\\frac{\\mathbf{x-x_1}}{\\abs{\\mathbf{x-x_1}}^3} $$ \u7136\u540e\u7531\u5355\u4e2a\u7535\u8377\u5728\u67d0\u4e00\u4f4d\u7f6e\u7684\u7535\u573a\uff0c\u5c31\u53ef\u4ee5\u77e2\u91cf\u53e0\u52a0\u5f97\u5230\u591a\u4e2a\u7535\u8377 \\(\\{q_i\\}\\)\u5728 \\(\\mathbf{x}\\)\u5904\u7684\u603b\u7535\u573a\u4e3a\uff1a $$ \\mathbf{E}(\\mathbf{x}) = k\\sum_i{q_i}\\frac{\\mathbf{x}-\\mathbf{x_i}}{\\abs{\\mathbf{x}-\\mathbf{x_i}}^3} $$ \u5982\u679c\u8fd9\u4e9b\u7535\u8377\u5f88\u5c0f\u5e76\u4e14\u6570\u91cf\u5f88\u5927\uff0c\u5728 \\(\\mathbf{x}'\\)\u5904\u5c0f\u4f53\u79ef \\(d^3x' = dxdydz\\)\u7684\u7535\u8377 \\(dq\\) \u7531\u8be5\u4f4d\u7f6e\u7684\u7535\u8377\u5bc6\u5ea6 \\(\\rho(\\mathbf{x}\u2019)\\) \u8868\u793a\u4e3a\uff1a $$ dq = \\rho(\\mathbf{x}')dxdydz = \\rho(\\mathbf{x'})d^3x' $$ \u56e0\u6b64\u5bf9\u4e8e\u7535\u8377\u5206\u5e03\u4e3a \\(\\rho(\\mathbf{x}')\\)\u7684\u5e26\u7535\u4f53\uff0c\u5728\u4efb\u610f\u4f4d\u7f6e\u5904\u7684\u7535\u573a\u5f3a\u5ea6\u4e3a\uff1a $$ \\mathbf{E}(\\mathbf{x}) = \\frac{1}{4\\pi\\epsilon_0}\\int\\rho(\\mathbf{x'})\\frac{\\mathbf{x}-\\mathbf{x'}}{\\abs{\\mathbf{x}-\\mathbf{x'}}^3}d^3x' $$ \u4e3a\u4e86\u4ece\u8fde\u7eed\u7535\u8377\u5206\u5e03\u7684\u7535\u573a\u5f3a\u5ea6\u5f97\u5230\u79bb\u6563\u5206\u5e03\u7684\u7535\u573a\u5f3a\u5ea6\uff08\u5373\u5f0f2\uff09\uff0c\u6211\u4eec\u5f15\u5165Dirac Delta Function \\(\\delta{(x-a)}\\):</p> <ol> <li> <p>\\(\\delta(x-a) = 0\\) \u5f53x\u4e0d\u7b49\u4e8ea\u65f6\u6052\u6210\u7acb</p> </li> <li> <p>$\\int \\delta(x-a)dx $ \u8fd9\u4e2a\u79ef\u5206\u5728\u79ef\u5206\u8def\u5f84\u5305\u542bx = a\u8fd9\u4e00\u70b9\u65f6\u4e3a1\uff0c\u4e0d\u5305\u542b\u65f6\u4e3a0</p> </li> <li> <p>\\(\\int\\delta(x-a)f(x)dx = f(a)\\) ,\u8fd9\u91cc\u7684\u79ef\u5206\u8def\u5f84\u5982\u679c\u4e0d\u5305\u542bx = a,\u90a3\u4e48\u79ef\u5206\u5c31\u4e3a0</p> </li> <li> <p>\\(\\int \\delta'(x-a)f(x)dx = -f'(a)\\) ,\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u901a\u8fc7\u5206\u6b65\u79ef\u5206\u5bfc\u51fa</p> </li> <li> <p>\u53d8\u91cf\u66ff\u6362\u7684\u4e00\u4e2a\u7b49\u5f0f\uff1a $$ \u00a0 \u00a0\\delta(f(x)) = \\sum_i \\frac{1}{\\abs{\\frac{df}{dx}(x_i)}}\\delta(x-x_i) $$</p> </li> <li> <p>\\(\\delta(\\mathbf{x}-\\mathbf{X}) = \\delta(x_1-X_1)\\delta(x_2-X_2)\\delta(x_3-X_3)\\)</p> </li> <li>\\(\\int_{\\triangle{V}}\\delta(\\mathbf{x}-\\mathbf{X})\\) \u8fd9\u4e2a\u4e09\u7ef4\u79ef\u5206\u5f53\u79ef\u5206\u7a7a\u95f4\u4e0d\u5305\u542b \\(\\mathbf{x} = \\mathbf{X}\\)\u8fd9\u4e2a\u70b9\u65f6\u7b49\u4e8e0\uff0c\u5305\u542b\u65f6\u7b49\u4e8e1.</li> </ol> <p>\u7531Dirac Delta Function\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49\u79bb\u6563\u5206\u5e03\u7535\u8377\u7684\u7535\u8377\u5bc6\u5ea6 \\(\\rho(\\mathbf{x})\\)\u4e3a\uff1a $$ \\rho(\\mathbf{x}) = \\sum^n_{i = 1}q_i \\delta(\\mathbf{x}-\\mathbf{x_i}) $$ \u5c06\u5f0f7\u4ee3\u5165\u8fde\u7eed\u5206\u5e03\u7684\u7535\u573a\u5f3a\u5ea6\u5c31\u53ef\u4ee5\u5f97\u5230\u79bb\u6563\u5206\u5e03\u7684\u7535\u573a\u5f3a\u5ea6\u7684\u516c\u5f0f\uff08\u5373\u901a\u8fc7\u6bcf\u4e00\u4e2a\u7535\u8377\u5728\u8be5\u70b9\u7535\u573a\u7684\u7ebf\u6027\u53e0\u52a0\u800c\u6210\u7684\u7535\u573a\uff09\uff1a $$ \\mathbf{E}(\\mathbf{x}) = \\frac{1}{4\\pi\\epsilon_0}\\sum_{i=1}^{n}q_i\\frac{\\mathbf{x-x_i}}{\\abs{\\mathbf{x-x_i}}^3} $$</p>"},{"location":"ED/Chap01/Note/Note/#gausss-law","title":"Gauss's Law(\u9ad8\u65af\u5b9a\u5f8b)","text":"<p>\u9ad8\u65af\u5b9a\u5f8b\u8003\u8651\u4e00\u4e2a\u70b9\u7535\u8377q\u5728\u4e00\u4e2a\u5c01\u95ed\u66f2\u9762S\u4e0a\u67d0\u4e00\u5904 \\(dS\\) \u7684\u7535\u573a\u901a\u91cf \\(\\mathbf{E}\\cdot \\mathbf{n}dS\\)\uff0c\u6839\u636e\u7535\u573a\u7684\u5b9a\u4e49\u5f97\u5230\uff1a $$ d\\Phi = \\mathbf{E}\\cdot \\mathbf{n}dS = \\frac{1}{4\\pi\\epsilon_0}q \\frac{\\cos{\\theta}dS}{r^2} $$ \u5176\u4e2d \\(\\theta\\)\u662f\u5c0f\u9762\u5143dS\u7684\u6cd5\u5411\u91cf \\(\\mathbf{n}\\) (\u5355\u4f4d\u5411\u91cf)\u548c\u7535\u573aE\u6240\u6210\u7684\u5939\u89d2\u3002</p> <p>\u6839\u636e\u7acb\u4f53\u89d2\uff08Solid Angle\uff09\u7684\u5b9a\u4e49\uff1a $$ d\\Omega = \\frac{\\mathbf{n}\\cdot\\mathbf{r}}{r^3}dS $$ \u56e0\u6b64\u53ef\u4ee5\u5f97\u5230 \\(d\\Phi\\)\u4e3a\uff1a $$ d\\Phi = \\frac{1}{4\\pi\\epsilon_0}q d\\Omega $$ \u56e0\u6b64\uff0c\u5bf9\u4e8e\u6574\u4e2a\u5c01\u95ed\u66f2\u9762\u7535\u573a\u901a\u91cf\u7684\u79ef\u5206\u4e3a\uff1a $$ \\oint_{S} \\mathbf{E} \\cdot \\mathbf{n} dS = \\begin{cases} \\frac{q}{\\varepsilon_0} &amp; \\text{if } q \\text{ \u5728 } S \\\\ 0 &amp; \\text{if } q \\text{ \u4e0d\u5728 } S \\end{cases} $$ \u5982\u679c\u8003\u8651\u5c01\u95ed\u66f2\u9762\u5185\u90e8\u7684\u7535\u8377 \\(\\sum_i q_i\\)\uff0c\u5219\u8fd9\u4e2a\u79ef\u5206\u4e3a\uff1a $$ \\oint_{S} \\mathbf{E} \\cdot \\mathbf{n} dS = \\frac{\\sum_iq_i}{\\epsilon_0} $$ \u8003\u8651\u7535\u8377\u662f\u8fde\u7eed\u7684\u60c5\u51b5\uff1a $$ \\oint_{S} \\mathbf{E} \\cdot \\mathbf{n} dS = \\int_V \\frac{\\rho(\\mathbf{x})d^3x}{\\epsilon_0} $$ \u4e0a\u5f0f\u5c31\u662f\u9ad8\u65af\u5b9a\u7406\u7684\u6807\u51c6\u5f62\u5f0f\uff0c\u53ef\u4ee5\u901a\u8fc7\u63a8\u5bfc\u8fc7\u7a0b\u770b\u51fa\uff0c\u9ad8\u65af\u5b9a\u7406\u4f9d\u8d56\u4e8e\u4e0b\u9762\u7684\u51e0\u4e2a\u5c5e\u6027\uff1a</p> <ol> <li>\u7535\u8377\u4e4b\u95f4\u4f5c\u7528\u529b\u7684\u5e73\u65b9\u53cd\u6bd4\u5173\u7cfb</li> <li>\u7535\u8377\u4e4b\u95f4\u76f8\u4e92\u4f5c\u7528\u529b\u7684\u6709\u5fc3\u7684\u7279\u6027</li> <li>\u5bf9\u4e8e\u4e0d\u540c\u7535\u8377\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5730\u65b9\u7535\u573a\u7684\u77e2\u91cf\u7684\u7ebf\u6027\u53e0\u52a0</li> </ol>"},{"location":"ED/Chap01/Note/Note/#differential-form-of-gausss-law","title":"Differential Form of Gauss's Law (\u9ad8\u65af\u5b9a\u7406\u7684\u5fae\u5206\u5f62\u5f0f)","text":"<p>\u6839\u636e\u6563\u5ea6\u5b9a\u7406\uff08divergence Theorem\uff09\uff1a $$ \u4efb\u610f\u826f\u5b9a\u4e49\u7684\u77e2\u91cf\u573a(\\mathbf{A(x)}),\u5bf9\u4e8e\u7a7a\u95f4\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u533a\u57dfV\uff0c\u4ee5\u53ca\u56f4\u7ed5\u5b83\u7684\u5c01\u95ed\u66f2\u9762S\uff0c\u6709\uff1a \\\\ \\oint_S \\mathbf{A}\\cdot\\mathbf{n} \\,da = \\int_V \\grad \\cdot \\mathbf{A} d^3x $$ \u7531\u6563\u5ea6\u5b9a\u7406\u53ef\u4ee5\u9ad8\u65af\u5b9a\u7406\u7684\u5fae\u5206\u5f62\u5f0f\uff1a $$ \\grad \\cdot \\mathbf{E} = \\frac{\\rho(\\mathbf{x})}{\\epsilon_0} $$ \u4f46\u662f\u5982\u679c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u7a7a\u95f4\u4e2d\u67d0\u4e00\u70b9\u5904\u7684\u7535\u573a\uff0c\u53ea\u77e5\u9053\u7535\u573a\u7684\u6563\u5ea6\u8fd8\u4e0d\u591f\u3002</p> <p>\u7531Helmholtz Theorem\uff1a</p> <p>\u5728\u9002\u5f53\u7684\u6761\u4ef6\u4e0b\uff08\u8981\u6c42\u5411\u91cf\u573a\u5728\u7a7a\u95f4\u4e2d\u8db3\u591f\"\u826f\u597d\"\uff0ceg\uff1a\u5728\u8d8b\u4e8e\u65e0\u7a77\u5927\u65f6\u5feb\u901f\u8870\u51cf\u6216\u8005\u6ee1\u8db3\u4e00\u5b9a\u7684\u8fb9\u754c\u6761\u4ef6\uff09\uff0c\u4efb\u4f55\u4e00\u4e2a\u4e09\u7ef4\u7684\u5411\u91cf\u573a \\(\\mathbf{F}(\\mathbf{r})\\)\u90fd\u53ef\u4ee5\u552f\u4e00\u5730\u5206\u89e3\u4e3a\u4e24\u4e2a\u90e8\u5206\uff08\u65e0\u65cb\u90e8\u5206\uff0c\u6709\u65cb\u90e8\u5206\uff09\uff1a $$ \\mathbf{F}(\\mathbf{r}) = -\\nabla\\phi(\\mathbf{r})+\\nabla\\cross A(\\mathbf{r}) $$</p> <p>\u56e0\u6b64\u5982\u679c\u6211\u4eec\u8981\u786e\u5b9a\u7a7a\u95f4\u4e2d\u67d0\u4e00\u5904\u7684\u7535\u573a\uff0c\u82e5\u6211\u4eec\u53ea\u77e5\u9053\u7535\u573a\u7684\u6563\u5ea6\uff0c\u4e5f\u5c31\u662f\u77e5\u9053\u4e86\u7535\u573a\u7684\u65e0\u65cb\u90e8\u5206\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8fd8\u9700\u8981\u77e5\u9053\u7535\u573a\u7684\u65cb\u5ea6\uff0c\u5f97\u5230\u7535\u573a\u7684\u65e0\u6563\u90e8\u5206\u3002\uff08\u8fd9\u91cc\u662f\u56e0\u4e3a\uff1a\u65e0\u65cb\u90e8\u5206\u7684\u65cb\u5ea6\u662f0\uff0c\u6240\u4ee5\u8be5\u90e8\u5206\u5c31\u662f\u7535\u573a\u7684\u6563\u5ea6\uff0c\u800c\u65e0\u6563\u90e8\u5206\u7684\u6563\u5ea6\u662f0\uff0c\u56e0\u6b64\u7535\u573a\u7684\u65cb\u5ea6\u5c31\u662f\u65e0\u6563\u90e8\u5206\u3002\uff09</p> <p>\u90a3\u4e48\u6211\u4eec\u6765\u8ba1\u7b97\u4e00\u4e0b\u7535\u573a\u7684\u65cb\u5ea6 \\(\\nabla \\cross \\mathbf{E}\\),\u9996\u5148\u6839\u636e\u5f0f5\u7684\u5b9a\u4e49\uff1a $$ \\mathbf{E}(\\mathbf{x}) = \\frac{1}{4\\pi\\epsilon_0}\\int_{V}\\rho(\\mathbf{x'})\\frac{\\mathbf{x}-\\mathbf{x'}}{\\abs{\\mathbf{x}-\\mathbf{x'}}^3} d^3x'= \\frac{1}{4\\pi\\epsilon_0}\\int_{V}\\rho(\\mathbf{x'})\\grad_{x}(\\frac{1}{\\abs{\\mathbf{x}-\\mathbf{x}'}})d^3x' $$ \u56e0\u6b64( \\(\\frac{\\mathbf{x}-\\mathbf{x}'}{\\abs{\\mathbf{x}-\\mathbf{x'}}^3} = -\\grad_x(\\frac{1}{\\abs{\\mathbf{x}-\\mathbf{x}'}})=-\\grad_{x'}(\\frac{1}{\\abs{\\mathbf{x}-\\mathbf{x}'}})\\))\uff0c\u7535\u573a\u7684\u65cb\u5ea6\uff1a $$ \\grad \\cross \\mathbf{E} = \\grad_x \\cross (-\\frac{1}{4\\pi \\epsilon_0}\\int \\rho(\\mathbf{x}')\\grad_{x}(\\frac{1}{\\abs{\\mathbf{x}-\\mathbf{x}'}})d^3x') \\\\ = -\\frac{1}{4\\pi \\epsilon_0} \\grad_x \\cdot (\\grad_x \\int \\frac{\\rho(\\mathbf{r'})}{\\abs{\\mathbf{x}-\\mathbf{x}'}}d^3x') \\\\ = 0 $$ \u7531\u6b64\u5c31\u8bc1\u660e\u4e86\u5728\u7a7a\u95f4\u4e2d\u4efb\u610f\u4e00\u5904\uff0c\u7535\u573a\u7684\u65cb\u5ea6\u90fd\u662f0\u3002</p> <p>\u7531\u4e0a\u9762\u7684\u8bc1\u660e\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u597d\u7528\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a $$ \\mathbf{E}(\\mathbf{x}) = -\\frac{1}{4\\pi \\epsilon_0}\\grad\\int \\frac{\\rho(\\mathbf{x'})}{\\abs{\\mathbf{x}-\\mathbf{x}'}}d^3x' = -\\grad \\Phi(\\mathbf{x}) $$ \u5176\u4e2d \\(\\Phi(\\mathbf{x})\\)\u662f\u4e00\u4e2a\u6807\u91cf\u51fd\u6570\uff08\u8fd9\u91cc\u7684\u6807\u91cf\u51fd\u6570\u6307\u7684\u662fMap: $\\R^3 \\to \\R $\uff0c\u4e5f\u5c31\u662f\u5f53\u6211\u4eec\u6307\u5b9a\u4e86\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9( \\(\\mathbf{x}\\))\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u4f1a\u7ed9\u6211\u4eec\u8fd4\u56de\u4e00\u4e2a \\(\\Phi(\\mathbf{x})\\)\uff09\uff0c\u79f0\u4e3aScalar Potential\uff1a $$ \\Phi(\\mathbf{x}) =\\frac{1}{4\\pi \\epsilon_0}\\int_V \\frac{\\rho(\\mathbf{x'})}{\\abs{\\mathbf{x-x'}}}d^3x' $$ \u5176\u4e2d \\(\\mathbf{x}\\)\u6307\u7684\u662f\u573a\u70b9\uff08\u5373\u6211\u4eec\u7814\u7a76\u7684\u5730\u65b9\uff09\uff0c\\(\\mathbf{x'}\\)\u6307\u7684\u662f\u6e90\u70b9\uff08\u4e5f\u5c31\u662f\u53d1\u51fa\u7535\u573a\u7684\u5730\u65b9\uff09</p> <p>\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u7a7a\u95f4\u4e2d\u5404\u70b9\u5904\u7684\u7535\u52bf\uff0c\u7136\u540e\u6c42\u8d1f\u68af\u5ea6\uff0c\u6765\u83b7\u5f97\u7a7a\u95f4\u5904\u5404\u70b9\u7684\u7535\u573a\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6bd4\u4f9d\u9760\u7535\u573a\u7684\u5b9a\u4e49\u6765\u76f4\u63a5\u8ba1\u7b97\u66f4\u52a0\u65b9\u4fbf\uff0c\u56e0\u4e3a\u4e00\u4e2a\u662f\u8ba1\u7b97\u77e2\u91cf\uff0c\u800c\u8fd9\u4e2a\u662f\u8ba1\u7b97\u6807\u91cf\u3002</p> <p>Tips:\u4e0b\u6587\u4e2d\u7684\u5411\u91cf\u90fd\u7528 \\(\\mathbf{E}\\)\u7c97\u4f53</p>"},{"location":"ED/Chap01/Note/Note/#the-potential-phimathbfx","title":"The Potential \\(\\Phi(\\mathbf{x})\\)","text":"<p>\u9996\u5148\uff0c\u4e0a\u9762\u6211\u4eec\u5f97\u5230\u4e86\u7535\u52bf\u548c\u7535\u573a\u7684\u5173\u7cfb\uff1a $$ \\mathbf{E}(\\mathbf{x}) = -\\grad\\Phi(\\mathbf{x}) $$ \u7531\u4e4b\u524d\u7684\u5e93\u4f26\u5b9a\u5f8b\uff0c\u4e00\u4e2a\u7535\u8377q\u5728\u8fd9\u4e2a\u7535\u573a\u4e2d\u6240\u53d7\u7684\u529b \\(\\mathbf{F} = \\mathbf{E}q\\)\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u8003\u8651\u4ece\u67d0\u4e00\u70b9A\u5c06\u7535\u8377q\u79fb\u5230\u70b9B\u8bf4\u9700\u8981\u505a\u7684\u529fW\uff08\u5e94\u8be5\u4e0e\u5e93\u4f26\u529b\u6240\u505a\u7684\u529f\u6070\u597d\u62b5\u6d88\uff0c\u6240\u4ee5W\u4e0e\u7535\u573a\u529b\u6240\u505a\u7684\u529f\u76f8\u52a0\u7b49\u4e8e0\uff09: $$ W= -\\int_A^B \\mathbf{F}\\cdot \\mathbf{dl} = -\\int_A^B q\\mathbf{E}\\cdot \\mathbf{dl} \\\\ =\\int_A^B -q\\grad\\Phi(\\mathbf{x})\\cdot \\mathbf{dl} = q\\int_A^B\\grad{\\Phi(\\mathbf{x})}\\cdot \\mathbf{dl} = q(\\Phi_B-\\Phi_A) $$ \u5176\u4e2d \\(q\\Phi\\)\u8868\u793a\u6d4b\u8bd5\u7535\u8377\u5728\u8be5\u7535\u573a\u4e0b\u7684\u52bf\u80fd\uff08Potential Energy\uff09</p> <p>\u7535\u573a\u5bf9\u4e8eA\u5230B\u7684\u8def\u5f84\u7684\u79ef\u5206\u4e3a\uff1a $$ \\int_A^B \\mathbf{E} \\cdot d\\mathbf{l} = -(\\Phi_B-\\Phi_A) $$ \u53ef\u4ee5\u53d1\u73b0\u7535\u573a\u5bf9\u4e8e\u8def\u5f84\u7684\u79ef\u5206\u53ea\u4e0e\u521d\u672b\u4f4d\u7f6e\u7684\u7535\u52bf\u5dee\u76f8\u5173\uff0c\u56e0\u6b64\u5f53\u8def\u5f84\u95ed\u5408\u7684\u65f6\u5019\u6709\uff1a $$ \\oint \\mathbf{E}\\cdot d\\mathbf{l} = 0 $$ \u8fd9\u4e2a\u7ed3\u8bba\u4e5f\u53ef\u4ee5\u5f88\u5feb\u5730\u4eceStokes Theorem \u5f97\u51fa\uff1a</p> <p>Stokes's Theorem:</p> <p>\u200b \u5982\u679c$\\mathbf{A(x)} $\u662f\u4e00\u4e2awell -behaved \u7684\u5411\u91cf\u573a\uff0cS\u662f\u4e00\u4e2a\u4efb\u610f\u7684open surface\uff0cC\u662f\u5305\u56f4S\u7684\u4e00\u4e2a\u95ed\u5408\u66f2\u7ebf\uff0c\u5219\uff1a $$ \\oint_C \\mathbf{A} \\cdot d\\mathbf{l} = \\int_S (\\grad \\cross \\mathbf{A})\\cdot \\mathbf{n} da $$ \u5176\u4e2ddl\u662fC\u4e0a\u7684\u7ebf\u5143\uff0c\u7136\u540e \\(\\mathbf{n}\\)\u662fS\u7684\u6cd5\u5411\u91cf\uff0cC\u7684\u66f2\u7ebf\u65b9\u5411\u4e0e \\(\\mathbf{n}\\)\u7684\u65b9\u5411\u5448\u53f3\u624b\u87ba\u65cb\u5173\u7cfb</p> <p>\u90a3\u4e48\u6839\u636e\u8fd9\u4e2a\u5b9a\u7406\uff0ctake\u00a0 \\(\\mathbf{A} = \\mathbf{E}\\) \uff0c\u6709\uff1a $$ \\oint_C \\mathbf{E} \\cdot d\\mathbf{l} = \\int_S (\\curl \\mathbf{E})\\cdot \\mathbf{n}\\,da $$ \u56e0\u4e3a\u7535\u573a\u7684curl\u7b49\u4e8e0\uff0c\u6240\u4ee5\u5c31\u5f97\u5230\u4e86\u7535\u573a\u6cbf\u7740\u4efb\u610f\u95ed\u5408\u66f2\u7ebf\u7684\u8def\u5f84\u79ef\u5206\u90fd\u4e3a0.</p>"},{"location":"ED/Chap01/Note/Note/#16-surface-distribution-of-charges-and-dipoles-and-discontinuities-in-the-electric-field-and-potential","title":"1.6 Surface Distribution of charges and Dipoles and Discontinuities in the Electric Field and Potential\uff08\u5076\u6781\u5b50\u4e0e\u7535\u8377\u7684\u9762\u5206\u5e03\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u7535\u52bf\u548c\u7535\u573a\u4e4b\u95f4\u4e0d\u8fde\u7eed\u6027\uff09","text":""},{"location":"ED/Chap01/Note/Note/#1","title":"1. \u9762\u7535\u8377\u5206\u5e03\uff1a","text":"<p>\u9996\u5148\u5047\u8bbe\u6709\u4e00\u4e2a\u66f2\u9762S\uff0c\u4e0a\u9762\u7684\u9762\u7535\u8377\u5bc6\u5ea6\u662f \\(\\sigma(\\mathbf{x})\\) , \u7136\u540e\u8fd9\u4e2a\u66f2\u9762\u6709\u4e24\u4e2aside\uff0c\u6211\u4eec\u73b0\u5728\u8003\u8651x\u5904\u7535\u573a\u5bf9\u4e8e\u8be5\u5904\u6cd5\u5411\u7684\u4e0d\u8fde\u7eed\u6027\uff0c\u6839\u636eGauss Law\uff0c\u5982\u679c\u6211\u4eec\u5728x\u5904\u753b\u4e00\u4e2a\u5c0f\u5706\u67f1\uff0c\u5706\u67f1\u7684\u4e0a\u4e0b\u4e24\u4e2a\u9762\u7684\u65b9\u5411\u90fd\u662f\u66f2\u9762\u7684\u6cd5\u5411\uff08\u5728side1\u90a3\u4e2a\u9762\u7684\u6cd5\u5411\u91cf\u4e0en\u76f8\u53cd\uff09\uff0c\u6709\uff1a $$ \\int_V \\div \\mathbf{E}\\,\\, d^3\\mathbf{x} = \\oint_S \\mathbf{E}\\cdot \\mathbf{n}\\, da = \\frac{Q_{\\in V}}{\\epsilon_0} $$ \u56e0\u6b64\u5bf9\u4e8e\u8fd9\u4e2a\u5c0f\u5706\u67f1\u800c\u8a00\u53f3\u8fb9\u7684\u9762\u79ef\u5206\u7684\u8d21\u732e\u53ea\u6709\u4e0a\u4e0b\u4e24\u4e2a\u9762\uff08\u56e0\u4e3a\u8fd9\u4e2a\u5c0f\u5706\u67f1\u7684\u9ad8\u8d8b\u8fd1\u4e8e0\uff09,then: $$ (\\mathbf{E_2}\\cdot \\mathbf{n} - \\mathbf{E_1}\\cdot\\mathbf{n})da = \\frac{\\sigma(\\mathbf{x})da}{\\epsilon_0} \\\\ \\mathbf{(E_2-E_1)} \\cdot \\mathbf{n} = \\frac{\\sigma(\\mathbf{x})}{\\epsilon_0} $$ \u8fd9\u4e2a\u5c31\u662f\u5bf9\u4e8e\u9762\u7535\u8377\u5206\u5e03\uff0c\u5728\u6cd5\u5411\u7535\u573a\u7684\u4e0d\u8fde\u7eed\u6027\u3002</p> <p>\u5728\u5207\u5411\u7535\u573a\u5177\u6709\u8fde\u7eed\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u5782\u76f4\u4e8e \\(\\mathbf{da}\\)\u7684\u5c0f\u77e9\u5f62\u6846\u3002\u6839\u636e\uff0c\u5bf9\u4e8e\u4efb\u4f55\u95ed\u5408\u8def\u5f84\u800c\u8a00\uff0c\u7535\u573a\u5bf9\u4e8e\u8def\u5f84\u7684\u79ef\u5206\u90fd\u662f0\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u5728\u4e24\u4e2aside\u7684\u7535\u573a\u90fd\u6295\u5f71\u5230\u4e24\u4e2a\u77e9\u5f62\u6846\u7684\u8fb9\u4e0a\uff0c\u4e5f\u5c31\u662f\u7535\u573a\u7684\u5207\u5411\u5206\u91cf\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u5f97\u5230\uff1a\u5728\u9762\u7535\u8377\u5206\u5e03\u4e0b\uff0c\u7535\u573a\u7684\u5207\u5411\u5206\u91cf\u662f\u8fde\u7eed\u7684\uff0c\u5373\uff1a $$ \\mathbf{(E_2-E_1)}\\cross \\mathbf{n} = 0 $$ \u7136\u540e\u5bf9\u4e8e\u9762\u7535\u8377\u5206\u5e03\u5728\u7a7a\u95f4\u4e2d\u7684\u7535\u52bf\u5206\u5e03\uff1a $$ \\Phi(\\mathbf{x}) = \\frac{1}{4\\pi\\epsilon_0} \\int_S \\frac{\\sigma{(\\mathbf{x'}})}{\\abs{\\mathbf{x-x'}}} \\,da' $$ \u5bf9\u4e8e\u4f53\u7535\u8377\u6216\u8005\u9762\u7535\u8377\u800c\u8a00\uff0c\u751a\u81f3\u5728\u7535\u8377\u5206\u5e03\u5185\u90e8\uff0c\u7535\u52bf\u7684\u5206\u5e03\u90fd\u662f\u8fde\u7eed\u7684\u3002</p> <p>\u8fd9\u4e00\u70b9\u53ef\u4ee5\u901a\u8fc7\u7535\u573a \\(\\mathbf{E}\\) \u662f\u6709\u754c\u7684\uff08\u826f\u5b9a\u4e49\uff08well-behaved\uff09\u7684vector field\uff09\u6765\u8bc1\u660e\uff1a</p> <p>Prove\uff1a</p> <p>\u200b \u9996\u5148\u6839\u636eE\u662f\u6709\u754c\u7684\uff08\u901a\u5e38\u60c5\u51b5\u4e0b\uff09\uff0c\u5b58\u5728\u4e00\u4e2a\u5e38\u6570M\u5c0f\u4e8e\u65e0\u7a77\u5927\uff0c\u4f7f\u5f97\uff1a $$ \\abs{\\mathbf{E(x)}} \\leq M \\:,\u5bf9\u4e8e\u5728\u7a7a\u95f4\u5185\u7684\u6240\u6709\u4f4d\u7f6e \\mathbf{x} \u5747\u6210\u7acb $$ \u200b \u7136\u540e\u6839\u636e\u7535\u573a\u4e8e\u7535\u52bf\u4e4b\u95f4\u7684\u5173\u7cfb \\(\\mathbf{E} = -\\grad\\Phi\\),\u9009\u53d6\u7a7a\u95f4\u4e2d\u975e\u5e38\u9760\u8fd1\u7684\u4e24\u4e2a\u70b9 \\(\\mathbf{x_1,x_2}\\),\u5e76\u4e14\u5728\u5b83\u4eec\u4e4b\u95f4\u6784\u5efa\u4e00\u6761\u5f88\u77ed\u7684\u8def\u5f84\uff08\u8def\u5f84\u957f\u5ea6\u8d8b\u4e8e0\uff09\uff0c\u505a \u7535\u573a\u5173\u4e8e\u8fd9\u4e2a\u8def\u5f84\u7684\u79ef\u5206\uff0c\u5f97\u5230\uff1a $$ \\int_{x_1 \\to x_2} \\mathbf{E}\\cdot d\\mathbf{l} = -\\int_{x_1}^{x_2}\\grad\\Phi \\cdot d\\mathbf{l} = \\Phi(\\mathbf{x_1})-\\Phi(\\mathbf{x_2}) $$ \u5de6\u8fb9\u5f53\u8fd9\u4e2a\u8def\u5f84\u7684\u957f\u5ea6\u8d8b\u4e8e0\u5e76\u4e14\u7535\u573a\u65f6\u6709\u754c\u7684\u65f6\u5019\uff0c\u5de6\u8fb9\u7684\u79ef\u5206\u8d8b\u4e8e0\uff0c\u5219\u6700\u7ec8\u5f97\u5230\u7a7a\u95f4\u4e2d\u4e24\u4e2a\u4efb\u610f\u9760\u8fd1\u7684\u70b9\u4e4b\u95f4\u7684\u7535\u52bf\u662f\u76f8\u7b49\u7684\u3002\u82e5\u6574\u4e2a\u7a7a\u95f4\u7684\u7535\u573a\u6709\u754c\uff0c\u5219\u8fd9\u4e2a\u7a7a\u95f4\u7684\u7535\u52bf\u662f\u8fde\u7eed\u7684\u3002 \u8bc1\u6bd5\u3002</p> <p>\u4e0a\u9762\u8bc1\u660e\u4e86\u9762\u7535\u8377\u5206\u5e03\u4e0b\u7684\u7535\u573a\u7684\u4e0d\u8fde\u7eed\u6027\u548c\u8bc1\u660e\u5728E\u6709\u754c\u7684\u60c5\u51b5\u4e0b\u7535\u52bf\u901a\u5e38\u662f\u8fde\u7eed\uff0c\u7136\u540e\u6211\u4eec\u8ba8\u8bba\u4e00\u4e2a\u7279\u4f8b\uff0c\u5c31\u662fdipole-layer\u7684potential \\(\\Phi(\\mathbf{x})\\) .</p> <p>\u9996\u5148\u4ec0\u4e48\u662f\u4e00\u4e2adipole-layer\uff08\u5076\u6781\u5b50\u5c42\uff09\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5076\u6781\u5b50\u6765\u8bf4\uff0c\u5b83\u7684\u7535\u5076\u6781\u77e9 \\(\\mathbf{p} = qd(\u65b9\u5411\u4ece\u8d1f\u7535\u8377\u6307\u5411\u6b63\u7535\u8377)\\)\uff0c\u5bf9\u4e8edipole-layer\u800c\u8a00\u5c31\u662f\u6709\u591a\u4e2a\u5076\u6781\u5b50\u6240\u6784\u6210\u7684\u66f2\u9762(\u53ef\u4ee5\u89c1\u4e0b\u56fe)\uff0c\u4e5f\u53ef\u4ee5\u60f3\u8c61\u6210\u4e24\u4e2a\u8ddd\u79bb\u5f88\u8fd1\u7684\u9762\u7535\u8377\u5206\u5e03S\uff0cS'\uff08\u4e00\u6b63\u4e00\u8d1f\uff09\u3002</p>"},{"location":"ED/Chap01/Note/Note/#_1","title":"Chap 1 Note","text":"<p>\u9996\u5148\uff0c\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2adipole-layer \u800c\u8a00\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u5076\u6781\u5b50\u7684\u5206\u5e03\u5f3a\u5ea6 \\(D(\\mathbf{x})\\): $$ \\lim_{d(\\mathbf{x})\\to0} \\sigma(\\mathbf{x})d(\\mathbf{x})= D(\\mathbf{x}) $$ \u5176\u5b9e\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ece\u5076\u6781\u5b50\u7684\u5b9a\u4e49\u51fa\u53d1\u63a8\u5bfc\u8fd9\u4e2a\u5b9a\u4e49\uff1a</p> <p>\u5f97\u51fadipole-layer \u5206\u5e03\u5f3a\u5ea6\u7684\u5b9a\u4e49\u4e4b\u540e\uff0c\u6211\u4eec\u60f3\u8981\u770b\u4e00\u4e0b\u5bf9\u4e8e\u8fd9\u4e2a\u7535\u8377\u5206\u5e03\u800c\u8a00\uff0c\u5b83\u7684\u7535\u52bf\u5206\u5e03\u662f\u600e\u4e48\u6837\u7684\uff1f</p> <p>\u6839\u636e\u7535\u52bf\u7684\u5b9a\u4e49\uff1a $$ \\Phi(\\mathbf{x}) = \\int_{V} \\frac{\\rho(\\mathbf{x'})}{\\abs{\\mathbf{x-x'}}}d^3x' $$ \u5bf9\u4e8e\u9762\u7535\u8377\u5206\u5e03 \\(\\sigma(\\mathbf{x'})\\)\u800c\u8a00\uff0c\u7535\u52bf\u4e3a\uff1a $$ \\Phi(\\mathbf{x}) = \\int_{S} \\frac{\\sigma(\\mathbf{x'})}{\\abs{\\mathbf{x-x'}}}da' $$ \u5219dipole-layer\u5728\u573a\u70b9 \\(\\mathbf{x}\\)\u5904\u7684\u7535\u52bf\u7b49\u4e8e\u4e24\u4e2a\u9762\u7535\u8377\u5206\u5e03\u7684\u53e0\u52a0\uff1a $$ \\Phi(\\mathbf{x}) = \\Phi_{S}(\\mathbf{x})+\\Phi_{S'}(\\mathbf{x}) $$ dipole-layer\u7684\u51e0\u4f55\u4fe1\u606f\u5982\u4e0b\u56fe(O\u662f\u53c2\u8003\u70b9\uff0c\u5176\u4e2d \\(d(\\mathbf{x'})\\)\u8868\u793a\u5728Surface S\u7684 \\(\\mathbf{x'}\\)\u4e0eS'\u7684\u8ddd\u79bb\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5bf9\u4e8edipole-layer\u6765\u8bf4\u5404\u5904\u90fd\u8d8b\u4e8e0)\uff1a</p> <p></p> <p>\u901a\u8fc7\u4e0a\u9762\u7684\u51e0\u4f55\u5173\u7cfb\u5c31\u53ef\u4ee5\u5199\u51fadipole-layer \u5728x\u5904\u7535\u52bf\u7684\u8868\u8fbe\u5f0f\uff1a $$ \\Phi(\\mathbf{x}) = \\Phi_{S}(\\mathbf{x})+\\Phi_{S'}(\\mathbf{x}) \\\\ = \\frac{1}{4\\pi\\epsilon_0}\\int_{S} \\frac{\\sigma(\\mathbf{x'})}{\\abs{\\mathbf{x-x'}}}da'+ \\frac{1}{4\\pi\\epsilon_0}\\int_{S'} \\frac{\\sigma(\\mathbf{x''})}{\\abs{\\mathbf{x-x'+n}d}}da'' $$ \u7136\u540e\u6839\u636e\u4e24\u4e2a\u66f2\u9762\u7684\u9762\u7535\u8377\u5bc6\u5ea6\u76f8\u53cd\u6709\uff1a $$ \\Phi(\\mathbf{x}) =\\frac{1}{4\\pi\\epsilon_0}\\int_{S} \\frac{\\sigma(\\mathbf{x'})}{\\abs{\\mathbf{x-x'}}}da'- \\frac{1}{4\\pi\\epsilon_0}\\int_{S'} \\frac{\\sigma(\\mathbf{x''})}{\\abs{\\mathbf{x-x'+n}d}}da'' $$ \u5bf9\u4e8e\u7b2c\u4e8c\u9879\uff0c\u5bf9\u4e8eDipole-layer\u800c\u8a00d\u5728\u5404\u5904\u90fd\u975e\u5e38\u5c0f\uff0c\u90a3\u4e48\u5bf9\u4e8e \\(\\frac{1}{\\abs{\\mathbf{x-x'+n}d}}\\)\u5728 x-x'+nd \u63a5\u8fd1x-x'\u7684\u4f4d\u7f6e\u505aTaylor Expansion \u6709\uff1a $$ \\frac{1}{\\abs{\\mathbf{x-x'+n}d}} = \\frac{1}{\\abs{\\mathbf{x-x'}}}+d(\\mathbf{x'})\\mathbf{n}\\cdot \\grad_x{\\frac{1}{\\abs{\\mathbf{x-x'}}}} + \\dots $$ \u56e0\u6b64\u5e26\u56de\u5f0f\uff0841\uff09\uff1a $$ \\Phi(\\mathbf{x}) =\\frac{1}{4\\pi\\epsilon_0}\\int_{S} \\frac{\\sigma(\\mathbf{x'})}{\\abs{\\mathbf{x-x'}}}da'- \\frac{1}{4\\pi\\epsilon_0}\\int_{S'} \\sigma(\\mathbf{x'})(\\frac{1}{\\abs{\\mathbf{x-x'}}}+d(\\mathbf{x'})\\mathbf{n}\\cdot \\grad_x{\\frac{1}{\\abs{\\mathbf{x-x'}}}})da'' \\\\ =\\frac{1}{4\\pi\\epsilon_0}\\int_{S} \\frac{\\sigma(\\mathbf{x'})}{\\abs{\\mathbf{x-x'}}}da'- \\frac{1}{4\\pi\\epsilon_0}\\int_{S'} \\sigma(\\mathbf{x'})\\frac{1}{\\abs{\\mathbf{x-x'}}}da''-\\frac{1}{4\\pi\\epsilon_0}\\int_{S'}\\sigma(\\mathbf{x'})d(\\mathbf{x'})\\mathbf{n}\\cdot \\grad_x{\\frac{1}{\\abs{\\mathbf{x-x'}}}}da'' $$ \u7136\u540e\u4ee3\u5165\u6761\u4ef6\uff0c\u5bf9\u4e8edipole-layer\u800c\u8a00\u4e24\u4e2a\u66f2\u9762\u7684\u8ddd\u79bbd\u8d8b\u4e8e0\uff0c\u56e0\u6b64\u524d\u4e24\u9879\u62b5\u6d88\uff0c\u7136\u540eS\u51e0\u4e4e\u7b49\u4e8eS' \uff0cda'' \u51e0\u4e4e\u7b49\u4e8eda',\u4ee5\u53ca \\(D(\\mathbf{x}) = \\lim_{d\\to 0}\\sigma(\\mathbf{x})d(\\mathbf{x})\\)\uff0c\u6709\uff1a $$ \\Phi(\\mathbf{x}) = -\\frac{1}{4\\pi\\epsilon_0}\\int_{S} D(\\mathbf{x'})\\mathbf{n}\\cdot \\grad_x{\\frac{1}{\\abs{\\mathbf{x-x'}}}}da' =\\frac{1}{4\\pi\\epsilon_0}\\int_{S} D(\\mathbf{x'})\\mathbf{n}\\cdot \\grad_{\\mathbf{x'}}{\\frac{1}{\\abs{\\mathbf{x-x'}}}}da' $$ \u5176\u4e2d \u5355\u4f4d\u5411\u91cf\\(\\mathbf{n}\\)\u7684\u65b9\u5411\u5c31\u662fdipole-layer\u66f2\u9762S\u7684\u6cd5\u5411\u91cf\u4e5f\u662f\u8fd9\u4e2adipole-layer\u6b64\u5904\u7684\u7535\u5076\u6781\u77e9\u7684\u65b9\u5411\uff0c\u5728\u6700\u540e\u4e00\u4e2a\u7b49\u53f7\u5bf9grad\u7684\u53d8\u91cf\u505a\u4e86\u4e00\u4e2a\u53d8\u6362\uff08\\(x\\to x'\\)\uff09\uff0c\u6240\u4ee5\u524d\u9762\u7684\u8d1f\u53f7\u62b5\u6d88\u4e86\u3002</p> <p>\u89c2\u5bdf\u5f0f\uff0844\uff09\uff0c\u79ef\u5206\u91cc\u9762\u5305\u542b\u7740\u4e00\u4e2a\u70b9\u7535\u5076\u6781\u5b50\u7684\u7535\u5076\u6781\u77e9 \\(\\mathbf{p = n}Dda'\\),\u56e0\u4e3a\u4e00\u4e2adipole-layer\u53ef\u4ee5\u770b\u6210\u7531\u5f88\u591a\u4e2a\u9760\u7684\u5f88\u8fd1\u7684\u7535\u5076\u6781\u5b50\u7ec4\u5408\u800c\u6210\uff0c\u90a3\u4e48dipole-layer\u4ea7\u751f\u7684\u7535\u52bf\u4e5f\u53ef\u4ee5\u7531\u5404\u4e2a\u7535\u5076\u6781\u5b50\u6240\u4ea7\u751f\u7684\u7535\u52bf\u53e0\u52a0\u800c\u6210\uff0c\u6839\u636e\u7b97\u5230\u7684dipole-layer\u7684\u7535\u52bf\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5728 \\(\\mathbf{x'}\u70b9\u7535\u5076\u6781\u5b50\\)\u5728 \\(\\mathbf{x}\\)\u5904\u9020\u6210\u7684\u7535\u52bf\u4e3a\uff1a $$ \\Phi(\\mathbf{x}) = \\frac{1}{4\\pi\\epsilon_0}\\frac{\\mathbf{p\\cdot(x-x')}}{\\abs{\\mathbf{x-x'}}^3} $$ \u5176\u4e2d\uff1a\\(\\grad_{x'}\\frac{1}{\\abs{\\mathbf{x-x'}}} = \\frac{\\mathbf{(x-x')}}{\\abs{\\mathbf{x-x'}}^3}=-\\grad_x \\frac{1}{\\abs{\\mathbf{x-x'}}}\\)</p> <p>\u5f0f(44)\u7684\u51e0\u4f55\u89e3\u91ca</p> <p>\u6211\u4eec\u53d1\u73b0\uff1a $$ \\mathbf{n} \\cdot \\grad_{\\mathbf{x'}}(\\frac{1}{\\abs{\\mathbf{x-x'}}})da'=\\mathbf{n\\cdot\\frac{\\mathbf{(x-x')}}{\\abs{\\mathbf{x-x'}}^3}}da' $$ \u8fd9\u4e2a\u5f0f\u5b50\u7684\u53f3\u8fb9\u5f88\u50cf\u7acb\u4f53\u89d2\u7684\u5b9a\u4e49\uff1a $$ d\\Omega = \\frac{\\mathbf{n\\cdot{r}}}{r^3}da $$ \u5f0f46\u5373\u4ece \\(\\mathbf{x}\\)\u89c2\u5bdf\u4f4d\u4e8e \\(\\mathbf{x'}\\)\u7684\u9762\u5143da'\u7684\u7acb\u4f53\u89d2\uff0c\u5982\u4e0b\u56fe:</p> <p></p> <p>\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\uff1a $$ \\mathbf{n} \\cdot \\grad_{\\mathbf{x'}}(\\frac{1}{\\abs{\\mathbf{x-x'}}})da'=\\mathbf{n\\cdot\\frac{\\mathbf{(x-x')}}{\\abs{\\mathbf{x-x'}}^3}}da'=-d\\Omega $$ \u6700\u540e\u6211\u4eec\u5f97\u5230\uff0cdipole-layer\u5728\u70b9 \\(\\mathbf{x}\\)\u5904\u7684\u7535\u52bf\uff1a $$ \\Phi(\\mathbf{x}) = -\\frac{1}{4\\pi\\epsilon_0} \\int_S D(\\mathbf{x'})d\\Omega $$ </p> <p>\u901a\u8fc7\u7535\u52bf\u7684\u51e0\u4f55\u89e3\u91ca\uff0c\u53ef\u4ee5\u8bf4\u660edipole-layer\u4e24\u4fa7\u7684\u7535\u52bf\u8df3\u53d8\uff1a</p> <p>\u9996\u5148\uff0c\u5982\u679c\u8003\u8651\u79bbS\u8868\u9762\u5f88\u8fd1\u7684\u4e00\u4e2a\u70b9\uff0c\u4ece\u8fd9\u4e2a\u70b9\u89c2\u5bdfS\u9762\u7684\u7acb\u4f53\u89d2\u51e0\u4e4e\u662f-2\\(\\pi\\)(\u56e0\u4e3a\u6b64\u65f6\uff0c\u8fd9\u4e2aS\u8868\u9762\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u800c\u8a00\u5c31\u50cf\u4e00\u4e2a\u5706\u76d8\uff08disk),\u8003\u8651\u65b9\u5411\u7684\u8bdd\uff0c\u8fd9\u4e2a\u7acb\u4f53\u89d2\u662f\u8d1f\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u79bb\u4e00\u4e2a\u65e0\u9650\u5927\u5e73\u9762\u6709\u4e00\u5b9a\u8ddd\u79bb\u7684\u70b9\uff0c\u8fd9\u4e2a\u5e73\u9762\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u7684\u7acb\u4f53\u89d2\u4e3a0\uff0c\u56e0\u4e3a\u770b\u4e0d\u5230\u8fb9\u754c)\uff0c\u5e76\u4e14\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u800c\u8a00\u8fd9\u4e2a\u5706\u76d8\u7684\u8868\u9762\u7535\u5076\u6781\u77e9\u7684\u5bc6\u5ea6\u662f\u6052\u5b9a\u7684\uff0c\u56e0\u6b64D\u5728\u8fd9\u4e2a\u60c5\u51b5\u4e0b\u662f\u5747\u5300\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8eS\u4e0a\u65b9\u7684\u70b9\u4ed6\u7684\u7535\u52bf\u4e3a\uff1a $$ \\Phi_{S+} = -\\frac{D}{4\\pi\\epsilon_0}\\cdot (-1)2\\pi = \\frac{D}{2\\epsilon_0} $$ \u540c\u6837\u7684\u5bf9\u4e8eS'\u4e0b\u65b9\u4e00\u4e2a\u5f88\u8fd1\u7684\u70b9\uff0c\u5b83\u7684\u7acb\u4f53\u89d2\u5c31\u662f \\(+2\\pi\\),\u5219\uff1a $$ \\Phi_{S'-}=-\\frac{D}{4\\pi\\epsilon_0}\\cdot(2\\pi) = -\\frac{D}{2\\epsilon_0} $$ \u56e0\u6b64\u5bf9\u4e8edipole-layer\u4e24\u4fa7\u7684\u7535\u52bf\u8df3\u53d8\u662f\uff1a $$ \\Phi_{S+} -\\Phi_{S'-}= \\frac{D}{\\epsilon_0} $$</p>"},{"location":"ED/Chap01/Note/Note/#p-qddipole-layerdipole-layerdadp-dp-lim_dto0sigmamathbfx-dadmathbfx","title":"\u9996\u5148\u5076\u6781\u5b50\u7684\u7535\u5076\u6781\u77e9\u5b9a\u4e49\u662f \\(p = qd\\)\uff0c\u8fd9\u4e2adipole-layer\u5b83\u7684\u5206\u5e03\u5f3a\u5ea6\uff0c\u5176\u5b9e\u662f\u5728\u4e00\u4e2a\u5c0f\u9762\u79ef\u4e0a\u7684\u7535\u5076\u6781\u77e9\u6709\u591a\u5927\uff0c\u5728dipole-layer\u7684\u66f2\u9762\u4e0a\u53d6\u4e00\u4e2a\u5c0f\u9762\u5143da,\u5728\u5b83\u4e0a\u9762\u7684\u7535\u5076\u6781\u77e9dp\u5c31\u4f1a\u662f \\(dp = lim_{d\\to0}(\\sigma(\\mathbf{x}) da)d(\\mathbf{x})\\)\uff0c\u6700\u540e\u6211\u4eec\u901a\u8fc7\u79ef\u5206\u5f97\u5230\uff1a","text":"\\[ p(\\mathbf{x}) = \\lim_{d\\to 0}\\sigma(\\mathbf{x})d(\\mathbf{x}) S \\] <p>\u8fd9\u4e2a\u662f\u6574\u4e2a\u66f2\u9762\u4e0a\u7684\u7535\u5076\u6781\u77e9\u7684\u5927\u5c0f\uff0c\u4f46\u662f\u6211\u4eec\u8981\u5f97\u5230\u7684\u662f\u8fd9\u4e2a\u66f2\u9762\u4e0a\u7684\u7535\u5076\u6781\u77e9\u7684\u5bc6\u5ea6\uff0c\u7136\u540e\u6211\u4eec\u4e24\u8fb9\u9664\u4ee5\u66f2\u9762\u7684\u9762\u79ef\u5f97\u5230\uff1a $$ D(\\mathbf{x}) = \\lim_{d\\to 0}\\sigma(\\mathbf{x})d(\\mathbf{x}) $$ </p>"},{"location":"ED/Chap01/Note/Note/#17-poisson-and-laplace-equations","title":"1.7 Poisson and Laplace Equations","text":"<p>\u5728\u524d\u9762\u6211\u4eec\u7684\u5f97\u5230\u4e86\u7535\u573a\u7684\u4e24\u4e2a\u5c5e\u6027\uff0c\u4e00\u4e2a \\(\\div \\mathbf{E}\\)\uff08\u6563\u5ea6\uff09\uff0c\u4e00\u4e2acurl \\(\\curl{\\mathbf{E}}\\)\uff08\u65cb\u5ea6\uff09\uff1a $$ \\div \\mathbf{E} = \\frac{\\rho}{\\epsilon_0} \\, ,\\curl\\mathbf{E} = 0 $$ \u5728\u63a8\u5bfc\u7535\u573a\u7684\u65cb\u5ea6\u4e3a\u96f6\u7684\u65f6\u5019\u53c8\u81ea\u7136\u7684\u5f97\u51fa\u4e86\u4e00\u4e2a\u6027\u8d28\uff1a</p> <p>\u5bf9\u4e8e\u4e00\u4e2avector field \\(\\mathbf{E}\\)\u800c\u8a00\uff0c\u5982\u679c\u5176\u65cb\u5ea6\u4e3a\u96f6\uff0c\u5219\u5b58\u5728\u4e00\u4e2ascalar field $ \\Phi$\uff0cs.t \uff1a $$ \\curl{\\mathbf{E}}= 0 \\to\\mathbf{E} = -\\grad{\\Phi} $$</p> <p>\u4e8e\u662f\u7ed3\u5408\u7535\u573a\u6563\u5ea6\u4e0e\u65cb\u5ea6\u7684\u63a8\u8bba\uff0c\u5f97\u51faPossion equation\uff1a $$ \\nabla^2\\Phi = -\\frac{\\rho}{\\epsilon_0} $$ \u82e5\u8ba8\u8bba\u7684\u7a7a\u95f4\u533a\u57df\u4e2d\u7535\u8377\u5bc6\u5ea6\u4e3a0\uff0c\u5219Possion equation\u9000\u5316\u4e3aLapalce equation\uff1a $$ \\nabla^2 \\Phi = 0 $$</p>"},{"location":"ED/Chap01/Note/Note/#possion-equation","title":"Possion equation\u7684\u9a8c\u8bc1\uff1a","text":"<p>\u4e4b\u524d\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u4efb\u610f\u7684\u7535\u8377\u5bc6\u5ea6\u5bf9\u4e8e\u7a7a\u95f4\u4e2d\u4efb\u610f\u4e00\u70b9 \\(\\mathbf{x}\\) \u7684\u7535\u52bf \\(\\Phi\\) \u7684\u8868\u8fbe\u5f0f\uff1a $$ \\Phi(\\mathbf{x})= \\frac{1}{4\\pi\\epsilon_0}\\int_V \\frac{\\rho(\\mathbf{x'})}{\\abs{\\mathbf{x-x'}}} d^3x' $$ \u90a3\u4e48\u5982\u679c\u60f3\u8981\u9a8c\u8bc1Possion equation\uff0c\u4e24\u8fb9\u90fd\u4f5c\u7528Laplacian\uff08\\(\\nabla^2\\))\uff0c\u5219\u9700\u8981\u9a8c\u8bc1\uff1a $$ \\nabla^2 \\Phi(\\mathbf{x}) = \\nabla^2(\\frac{1}{4\\pi\\epsilon_0}\\int_V \\frac{\\rho(\\mathbf{x'})}{\\abs{\\mathbf{x-x'}}} d^3x') $$ \u4f46\u662f\u5728\u9a8c\u8bc1\u4e4b\u524d\uff0c\u6211\u4eec\u505a\u4e00\u4e2a\u6781\u9650\u5904\u7406\uff0c\u5b9a\u4e49\u4e00\u4e2a\u201ca- Potential\u201d\uff1a $$ \\Phi_a(\\mathbf{x}) =\\frac{1}{4\\pi\\epsilon_0}\\int_V \\frac{\\rho(\\mathbf{x'})}{\\sqrt{(\\mathbf{x-x'})^2+a^2}} d^3x' $$ \u5219\u6709\uff1a $$ \\lim_{a\\to0}\\nabla^2\\Phi_a(\\mathbf{x}) = \\nabla^2\\Phi(\\mathbf{x}) = -\\frac{\\rho}{\\epsilon_0} $$ \u5219\u8bc1\u660e\u524d\u9762\u5bf9\u4e8ea-potential\u7684\u6781\u9650\u7b49\u4e8e\u53f3\u8fb9\uff0c\u6211\u4eec\u5bf9a-potential\u505a\u51fa\u4e00\u4e9b\u5904\u7406\uff1a\u8003\u8651\u5230 \\(\\frac{1}{\\abs{\\mathbf{x-x'}}}\\)\u5177\u6709\u4e00\u5b9a\u7684\u7403\u5bf9\u79f0\u6027\uff0c\u6211\u4eec\u5047\u8bbe \\(r = \\abs{\\mathbf{x-x'}}\\)\uff0cr \u4ece0\u5230\u65e0\u7a77\uff0c\u5927\u5219\u8bc1\uff1a $$ \\lim_{a\\to 0} \\nabla^2 \\frac{1}{4\\pi\\epsilon_0}\\int_V \\frac{\\rho(\\mathbf{x'})}{\\sqrt{r^2+a^2}} d^3x' $$ \u56e0\u4e3a\u5916\u9762\u7684\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u662f\u5bf9 \\(\\mathbf{x}\\)\u4f5c\u7528\u7684\uff0c\u800c\u79ef\u5206\u53d8\u91cf\u662f \\(\\mathbf{x'}\\) ,\u56e0\u6b64\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a $$ \\frac{1}{4\\pi\\epsilon_0}\\int_V \\rho(\\mathbf{x'})\\lim_{a\\to 0}\\nabla^2(\\frac{1}{\\sqrt{r^2+a^2}}) d^3x' $$ \u6211\u4eec\u5148\u5904\u7406\u4e00\u4e0b \\(\\nabla^2(\\frac{1}{\\sqrt{r^2+a^2}})\\): $$ \\nabla^2(\\frac{1}{\\sqrt{r^2+a^2}}) = (\\grad)\\cdot(\\hat{\\mathbf{i}}\\frac{\\partial}{\\partial{x_1}}+\\hat{\\mathbf{j}}\\frac{\\partial}{\\partial{y_1}}+\\hat{\\mathbf{k}}\\frac{\\partial}{\\partial{z_1}})(\\frac{1}{\\sqrt{r^2+a^2}})) \\\\ =(\\grad)\\cdot(\\hat{\\mathbf{i}}\\frac{\\partial}{\\partial{x_1}}(\\frac{1}{\\sqrt{r^2+a^2}})+\\hat{\\mathbf{j}}\\frac{\\partial}{\\partial{y_1}}(\\frac{1}{\\sqrt{r^2+a^2}})+\\hat{\\mathbf{k}}\\frac{\\partial}{\\partial{z_1}}(\\frac{1}{\\sqrt{r^2+a^2}})) \\\\ =(\\hat{\\mathbf{i}}\\frac{\\partial}{\\partial{x_1}}+\\hat{\\mathbf{j}}\\frac{\\partial}{\\partial{y_1}}+\\hat{\\mathbf{k}}\\frac{\\partial}{\\partial{z_1}})\\cdot (-\\hat{\\mathbf{i}}\\frac{(x_1-x_1')}{(r^2+a^2)^{3/2}}-\\hat{\\mathbf{j}}\\frac{(y_1-y_1')}{(r^2+a^2)^{3/2}}-\\hat{\\mathbf{k}}\\frac{(z_1-z_1')}{(r^2+a^2)^{3/2}}) \\\\ = \\frac{3(x_1-x_1')^2-r^2-a^2}{(r^2+a^2)^{5/2}}+\\frac{3(y_1-y_1')^2-r^2-a^2}{(r^2+a^2)^{5/2}}+\\frac{3(z_1-z_1')^2-r^2-a^2}{(r^2+a^2)^{5/2}} \\\\ \\nabla^2(\\frac{1}{\\sqrt{r^2+a^2}})=\\frac{3r^2-3r^2-3a^2}{(r^2+a^2)^{5/2}} = \\frac{-3a^2}{(r^2+a^2)^{5/2}} $$ \u5176\u4e2dr = \\(\\sqrt{(x_1-x_1')^2+(y_1-y_1')^2+(z_1-z_1')^2} = \\abs{\\mathbf{x-x'}},\\mathbf{x} = (x_1,y_1,z_1)\\), \u56e0\u6b64\u4e0a\u9762\u7684\u79ef\u5206\u4e3a\uff1a $$ \\lim_{a\\to0} \\nabla^2 \\Phi_a(\\mathbf{x}) =\\lim_{a\\to 0 }(\\frac{1}{4\\pi\\epsilon_0}\\int_V \\rho(\\mathbf{x'}) \\frac{-3a^2}{(r^2+a^2)^{5/2}} d^3x') $$ \u5bf9\u4e8e\u4e0a\u5f0f\u53f3\u8fb9\u7684\u79ef\u5206\uff0c\u53ef\u4ee5\u770b\u5230\u5f53a\u8d8b\u4e8e0\u7684\u65f6\u5019\uff0c\u82e5r\u7b49\u4e8e0\uff0c\u5219\u8fd9\u4e2a\u79ef\u5206\u8d8b\u4e8e\u65e0\u7a77\u5927\uff0c\u82e5r\u4e0d\u7b49\u4e8e0 \u5219\u8fd9\u4e2a\u79ef\u5206\u4e3a0\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u5728a\u53d6\u4efb\u610f\u503c\u7684\u60c5\u51b5\u4e0b\uff08a\u4e0d\u4e00\u5b9a\u4e3a0\uff09\uff0c\u8fd9\u4e2a\u79ef\u5206 \\(\\int_V \\frac{-3a^2}{(r^2+a^2)^{5/2}} d^3x'= 4\\pi\\):</p> <p>For arbitary a, the integral \\(\\int_V \\frac{-3a^2}{(r^2+a^2)^{5/2}} d^3x'= 4\\pi\\)</p> <p>Prove: $$ \\int_V \\frac{-3a^2}{(r^2+a^2)^{5/2}} d^3x' =-\\int_0^{4\\pi} d\\Omega \\int_0^{\\infin} r^2dr\\frac{3a^2}{(r^2+a^2)^{5/2}} \\\\ =-4\\pi \\int_{0}^{\\frac{\\pi}{2}} 3\\sin^2{t}\\cos{t} \\, dt \\\\ = -4\\pi \\quad \\left( r = a\\tan{t} \\right) $$ </p> <p>\u901a\u8fc7\u4e0a\u9762\u7684\u8bc1\u660e\u4e0e\u5206\u6790\u53ef\u4ee5\u770b\u51fa\u5bf9\u4e8e\u51fd\u6570 $\\lim_{a\\to0}\\nabla^2(\\frac{1}{\\sqrt{r^2+a^2}}) = -4\\pi\\delta({\\mathbf{x-x'}}) $,\u7406\u7531\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u51fd\u6570\u5bf9\u4e8eV\u79ef\u5206\u7684\u65f6\u5019\uff0c\u82e5\u79ef\u5206\u533a\u57df\u4e2d\u4e0d\u5305\u542bx = x'\u7684\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u79ef\u5206\u5c31\u662f0\uff0c\u5982\u679c\u79ef\u5206\u533a\u57df\u5305\u542b\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684a\u800c\u8a00\uff0c\u8fd9\u4e2a\u51fd\u6570\u5728\u8fd9\u4e2a\u533a\u57df\u7684\u79ef\u5206\u662f \\(-4\\pi\\)\uff0c\u56e0\u6b64\u8fd9\u4e2a\u51fd\u6570\u7684\u6027\u8d28\u4e0edelta\u51fd\u6570\u5728\u79ef\u5206\u4e0a\u7684\u6027\u8d28\u4e00\u81f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u7b49\u4ef7\u3002</p> <p>\u5230\u6b64\uff0c\u5f0f\uff0862\uff09\u7684\u79ef\u5206\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\lim_{a\\to0}\\Phi_a(\\mathbf{x})=\\frac{1}{4\\pi\\epsilon_0}\\int_V \\rho(\\mathbf{x'})\\lim_{a\\to 0}\\nabla^2(\\frac{1}{\\sqrt{r^2+a^2}}) d^3x' = \\frac{1}{4\\pi\\epsilon_0}\\int_V \\rho(\\mathbf{x'})(-4\\pi\\delta(\\mathbf{x-x'})) d^3x' = -\\frac{\\rho}{\\epsilon_0} $$ \u4e8e\u662fPossion Equation\u5c31\u88ab\u8bc1\u660e\u4e86\u3002</p> <p>\u53e6\u4e00\u79cd\u8bc1\u660e\u601d\u8def\uff08\u6682\u65f6\u505c\u6b62\uff0c\u6570\u5b66\u8fc7\u7a0b\u592a\u591a\u4e86\uff0c\u611f\u89c9\u6ca1\u6709\u8868\u793a\u6e05\u695a\uff09\uff1a $$ \\lim_{a\\to0} \\nabla^2 \\Phi_a(\\mathbf{x}) =\\lim_{a\\to 0 }(\\frac{1}{4\\pi\\epsilon_0}\\int_V \\rho(\\mathbf{x'}) \\frac{-3a^2}{(r^2+a^2)^{5/2}} d^3x') $$ \u7531\u4e8e\u79ef\u5206\u7684\u7403\u5bf9\u79f0\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5e38\u89c4\u7684\u4f53\u79ef\u5206\u8f6c\u5316\u4e3a\u7403\u5750\u6807\u7cfb\u4e0b\u7684\u79ef\u5206\uff1a $$ \\lim_{a\\to 0 }(\\frac{1}{4\\pi\\epsilon_0}\\int_V \\rho(\\mathbf{x'}) \\frac{-3a^2}{(r^2+a^2)^{5/2}} d^3x') = \\lim_{a\\to 0 }(\\frac{-1}{4\\pi\\epsilon_0}\\int_0^{4\\pi} d\\Omega\\int_0^{\\infin}r^2dr\\rho(\\mathbf{x'}) \\frac{-3a^2}{(r^2+a^2)^{5/2}}) $$ \u5bf9\u4e8e\u4e0a\u9762\u7684\u79ef\u5206\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5982\u679c\u6211\u4eec\u4ee5\\(\\mathbf{x}\\)\u4e3a\u4e2d\u5fc3\u753b\u4e00\u4e2a\u534a\u5f84\u4e3aR\u7684\u5c0f\u7403\uff08R\u5f88\u5c0f\uff0c\u4f46a\u8fdc\u5c0f\u4e8eR\uff09\u5e76\u4e14\u5728\u5c0f\u7403\u5185\u7535\u8377\u7684\u4f53\u5bc6\u5ea6\u51e0\u4e4e\u5904\u5904\u76f8\u7b49\uff0c\u4f46\u5f53\u79ef\u5206\u53d8\u91cf\u5728\u8fd9\u4e2a\u7403\u5916\u9762\uff0cr\u4e0d\u7b49\u4e8e0\uff0c\u4f46\u662f\u79ef\u5206\u91cc\u9762\u7684\u51fd\u6570\u5374\u4ee5 \\(a^2\\)\u7684\u6570\u91cf\u7ea7\u8d8b\u4e8e0\uff0c\u56e0\u6b64\u6574\u4e2a\u79ef\u5206\u53ef\u4ee5\u5ffd\u7565r\u5927\u4e8eR\u7684\u533a\u57df\uff0c\u5219\uff1a $$ \\lim_{a\\to 0 }(\\frac{-1}{4\\pi\\epsilon_0}\\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr\\rho(\\mathbf{x'}) \\frac{-3a^2}{(r^2+a^2)^{5/2}}) = \\lim_{a\\to 0} \\frac{-1}{4\\pi\\epsilon_0} P(a) $$ \u5728\u8fd9\u4e2a\u533a\u57df\u5185\uff0c\u7535\u8377\u7684\u4f53\u5bc6\u5ea6\u53ef\u4ee5\u5728x'\u8d8b\u8fd1\u4e8ex\u65f6\u505aTaylor Expansion(Scalar function of three variables)\uff0c</p> <p>\u9996\u5148\u5bf9\u4e8e \u7535\u8377\u5bc6\u5ea6\u8fd9\u6837\u7684Scalar function \\(f(\\mathbf{x})\\) :$ \\R^n \\to\\R$ \uff0c\u6709\u5728 \\(\\mathbf{a}\\)\u7684Taylor Expansion($\\mathbf{h=x-a} $,\u5b83\u4e5f\u662fn\u7ef4\u5411\u91cf\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5217\u5411\u91cf)\uff1a $$ f(\\mathbf{x}) = f(\\mathbf{a}) +\\grad{f(\\mathbf{a})}\\cdot \\mathbf{h}+\\frac{1}{2}\\mathbf{h^T H_f(a)h} + \\frac{1}{3!}\\sum_{i,j,k=1}^{n} \\frac{\\partial^3 f}{\\partial{x_i}\\partial{x_j}\\partial{x_k}}(\\mathbf{a})h_i h_j h_k +\\dots $$ \u5176\u4e2d\uff0c\\(\\grad{f(\\mathbf{a})}\\)\u662f\u4e00\u4e2a\u884c\u5411\u91cf\uff08row\uff09\uff0c\u5b9a\u4e49\u662f\\(\\grad{f(\\mathbf{a})} = (\\frac{\\partial{f}}{\\partial{x_1}}(a),\\dots,\\frac{\\partial{f}}{\\partial{x_n}}(a))\\)\uff0c\u4ee5\u53ca \\(\\mathbf{H_f}(x)\\)\u662fHessian Matrix\uff1a $$ H_f(\\mathbf{x}) = \\begin{bmatrix} \\frac{\\partial^2 f}{\\partial x_1^2} &amp; \\frac{\\partial^2 f}{\\partial x_1\\partial x_2} &amp; \\cdots &amp; \\frac{\\partial^2 f}{\\partial x_1\\partial x_n}\\\\ \\frac{\\partial^2 f}{\\partial x_2\\partial x_1} &amp; \\frac{\\partial^2 f}{\\partial x_2^2} &amp; \\cdots &amp; \\frac{\\partial^2 f}{\\partial x_2\\partial x_n}\\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots\\\\ \\frac{\\partial^2 f}{\\partial x_n\\partial x_1} &amp; \\frac{\\partial^2 f}{\\partial x_n\\partial x_2} &amp; \\cdots &amp; \\frac{\\partial^2 f}{\\partial x_n^2} \\end{bmatrix}. $$ \u56e0\u6b64\uff0c\u5bf9\u4e8e\u7535\u8377\u5bc6\u5ea6\u8fd9\u6837\u7684Scalar Function\uff0c\u6709(\\(\\mathbf{h=x-x'}=(x_1-x_1',x_2-x_2',x_3-x_3')\\))\uff1a $$ \\rho(\\mathbf{x'}) = \\rho(\\mathbf{x})+\\grad\\rho(\\mathbf{x})\\cdot\\mathbf{h}+\\frac{1}{2}\\mathbf{h^T H_{\\rho}(x)h}+\\dots $$ \u6b64\u65f6P(a)\u53d8\u4e3a\uff1a $$ P(a)= \\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr [\\rho(\\mathbf{x})+\\grad\\rho(\\mathbf{x})\\cdot\\mathbf{h}+\\frac{1}{2}\\mathbf{h^T H_{\\rho}(x)h}+\\dots] \\frac{-3a^2}{(r^2+a^2)^{5/2}}) $$ \u90a3\u4e48\u5bf9\u4e8e\u5e38\u6570\u9879 \\(\\rho(\\mathbf{x})\\)\u800c\u8a00\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u79ef\u5206\u7684\u8d21\u732e\u5c31\u662f \\(-4\\pi\\rho(\\mathbf{x})\\)\u3002</p> <p>\u4e00\u6b21\u9879 \\(\\grad\\rho(\\mathbf{x})\\cdot\\mathbf{h}=\\frac{\\partial{\\rho}}{\\partial{x_1}}(\\mathbf{x})(x_1-x_1')+\\frac{\\partial{\\rho}}{\\partial{x_2}}(\\mathbf{x})(x_2-x_2')+\\frac{\\partial{\\rho}}{\\partial{x_3}}(\\mathbf{x})(x_3-x_3')\\)\u5bf9\u8fd9\u4e2a\u79ef\u5206\u7684\u8d21\u732e: $$ (1)\\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_1}}(\\mathbf{x})(x_1-x_1')\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\\\ \\propto \\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_1}}r\\sin{\\theta}\\cos{\\phi}\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\\\ = \\int_0^{2\\pi}\\cos{\\phi}d \\phi\\int_0^{\\pi}\\sin^2{\\theta}d\\theta\\int_0^{R} \\frac{\\partial{\\rho}}{\\partial{x_1}}\\frac{-3a^2r^3}{(r^2+a^2)^{5/2}}dr =0 \\\\ (2)\\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_2}}(\\mathbf{x})(x_2-x_2')\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\\\ \\propto \\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_1}}r\\sin{\\theta}\\sin{\\phi}\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\\\ = \\int_0^{2\\pi}\\sin{\\phi}d \\phi\\int_0^{\\pi}\\sin^2{\\theta}d\\theta\\int_0^{R} \\frac{\\partial{\\rho}}{\\partial{x_1}}\\frac{-3a^2r^3}{(r^2+a^2)^{5/2}}dr =0 \\\\ (3)\\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_3}}(\\mathbf{x})(x_3-x_3')\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\\\ \\propto \\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_1}}r\\cos{\\theta}\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\\\ = \\int_0^{2\\pi} d \\phi\\int_0^{\\pi}\\sin{\\theta}\\cos{\\theta}d\\theta\\int_0^{R} \\frac{\\partial{\\rho}}{\\partial{x_1}}\\frac{-3a^2r^3}{(r^2+a^2)^{5/2}}dr =0 $$ \u56e0\u6b64\u4e00\u6b21\u9879\u7684\u8d21\u732e\u662f0\uff0c\u5176\u4e2d\u5229\u7528\u4e86 : $$ r =\\abs{\\mathbf{x-x'}}= \\sqrt{(x_1-x_1')^2+(x_2-x_2')^2+(x_3-x_3')^2} \\to x_1-x_1' \\propto r\\sin{\\theta}\\cos{\\phi} $$ \u7531\u4e8e\u6211\u4eec\u7684\u8ba8\u8bba\u5230\u4e8c\u9636\u9879\uff0c\u4e8c\u9636\u9879\u4e3a\uff1a $$ \\frac{1}{2}\\mathbf{h^T H_{\\rho}(x)h} = \\frac{1}{2} \\begin{bmatrix} h_1 &amp; h_2 &amp; h_3 \\end{bmatrix} \\begin{bmatrix} \\rho_{11} &amp; \\rho_{12} &amp; \\rho_{13} \\\\ \\rho_{21} &amp; \\rho_{22} &amp; \\rho_{23} \\\\ \\rho_{31} &amp; \\rho_{32} &amp; \\rho_{33} \\end{bmatrix} \\begin{bmatrix} h_1 \\\\ h_2 \\\\ h_3 \\end{bmatrix} =\\frac{1}{2}[h_1^2\\rho_{11}+h_2^2\\rho_{22}+h_3^2\\rho_{33}+] $$</p> \\[ \\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{1}{2}\\mathbf{h^T H_{\\rho}(x)h}\\frac{-3a^2}{(r^2+a^2)^{5/2}}) \\]"},{"location":"ED/Chap01/Note/Note/#18-greens-theorem","title":"1.8 Green's Theorem:","text":"<p>\u5bf9\u4e8e\u4e00\u822c\u7684\u9759\u7535\u573a\u95ee\u9898\u800c\u8a00\uff0c\u7535\u8377\u5206\u5e03\u90fd\u662f\u4e0d\u5e26\u6709\u8fb9\u754c\u7684\uff0c\u8981\u4e48\u662f\u8fde\u7eed\u7684\uff0c\u8981\u4e48\u662f\u5c40\u90e8\u79bb\u6563\u7684\uff08\u591a\u4e2a\u7535\u8377\u5355\u72ec\u5b58\u5728\uff09\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u7535\u573a\u7684\u5b9a\u4e49\u5f0f\u89e3\u51b3\uff1a $$ \\mathbf{E(x)} = \\frac{1}{4\\pi\\epsilon_0} \\int_V \\frac{\\rho(\\mathbf{x'})}{\\abs{\\mathbf{x-x'}}^3}(\\mathbf{x-x'})d^3x' $$ \u5bf9\u4e8e\u8fde\u7eed\u7535\u8377\u5206\u5e03\u76f4\u63a5\u79ef\u5206\uff0c\u5bf9\u4e8e\u5c40\u90e8\u79bb\u6563\u7684\u7535\u8377\u901a\u8fc7\u7535\u573a\u7684\u53e0\u52a0\u6765\u8ba1\u7b97\u7a7a\u95f4\u4e2d\u4efb\u610f\u4e00\u5904\u7684\u7535\u573a\u3002</p> <p>\u4f46\u662f\u5f53\u95ee\u9898\uff08\u6c42\u7a7a\u95f4\u4e2d\u4efb\u610f\u4e00\u70b9\u7684\u7535\u573a\uff09\u6240\u6d89\u53ca\u7684\u7a7a\u95f4\u4e2d\u542b\u6709\u6709\u9650\u4e2a\u533a\u57df\u65f6\uff0c\u533a\u57df\u7684\u8fb9\u754c\u5904\u5c31\u4f1a\u5b58\u5728\u76f8\u5e94\u7684\u8fb9\u754c\u6761\u4ef6\u4e86\uff0c\u5982\u679c\u76f4\u63a5\u7528\u7535\u573a\u7684\u5b9a\u4e49\u6765\u505a\u4e0d\u592a\u65b9\u4fbf\u3002</p> <p>\u4f46\u662f\u6839\u636e\u524d\u9762\u7535\u573a\u4e0e\u7535\u52bf\u8d1f\u68af\u5ea6\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6c42\u7535\u52bf\u95f4\u63a5\u6c42\u5f97\u7535\u573a\uff0c\u7a7a\u95f4\u4e2d\u7684\u7535\u52bf\u6ee1\u8db3Poisson Equation(\\(\\nabla^2\\Phi(\\mathbf{x})= -\\rho(\\mathbf{x})/\\epsilon_0\\))\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u521d\u59cb\u6761\u4ef6\u6216\u8005\u8fb9\u754c\u6761\u4ef6\u624d\u80fd\u786e\u5b9a\u7535\u52bf\u3002Green Theorem \u544a\u8bc9\u6211\u4eec\u8fb9\u754c\u6761\u4ef6\u5bf9\u4e8e\u7535\u52bf\u7684\u5f71\u54cd\uff1a</p> <p>Green's Theorem:</p> <p>\u5728\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u4f53\u79efV\u4e2d\uff08\u8fd9\u4e2a\u4f53\u79ef\u88ab\u4e00\u4e2a\u95ed\u5408\u7684\u66f2\u9762\u6240\u5305\u56f4,\u66f2\u9762\u4e0a\u4efb\u610f\u4e00\u5904\u7684\u6cd5\u5411\u91cf\uff08normal direction\uff09\u79f0\u4e3a \\(\\mathbf{n(x)}\\)\uff09\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u826f\u5b9a\u4e49\u7684\u5411\u91cf\u573a \\(\\mathbf{A(x)}\\)\uff0c\u6839\u636e\u6563\u5ea6\u5b9a\u7406\u6709\uff1a $$ \\int_V \\div\\mathbf{A} d^3x = \\oint_S \\mathbf{A\\cdot n}da $$ \u7136\u540e\u5bf9\u4e8e\u53d6 \\(\\mathbf{A} = \\phi\\grad\\psi\\),\u5176\u4e2d \\(\\phi,\\psi\\)\u90fd\u662f\u7a7a\u95f4\u4e2d\u826f\u5b9a\u4e49\u7684Scalar field\uff0c\u5219\u6563\u5ea6\u5b9a\u7406\u53d8\u4e3a\uff1a $$ \\int_V \\div(\\phi\\grad\\psi) d^3x = \\oint_S \\phi\\grad\\psi \\cdot \\mathbf{n} da = \\oint_S\\phi\\frac{\\partial}{\\partial n}\\psi\\,da \\\\\\\\ \\int_V (\\grad{\\phi} \\cdot \\grad\\psi +\\phi\\nabla^2\\psi\uff09d^3x = \\oint_S\\phi\\frac{\\partial}{\\partial n}\\psi\\,da $$ \u5f97\u5230\u4e86Green 's First Identity.</p> <p>\u7136\u540e\u5c06\u683c\u6797\u7b2c\u4e00\u6052\u7b49\u5f0f\u4e2d\u7684 \\(\\psi \u548c \\phi \u4ea4\u6362\\)\uff0c\u4e24\u8005\u76f8\u51cf\u5f97\u5230Green\u2018s Theorem\uff1a $$ \\int_V (\\phi\\nabla^2\\psi-\\psi\\nabla^2\\phi\uff09d^3x = \\oint_S[\\phi\\frac{\\partial}{\\partial n}\\psi-\\psi\\frac{\\partial}{\\partial n}\\phi]\\,da $$ \u7136\u540e\u4e3a\u4e86\u5f97\u5230\u5173\u4e8ePossion\u65b9\u7a0b\u7684\u89e3\u548c\u8fb9\u754c\u6761\u4ef6\u5173\u7cfb\uff0c\u6211\u4eec\u53d6 \\(\\phi = \\Phi,\\psi = 1/R = 1/\\abs{\\mathbf{x-x'}}\\),Green Theorem \u53d8\u4e3a\uff1a $$ \\int_V (\\Phi(\\mathbf{x'})\\nabla^2{\\frac{1}{R}}-\\frac{1}{R}\\nabla^2\\Phi(\\mathbf{x'})\uff09d^3x' =   \u3000\u3000\u3000\\oint_S[\\Phi\\frac{\\partial}{\\partial n'}(\\frac{1}{R})-\\frac{1}{R}\\frac{\\partial}{\\partial n'}\\Phi]\\,da' \\\\ \\int_V [\\Phi(\\mathbf{x'})[-4\\pi\\delta(\\mathbf{x-x'})]-\\frac{1}{R}(\\frac{-\\rho(\\mathbf{x'})}{\\epsilon_0})]d^3x' = \\oint_S[\\Phi\\frac{\\partial}{\\partial n'}(\\frac{1}{R})-\\frac{1}{R}\\frac{\\partial \\Phi}{\\partial n'}]\\,da' $$ \u5f53 \u7814\u7a76\u7684\u573a\u70b9 \\(\\mathbf{x}\\)\u5728\u533a\u57dfV\u5185\uff0c\u5219\uff1a $$ \\Phi(\\mathbf{x}) = \\frac{1}{4\\pi\\epsilon_0}\\int_V \\frac{\\rho(\\mathbf{x'})}{R}d^3x'+\\frac{1}{4\\pi}\\oint_S[\\frac{1}{R}\\frac{\\partial \\Phi}{\\partial n'}-\\Phi\\frac{\\partial}{\\partial n'}(\\frac{1}{R})]\\,da' $$ \u4e0a\u5f0f\u7684\u7269\u7406\u610f\u4e49\u662f\uff0c\u5bf9\u4e8e\u67d0\u4e00\u79cd\u7535\u8377\u5206\u5e03\u7684\u533a\u57dfV\u5185\u7684\u7535\u52bf \\(\\Phi(\\mathbf{x})\\)\u4f1a\u7b49\u4e8e\u5185\u90e8\u7535\u8377\u9020\u6210\u7684\u7535\u52bf\uff0c\u4ee5\u53ca\u4e24\u4e2a\u8fb9\u754c\u6761\u4ef6\u9020\u6210\u7684Virtual Potential\u7684\u548c\uff0c\u7b2c\u4e00\u4e2a\u8fb9\u754c\u6761\u4ef6 (Neumman Condition) \\(\\frac{\\partial\\Phi}{\\partial n'} ((\u6216\u8005\u8fb9\u754c\u5904\u7684\u7535\u573a)\uff0c\u8fd9\u4e2a\u8fb9\u754c\u6761\u4ef6\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u5728\u5c01\u95ed\u66f2\u9762S\u4e0a\u7684\u9762\u7535\u8377\u5206\u5e03 \\(\\sigma = \\epsilon_0\\frac{\\partial\\Phi}{\\partial n'}\\)\u9020\u6210\u7684\u7535\u52bf\uff0c\u7b2c\u4e8c\u4e2a\u8fb9\u754c\u6761\u4ef6\uff08Dirichelet Condition\uff09\\)\\Phi\\)(\u8fb9\u754c\u5904\u7684\u7535\u52bf)\uff0c\u8fd9\u4e2a\u8fb9\u754c\u6761\u4ef6\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u5728\u5c01\u95ed\u66f2\u9762S\u5904\u5b58\u5728\u4e00\u4e2a\u5f88\u8584\u7684dipole layer with\u00a0 \\(D = -\\epsilon_0 \\Phi\\)\u6240\u9020\u6210\u7684\u7535\u52bf\u3002</p> <p>\u5bf9\u4e8e\u5f0f83\uff0c\u8fd8\u6709\u4e09\u4e2a\u89c2\u5bdf\uff1a</p> <ol> <li>\u5f53 \\(x\u4e0d\u5728V\u5185\u65f6\\)\uff0c\u5f0f83\u7684\u5de6\u8fb9\u4e3a0\uff0c\u5219\u6b64\u65f6\u8868\u660e\u5916\u90e8\u573a\u70b9\u7684\u7535\u52bf\u4e3a0\uff0c\u5e76\u4e14\u662f\u7531\u4e24\u90e8\u5206\u8d21\u732e\u5f97\u5230\u7684\u3002</li> <li>\u5f53\u5185\u90e8\u6ca1\u6709\u7535\u8377\u5b58\u5728\u65f6\uff08 \\(\\rho(x') = 0\\) in V\uff09,\u6b64\u65f6V\u5185\u90e8\u5404\u5904\u7684\u7535\u52bf\u90fd\u53ef\u4ee5\u8868\u793a\u6210\u5b83\u8fb9\u754c\u4e0a\u7684\u7535\u52bf\u4e0e\u8fb9\u754c\u4e0a\u7535\u573a\u4e24\u90e8\u5206\u7684\u79ef\u5206\u3002</li> <li>\u5f53\u5c01\u95ed\u66f2\u9762S\u8d8b\u4e8e\u65e0\u7a77\u5927\uff0c\u82e5\u6b64\u65f6\u5728\u8fb9\u754c\u5904\u7684\u7535\u573a\u7684\u4e0b\u964d\u5730\u5feb\u4e8e \\(R^{-1}\\)\uff0c\u90a3\u4e48\u6b64\u65f6\u5f0f83\u7684Surface Integral\u5c31\u8d8b\u4e8e0\uff0c\u6b64\u65f6\u7535\u52bf\u7684\u8868\u8fbe\u5f0f\u56de\u5230\u4e86\u6700\u521d\u7684\u5b9a\u4e49\u3002</li> </ol>"},{"location":"ED/Chap01/Note/Note/#19-uniqueness-of-the-solution-with-dirichlet-or-neumann-boundary-conditions","title":"1.9 Uniqueness of the Solution with Dirichlet or Neumann Boundary Conditions","text":"<p>\u5bf9\u4e8ePoisson Equation / laplace Equation\u8fd9\u7c7b\u5fae\u5206\u65b9\u7a0b\u800c\u8a00\uff0c\u4ec0\u4e48\u6837\u7684\u8fb9\u754c\u51b3\u5b9a\u4e86\u4ec0\u4e48\u6837\u7684\u89e3\uff1f</p> <p>\u90a3\u4e48\u6211\u4eec\u611f\u5174\u8da3\u7684\u662f\u600e\u4e48\u6837\u7684\u8fb9\u754c\u6761\u4ef6\u80fd\u591f\u5e26\u6765\u552f\u4e00\uff08Unique\uff09\u7684\u5e76\u4e14\u826f\u5b9a\u4e49\u7684\uff08\u7269\u7406\u4e0a\u53ef\u89e3\u91ca\u7684\uff09solution \u3002</p> <p>\u7269\u7406\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5fae\u5206\u65b9\u7a0b\u7684\u8fb9\u754c\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\uff1a</p> <ol> <li>Dirichlet \u8fb9\u754c\u6761\u4ef6,\u8fd9\u79cd\u8fb9\u754c\u6761\u4ef6\u7ed9\u51fa\u4e86\u7535\u52bf\u5728\u8fb9\u754c\u9762\u4e0a\u7684\u53d6\u503c</li> <li>Neumann\u8fb9\u754c\u6761\u4ef6\uff0c\u7ed9\u51fa\u4e86\u8fb9\u754c\u5904\u7684\u7535\u573a\u7684\u5927\u5c0f\uff0c\u6216\u8005\u8bf4\u5728\u8fb9\u754c\u5904\u7535\u52bf\u662f\u600e\u4e48\u53d8\u5316\u7684\u3002</li> </ol> <p>\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e24\u79cd\u6761\u4ef6\uff0c\u6211\u4eec\u73b0\u5728\u8981\u8bc1\u660e\u5f53\u8981\u89e3\u51b3\u5904\u4e8e\u67d0\u4e00\u4e2aVolume V \u5185\u90e8\u5e76\u4e14\u8fb9\u754c\u6761\u4ef6\u662f\u4e0a\u9762\u4e24\u4e2a\u6761\u4ef6\u4e4b\u4e00\u7684\u60c5\u51b5\u65f6\uff0cPoisson Equation  $\\nabla^2  \\Phi  = - \\rho / \\epsilon_0 $ \u7684\u89e3\u5177\u6709\u552f\u4e00\u6027\u3002</p> <p>\u9996\u5148\uff0c\u5047\u8bbe\u5b58\u5728\u4e24\u4e2a\u6ee1\u8db3\u540c\u6837\u8fb9\u754c\u6761\u4ef6\u7684\u89e3 \\(\\Phi_1,\\Phi_2\\) ,\u53d6\uff1a $$ U = \\Phi_2 - \\Phi_1 $$ \u56e0\u4e3a\u4e24\u4e2a\u90fd\u662fPoisson \u65b9\u7a0b\u7684\u89e3\uff0c\u90a3\u4e48U\u5c31\u4f1a\u6ee1\u8db3\uff1a $$ \\nabla^2\\Phi_2 = \\nabla^2\\Phi_1 = -\\rho/\\epsilon_0 \\implies\\nabla^2 U = 0 $$ \u5e76\u4e14\u4e24\u4e2a\u89e3\u90fd\u6ee1\u8db3\u540c\u4e00\u79cd\u8fb9\u754c\u6761\u4ef6\uff0c\u90a3\u4e48U\u5728\u8fb9\u754c\u5904\u5c31\u4f1a\u6ee1\u8db3\uff1a $$ U = 0 \\, , \\frac{\\partial U}{\\partial n } = 0 $$ Green's first Identity: $$ \\int_V (\\grad{\\phi} \\cdot \\grad\\psi +\\phi\\nabla^2\\psi\uff09d^3x = \\oint_S\\phi\\frac{\\partial}{\\partial n}\\psi\\,da $$ \u53d6 \\(\\phi = \\psi = U\\),\u6211\u4eec\u770b\u4e00\u4e0bScalar field U \u7684\u8fb9\u754c\u6761\u4ef6\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a $$ \\int_V (U\\nabla^2 U+ \\grad U \\cdot\\grad U)d^3x = \\oint_S U \\frac{\\partial U}{\\partial n} da $$ \u56e0\u4e3aU \u5728\u8fb9\u754c\u5904\u8981\u4e48\u6ee1\u8db3 \\(U = 0\\) or \\(\\partial U / \\partial n =0\\)\u4ee5\u53caU\u6ee1\u8db3Laplacian \u7b49\u5f0f\uff0c\u6240\u4ee5\u5f97\u5230\u5bf9\u4e8e\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684U \uff1a $$ \\int_V \\abs{\\grad{U}}^2 d^3x = 0 $$ \u4e0a\u9762\u8fd9\u4e2a\u7ed3\u8bba\u8868\u660e U \u5728\u79ef\u5206\u533a\u57dfV \u5185\u90e8\u7684\u68af\u5ea6\u4e3a0\uff08\u5f62\u8c61\u5730\u7406\u89e3\u5c31\u662f\u5728\u5185\u90e8\u6ca1\u6709\u53d8\u5316\uff09\uff0c\u90a3\u4e48\u5728V \u5185\u90e8 U\u5c31\u662f\u4e00\u4e2a\u5e38\u6570\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8eDirichlet \u6761\u4ef6\u800c\u8a00\uff0cU\u5728\u8fb9\u754c\u5904\u4e3a0\uff0c\u6240\u4ee5\u6b64\u65f6U \u5728\u5185\u90e8\u4e5f\u4e3a0\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a\u89e3  \\(\\Phi_1 , \\Phi_2\\) \u5728V \u5185\u76f8\u7b49\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a\u89e3\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u6b64\u65f6\u8fd9\u4e2a\u89e3\u662f Unique\u7684\u3002</p> <p>\u5bf9\u4e8e Neumann \u6761\u4ef6\u800c\u8a00\uff0c U \u5728\u8fb9\u754c\u53d8\u5316\u7387\u4e3a0\uff0c\u90a3\u4e48\u5728V\u5185\u7684U \u5c31\u53ef\u4ee5\u662f\u4e00\u4e2a\u4efb\u610f\u7684\u5e38\u6570\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u89e3\u5728\u67d0\u4e00\u4e2a\u65e0\u5173\u7684\u5e38\u6570\u4e0a\u662fUnique\u7684\u3002</p>"},{"location":"ED/Chap01/Probs/test/","title":"Chap 1 Problems","text":"<p>nihao1 \\(\\Phi_1 ,\\Phi_2\\) wddwfefe $$ \\begin{gathered} (1)\\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_1}}(\\mathbf{x})(x_1-x_1')\\frac{-3a^2}{(r^2+a^2)^{5/2}}  \\ \\propto \\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_1}}r\\sin{\\theta}\\cos{\\phi}\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\\\ = \\int_0^{2\\pi}\\cos{\\phi}d \\phi\\int_0^{\\pi}\\sin^2{\\theta}d\\theta\\int_0^{R} \\frac{\\partial{\\rho}}{\\partial{x_1}}\\frac{-3a^2r^3}{(r^2+a^2)^{5/2}}dr =0 \\\\ (2)\\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_2}}(\\mathbf{x})(x_2-x_2')\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\ \\propto \\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_1}}r\\sin{\\theta}\\sin{\\phi}\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\\\  = \\int_0^{2\\pi}\\sin{\\phi}d \\phi\\int_0^{\\pi}\\sin^2{\\theta}d\\theta\\int_0^{R} \\frac{\\partial{\\rho}}{\\partial{x_1}}\\frac{-3a^2r^3}{(r^2+a^2)^{5/2}}dr =0 \\\\  (3)\\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_3}}(\\mathbf{x})(x_3-x_3')\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\ \\propto \\int_0^{4\\pi} d\\Omega\\int_0^{R}r^2dr \\frac{\\partial{\\rho}}{\\partial{x_1}}r\\cos{\\theta}\\frac{-3a^2}{(r^2+a^2)^{5/2}} \\\\  = \\int_0^{2\\pi} d \\phi\\int_0^{\\pi}\\sin{\\theta}\\cos{\\theta}d\\theta\\int_0^{R} \\frac{\\partial{\\rho}}{\\partial{x_1}}\\frac{-3a^2r^3}{(r^2+a^2)^{5/2}}dr =0 \\end{gathered} $$ \\(\\infty\\)</p>"}]}